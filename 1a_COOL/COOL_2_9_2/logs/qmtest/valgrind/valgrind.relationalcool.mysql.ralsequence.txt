==xxxxx== Memcheck, a memory error detector
==xxxxx== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==xxxxx== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==xxxxx== Command: test_RelationalCool_RalSequence
==xxxxx== Parent PID: xxxxx
==xxxxx== 
--xxxxx-- 
--xxxxx-- Valgrind options:
--xxxxx--    -v
--xxxxx--    --leak-check=full
--xxxxx--    --show-reachable=yes
--xxxxx--    --error-limit=no
--xxxxx--    --log-file=/home/avalassi/COOL/COOL_2_8_17/src/logs/qmtest/valgrind/x86_64-slc5-gcc46-dbg/valgrind.relationalcool.mysql.ralsequence.txt
--xxxxx--    --suppressions=/home/avalassi/CORAL/CORAL_2_3_26/src/config/scripts/valgrind.supp
--xxxxx--    --gen-suppressions=all
--xxxxx--    --num-callers=50
--xxxxx--    --track-origins=yes
--xxxxx-- Contents of /proc/version:
--xxxxx--   Linux version 2.6.18-308.20.1.el5 (mockbuild@lxdist03) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-52)) #1 SMP Wed Nov 14 10:31:58 CET 2012
--xxxxx-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--xxxxx-- Page sizes: currently 4096, max supported 4096
--xxxxx-- Valgrind library directory: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/tests/bin/test_RelationalCool_RalSequence (0x400000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/memcheck-amd64-linux (0x38000000)
--xxxxx--    object doesn't have a dynamic symbol table
--xxxxx-- Reading syms from /lib64/ld-2.5.so (0x301c400000)
--xxxxx-- Reading suppressions file: /home/avalassi/CORAL/CORAL_2_3_26/src/config/scripts/valgrind.supp
--xxxxx-- Reading suppressions file: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/default.supp
==xxxxx== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== 
==xxxxx== TO CONTROL THIS PROCESS USING vgdb (which you probably
==xxxxx== don't want to do, unless you know exactly what you're doing,
==xxxxx== or are doing some strange experiment):
==xxxxx==   /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx ...command...
==xxxxx== 
==xxxxx== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==xxxxx==   /path/to/gdb test_RelationalCool_RalSequence
==xxxxx== and then give GDB the following command
==xxxxx==   target remote | /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx
==xxxxx== --pid is optional if only one valgrind process is running
==xxxxx== 
--xxxxx-- REDIR: 0x301c4147a0 (strlen) redirected to 0x380437e7 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/vgpreload_core-amd64-linux.so (0x4803000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/vgpreload_memcheck-amd64-linux.so (0x4a05000)
--xxxxx-- REDIR: 0x301c414770 (strcmp) redirected to 0x4a0a6f0 (strcmp)
--xxxxx-- REDIR: 0x301c4145c0 (index) redirected to 0x4a09730 (index)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCore.so (0x4c0f000)
--xxxxx-- Reading syms from /lib64/libdl-2.5.so (0x301d400000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalCool.so (0x57a4000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_CoolKernel.so (0x59c4000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_filesystem-gcc46-mt-1_48.so.1.48.0 (0x5a10000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_date_time-gcc46-mt-1_48.so.1.48.0 (0x5c2e000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_system-gcc46-mt-1_48.so.1.48.0 (0x5e3e000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_thread-gcc46-mt-1_48.so.1.48.0 (0x6042000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralBase.so (0x625c000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralKernel.so (0x62d6000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalAccess.so (0x6318000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/CppUnit/1.12.1_p1/x86_64-slc5-gcc46-opt/lib/libcppunit-1.12.so.1.0.0 (0x635d000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16 (0x659d000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libm-2.5.so (0x301cc00000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libgcc_s.so.1 (0x68a3000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libpthread-2.5.so (0x301d800000)
--xxxxx-- Reading syms from /lib64/libc-2.5.so (0x301c800000)
--xxxxx-- Reading syms from /lib64/libz.so.1.2.3 (0x301d000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCint.so (0x6ab9000)
--xxxxx-- Reading syms from /lib64/librt-2.5.so (0x301f000000)
--xxxxx-- REDIR: 0x301c87a010 (memset) redirected to 0x4a0bb50 (memset)
--xxxxx-- REDIR: 0x301c87b450 (memcpy) redirected to 0x4a0aca0 (memcpy)
--xxxxx-- REDIR: 0x301c879150 (rindex) redirected to 0x4a09520 (rindex)
--xxxxx-- REDIR: 0x301c878d60 (strlen) redirected to 0x4a09a70 (strlen)
--xxxxx-- REDIR: 0x301c8787e0 (strcmp) redirected to 0x4a0a630 (strcmp)
--xxxxx-- REDIR: 0x6654e40 (operator new[](unsigned long)) redirected to 0x4a0884d (operator new[](unsigned long))
--xxxxx-- REDIR: 0x6654d10 (operator new(unsigned long)) redirected to 0x4a08d37 (operator new(unsigned long))
--xxxxx-- REDIR: 0x301c873ae0 (calloc) redirected to 0x4a07b9b (calloc)
--xxxxx-- REDIR: 0x301c878fe0 (strncmp) redirected to 0x4a09ed0 (strncmp)
--xxxxx-- REDIR: 0x6652fe0 (operator delete(void*)) redirected to 0x4a081ef (operator delete(void*))
--xxxxx-- REDIR: 0x301c873ec0 (malloc) redirected to 0x4a091a1 (malloc)
--xxxxx-- REDIR: 0x301c878820 (strcpy) redirected to 0x4a09ab0 (strcpy)
--xxxxx-- REDIR: 0x301c879e70 (memmove) redirected to 0x4a0bbe0 (memmove)
--xxxxx-- REDIR: 0x301c878630 (index) redirected to 0x4a095f0 (index)
--xxxxx-- REDIR: 0x301c8799d0 (bcmp) redirected to 0x4a0b770 (bcmp)
--xxxxx-- REDIR: 0x301c879520 (strstr) redirected to 0x4a0c270 (strstr)
--xxxxx-- REDIR: 0x301c875850 (free) redirected to 0x4a084dd (free)
--xxxxx-- REDIR: 0xffffffffff600000 (???) redirected to 0x380437d3 (vgPlain_amd64_linux_REDIR_FOR_vgettimeofday)
--xxxxx-- REDIR: 0x301c87ab40 (mempcpy) redirected to 0x4a0bf80 (mempcpy)
--xxxxx-- REDIR: 0x301c833230 (setenv) redirected to 0x4a0c610 (setenv)
--xxxxx-- REDIR: 0x6653020 (operator delete[](void*)) redirected to 0x4a07e6b (operator delete[](void*))
--xxxxx-- REDIR: 0x301c8790a0 (strncpy) redirected to 0x4a09c50 (strncpy)
--xxxxx-- REDIR: 0x301c878e50 (strnlen) redirected to 0x4a09a10 (strnlen)
--xxxxx-- REDIR: 0x301c8759e0 (realloc) redirected to 0x4a09252 (realloc)
--xxxxx-- REDIR: 0x301c87b2f0 (strcasecmp) redirected to 0x4a09fd0 (strcasecmp)
--xxxxx-- REDIR: 0x301c879850 (memchr) redirected to 0x4a0a7b0 (memchr)
--xxxxx-- REDIR: 0x301c878470 (strcat) redirected to 0x4a09770 (strcat)
--xxxxx-- REDIR: 0x301c87c0b0 (rawmemchr) redirected to 0x4a0beb0 (rawmemchr)
--xxxxx-- REDIR: 0x301c87c200 (strchrnul) redirected to 0x4a0be80 (strchrnul)
--xxxxx-- REDIR: 0x301c87b330 (strncasecmp) redirected to 0x4a0a0d0 (strncasecmp)
--xxxxx-- REDIR: 0x301c87b150 (stpcpy) redirected to 0x4a0b810 (stpcpy)
--xxxxx-- Reading syms from /lib64/libnss_files-2.5.so (0x7c55000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_ConnectionService.so (0x7e60000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralCommon.so (0x7eff000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalService.so (0x7f7d000)
--xxxxx-- REDIR: 0x301c4158f0 (stpcpy) redirected to 0x4a0ba80 (stpcpy)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_XMLLookupService.so (0x7fa7000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/XercesC/3.1.1p1/x86_64-slc5-gcc46-opt/lib/libxerces-c-3.1.so (0x7fde000)
--xxxxx-- Reading syms from /usr/lib64/gconv/UTF-16.so (0x858a000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_MySQLAccess.so (0x8b8d000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/mysql/5.5.14/x86_64-slc5-gcc46-opt/lib/libmysqlclient.so.18.0.0 (0x8c82000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_XMLAuthenticationService.so (0x9166000)
--xxxxx-- Reading syms from /lib64/libnss_dns-2.5.so (0x9b9b000)
--xxxxx-- Reading syms from /lib64/libresolv-2.5.so (0x3023800000)
==xxxxx== Source and destination overlap in memcpy(0x8ae081e, 0x8ae081e, 21)
==xxxxx==    at 0x4A0AD10: memcpy (mc_replace_strmem.c:838)
==xxxxx==    by 0x8CAF44F: old_password_auth_client (client.c:4298)
==xxxxx==    by 0x8CB1E3C: run_plugin_auth (client.c:2910)
==xxxxx==    by 0x8CB2917: mysql_real_connect (client.c:3429)
==xxxxx==    by 0x8C27E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x7EB72E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x7ED5632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x7EBD9FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x7EBF83E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x7ED738B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x7ECC92F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x7ECD036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0x633E4D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0x5881D0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0x58B50A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0x58B4301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0x588AD5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0x40E8B2: cool::RalSequenceTest::coolUnitTest_setUp() (test_RalSequence.cpp:113)
==xxxxx==    by 0x40B1F9: cool::CoolUnitTest::setUp() (CoolUnitTest.h:459)
==xxxxx==    by 0x4104C8: CppUnit::TestCaller<cool::RalSequenceTest>::setUp() (TestCaller.h:177)
==xxxxx==    by 0x6381070: CppUnit::TestCaseMethodFunctor::operator()() const (TestCase.cpp:32)
==xxxxx==    by 0x6377014: CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (DefaultProtector.cpp:15)
==xxxxx==    by 0x637E021: CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (ProtectorChain.cpp:77)
==xxxxx==    by 0x6386C84: CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::string const&) (TestResult.cpp:178)
==xxxxx==    by 0x6380C08: CppUnit::TestCase::run(CppUnit::TestResult*) (TestCase.cpp:87)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6386C09: CppUnit::TestResult::runTest(CppUnit::Test*) (TestResult.cpp:145)
==xxxxx==    by 0x63890A8: CppUnit::TestRunner::run(CppUnit::TestResult&, std::string const&) (TestRunner.cpp:96)
==xxxxx==    by 0x40BA42: cool::TextTestRunner::run(CppUnit::TestResult&, std::string const&) (CoolUnitTest.h:250)
==xxxxx==    by 0x638B395: CppUnit::TextTestRunner::run(std::string, bool, bool, bool) (TextTestRunner.cpp:64)
==xxxxx==    by 0x40BAAF: cool::TextTestRunner::run(std::string, bool, bool, bool) (CoolUnitTest.h:263)
==xxxxx==    by 0x40AE9A: cool::CoolUnitTest::Main(int, char**) (CoolUnitTest.h:407)
==xxxxx==    by 0x40B2F0: main (test_RalSequence.cpp:141)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Overlap
   fun:memcpy
   fun:old_password_auth_client
   fun:run_plugin_auth
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool15RalSequenceTest18coolUnitTest_setUpEv
   fun:_ZN4cool12CoolUnitTest5setUpEv
   fun:_ZN7CppUnit10TestCallerIN4cool15RalSequenceTestEE5setUpEv
   fun:_ZNK7CppUnit21TestCaseMethodFunctorclEv
   fun:_ZN7CppUnit16DefaultProtector7protectERKNS_7FunctorERKNS_16ProtectorContextE
   fun:_ZN7CppUnit14ProtectorChain7protectERKNS_7FunctorERKNS_16ProtectorContextE
   fun:_ZN7CppUnit10TestResult7protectERKNS_7FunctorEPNS_4TestERKSs
}
--xxxxx-- Discarding syms at 0x858a560-0x858bcd8 in /usr/lib64/gconv/UTF-16.so due to munmap()
--xxxxx-- Discarding syms at 0x7c56fe0-0x7c5d268 in /lib64/libnss_files-2.5.so due to munmap()
--xxxxx-- Discarding syms at 0x9b9bfe0-0x9b9e898 in /lib64/libnss_dns-2.5.so due to munmap()
--xxxxx-- Discarding syms at 0x3023803310-0x302380e328 in /lib64/libresolv-2.5.so due to munmap()
==xxxxx== 
==xxxxx== HEAP SUMMARY:
==xxxxx==     in use at exit: 1,188,372 bytes in 12,958 blocks
==xxxxx==   total heap usage: 36,173 allocs, 23,215 frees, 6,173,971 bytes allocated
==xxxxx== 
==xxxxx== Searching for pointers to 12,958 not-freed blocks
==xxxxx== Checked 11,515,928 bytes
==xxxxx== 
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 4,772 of 10,484
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x8CCAD21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x8CC96FA: my_error_register (my_error.c:195)
==xxxxx==    by 0x8CABB2C: mysql_server_init (libmysql.c:132)
==xxxxx==    by 0x8CB163E: mysql_init (client.c:1699)
==xxxxx==    by 0x8BFE9BA: coral::MySQLAccess::Connection::initialize() (Connection.cpp:218)
==xxxxx==    by 0x8BFDEB0: coral::MySQLAccess::Connection::Connection(coral::MySQLAccess::DomainProperties const&, std::string const&) (Connection.cpp:39)
==xxxxx==    by 0x8C037BC: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x7EBD92E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x7EBF83E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x7ED738B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x7ECC92F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x7ECD036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0x633E4D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0x5881D0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0x58B50A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0x58B4301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0x588AD5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0x40E8B2: cool::RalSequenceTest::coolUnitTest_setUp() (test_RalSequence.cpp:113)
==xxxxx==    by 0x40B1F9: cool::CoolUnitTest::setUp() (CoolUnitTest.h:459)
==xxxxx==    by 0x4104C8: CppUnit::TestCaller<cool::RalSequenceTest>::setUp() (TestCaller.h:177)
==xxxxx==    by 0x6381070: CppUnit::TestCaseMethodFunctor::operator()() const (TestCase.cpp:32)
==xxxxx==    by 0x6377014: CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (DefaultProtector.cpp:15)
==xxxxx==    by 0x637E021: CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (ProtectorChain.cpp:77)
==xxxxx==    by 0x6386C84: CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::string const&) (TestResult.cpp:178)
==xxxxx==    by 0x6380C08: CppUnit::TestCase::run(CppUnit::TestResult*) (TestCase.cpp:87)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6386C09: CppUnit::TestResult::runTest(CppUnit::Test*) (TestResult.cpp:145)
==xxxxx==    by 0x63890A8: CppUnit::TestRunner::run(CppUnit::TestResult&, std::string const&) (TestRunner.cpp:96)
==xxxxx==    by 0x40BA42: cool::TextTestRunner::run(CppUnit::TestResult&, std::string const&) (CoolUnitTest.h:250)
==xxxxx==    by 0x638B395: CppUnit::TextTestRunner::run(std::string, bool, bool, bool) (TextTestRunner.cpp:64)
==xxxxx==    by 0x40BAAF: cool::TextTestRunner::run(std::string, bool, bool, bool) (CoolUnitTest.h:263)
==xxxxx==    by 0x40AE9A: cool::CoolUnitTest::Main(int, char**) (CoolUnitTest.h:407)
==xxxxx==    by 0x40B2F0: main (test_RalSequence.cpp:141)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_error_register
   fun:mysql_server_init
   fun:mysql_init
   fun:_ZN5coral11MySQLAccess10Connection10initializeEv
   fun:_ZN5coral11MySQLAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool15RalSequenceTest18coolUnitTest_setUpEv
   fun:_ZN4cool12CoolUnitTest5setUpEv
   fun:_ZN7CppUnit10TestCallerIN4cool15RalSequenceTestEE5setUpEv
   fun:_ZNK7CppUnit21TestCaseMethodFunctorclEv
   fun:_ZN7CppUnit16DefaultProtector7protectERKNS_7FunctorERKNS_16ProtectorContextE
   fun:_ZN7CppUnit14ProtectorChain7protectERKNS_7FunctorERKNS_16ProtectorContextE
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 7,524 of 10,484
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x301C40BBAA: _dl_map_object_deps (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C410F01: dl_open_worker (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C40D135: _dl_catch_error (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C4108BB: _dl_open (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C909FDF: do_dlopen (in /lib64/libc-2.5.so)
==xxxxx==    by 0x301C40D135: _dl_catch_error (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C90A146: __libc_dlopen_mode (in /lib64/libc-2.5.so)
==xxxxx==    by 0x301D80F36B: pthread_cancel_init (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301D80F47F: _Unwind_ForcedUnwind (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301D80D2AF: __pthread_unwind (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301D807AB4: pthread_exit (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x8CCBCCA: nptl_pthread_exit_hack_handler (my_thr_init.c:57)
==xxxxx==    by 0x301D80683C: start_thread (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301C8D4FAC: clone (in /lib64/libc-2.5.so)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_error
   fun:__libc_dlopen_mode
   fun:pthread_cancel_init
   fun:_Unwind_ForcedUnwind
   fun:__pthread_unwind
   fun:pthread_exit
   fun:nptl_pthread_exit_hack_handler
   fun:start_thread
   fun:clone
}
==xxxxx== 144 bytes in 1 blocks are still reachable in loss record 8,240 of 10,484
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x8CCAD21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x8CC89B2: init_alloc_root (my_alloc.c:63)
==xxxxx==    by 0x8CB5940: mysql_client_plugin_init (client_plugin.c:238)
==xxxxx==    by 0x8CABB33: mysql_server_init (libmysql.c:133)
==xxxxx==    by 0x8CB163E: mysql_init (client.c:1699)
==xxxxx==    by 0x8BFE9BA: coral::MySQLAccess::Connection::initialize() (Connection.cpp:218)
==xxxxx==    by 0x8BFDEB0: coral::MySQLAccess::Connection::Connection(coral::MySQLAccess::DomainProperties const&, std::string const&) (Connection.cpp:39)
==xxxxx==    by 0x8C037BC: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x7EBD92E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x7EBF83E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x7ED738B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x7ECC92F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x7ECD036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0x633E4D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0x5881D0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0x58B50A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0x58B4301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0x588AD5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0x40E8B2: cool::RalSequenceTest::coolUnitTest_setUp() (test_RalSequence.cpp:113)
==xxxxx==    by 0x40B1F9: cool::CoolUnitTest::setUp() (CoolUnitTest.h:459)
==xxxxx==    by 0x4104C8: CppUnit::TestCaller<cool::RalSequenceTest>::setUp() (TestCaller.h:177)
==xxxxx==    by 0x6381070: CppUnit::TestCaseMethodFunctor::operator()() const (TestCase.cpp:32)
==xxxxx==    by 0x6377014: CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (DefaultProtector.cpp:15)
==xxxxx==    by 0x637E021: CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (ProtectorChain.cpp:77)
==xxxxx==    by 0x6386C84: CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::string const&) (TestResult.cpp:178)
==xxxxx==    by 0x6380C08: CppUnit::TestCase::run(CppUnit::TestResult*) (TestCase.cpp:87)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6386C09: CppUnit::TestResult::runTest(CppUnit::Test*) (TestResult.cpp:145)
==xxxxx==    by 0x63890A8: CppUnit::TestRunner::run(CppUnit::TestResult&, std::string const&) (TestRunner.cpp:96)
==xxxxx==    by 0x40BA42: cool::TextTestRunner::run(CppUnit::TestResult&, std::string const&) (CoolUnitTest.h:250)
==xxxxx==    by 0x638B395: CppUnit::TextTestRunner::run(std::string, bool, bool, bool) (TextTestRunner.cpp:64)
==xxxxx==    by 0x40BAAF: cool::TextTestRunner::run(std::string, bool, bool, bool) (CoolUnitTest.h:263)
==xxxxx==    by 0x40AE9A: cool::CoolUnitTest::Main(int, char**) (CoolUnitTest.h:407)
==xxxxx==    by 0x40B2F0: main (test_RalSequence.cpp:141)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:init_alloc_root
   fun:mysql_client_plugin_init
   fun:mysql_server_init
   fun:mysql_init
   fun:_ZN5coral11MySQLAccess10Connection10initializeEv
   fun:_ZN5coral11MySQLAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool15RalSequenceTest18coolUnitTest_setUpEv
   fun:_ZN4cool12CoolUnitTest5setUpEv
   fun:_ZN7CppUnit10TestCallerIN4cool15RalSequenceTestEE5setUpEv
   fun:_ZNK7CppUnit21TestCaseMethodFunctorclEv
   fun:_ZN7CppUnit16DefaultProtector7protectERKNS_7FunctorERKNS_16ProtectorContextE
}
==xxxxx== 36,792 bytes in 9 blocks are still reachable in loss record 10,482 of 10,484
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x8CCB0BC: my_once_alloc (my_once.c:58)
==xxxxx==    by 0x8CC47CE: init_state_maps (charset.c:62)
==xxxxx==    by 0x8CC5313: init_available_charsets (charset.c:452)
==xxxxx==    by 0x301D80C1D2: pthread_once (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x8CC56E0: get_charset_by_csname (charset.c:644)
==xxxxx==    by 0x8CB1857: mysql_init_character_set (client.c:2200)
==xxxxx==    by 0x8CB276E: mysql_real_connect (client.c:3370)
==xxxxx==    by 0x8C27E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x7EB72E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x7ED5632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x7EBD9FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x7EBF83E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x7ED738B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x7ECC92F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x7ECD036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0x633E4D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0x5881D0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0x58B50A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0x58B4301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0x588AD5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0x40E8B2: cool::RalSequenceTest::coolUnitTest_setUp() (test_RalSequence.cpp:113)
==xxxxx==    by 0x40B1F9: cool::CoolUnitTest::setUp() (CoolUnitTest.h:459)
==xxxxx==    by 0x4104C8: CppUnit::TestCaller<cool::RalSequenceTest>::setUp() (TestCaller.h:177)
==xxxxx==    by 0x6381070: CppUnit::TestCaseMethodFunctor::operator()() const (TestCase.cpp:32)
==xxxxx==    by 0x6377014: CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (DefaultProtector.cpp:15)
==xxxxx==    by 0x637E021: CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (ProtectorChain.cpp:77)
==xxxxx==    by 0x6386C84: CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::string const&) (TestResult.cpp:178)
==xxxxx==    by 0x6380C08: CppUnit::TestCase::run(CppUnit::TestResult*) (TestCase.cpp:87)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6386C09: CppUnit::TestResult::runTest(CppUnit::Test*) (TestResult.cpp:145)
==xxxxx==    by 0x63890A8: CppUnit::TestRunner::run(CppUnit::TestResult&, std::string const&) (TestRunner.cpp:96)
==xxxxx==    by 0x40BA42: cool::TextTestRunner::run(CppUnit::TestResult&, std::string const&) (CoolUnitTest.h:250)
==xxxxx==    by 0x638B395: CppUnit::TextTestRunner::run(std::string, bool, bool, bool) (TextTestRunner.cpp:64)
==xxxxx==    by 0x40BAAF: cool::TextTestRunner::run(std::string, bool, bool, bool) (CoolUnitTest.h:263)
==xxxxx==    by 0x40AE9A: cool::CoolUnitTest::Main(int, char**) (CoolUnitTest.h:407)
==xxxxx==    by 0x40B2F0: main (test_RalSequence.cpp:141)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_once_alloc
   fun:init_state_maps
   fun:init_available_charsets
   fun:pthread_once
   fun:get_charset_by_csname
   fun:mysql_init_character_set
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool15RalSequenceTest18coolUnitTest_setUpEv
   fun:_ZN4cool12CoolUnitTest5setUpEv
   fun:_ZN7CppUnit10TestCallerIN4cool15RalSequenceTestEE5setUpEv
}
==xxxxx== 36,792 bytes in 9 blocks are still reachable in loss record 10,483 of 10,484
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x8CCB0BC: my_once_alloc (my_once.c:58)
==xxxxx==    by 0x8CC47EA: init_state_maps (charset.c:65)
==xxxxx==    by 0x8CC5313: init_available_charsets (charset.c:452)
==xxxxx==    by 0x301D80C1D2: pthread_once (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x8CC56E0: get_charset_by_csname (charset.c:644)
==xxxxx==    by 0x8CB1857: mysql_init_character_set (client.c:2200)
==xxxxx==    by 0x8CB276E: mysql_real_connect (client.c:3370)
==xxxxx==    by 0x8C27E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x7EB72E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x7ED5632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x7EBD9FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x7EBF83E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x7ED738B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x7ECC92F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x7ECD036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0x633E4D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0x5881D0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0x58B50A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0x58B4301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0x588AD5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0x40E8B2: cool::RalSequenceTest::coolUnitTest_setUp() (test_RalSequence.cpp:113)
==xxxxx==    by 0x40B1F9: cool::CoolUnitTest::setUp() (CoolUnitTest.h:459)
==xxxxx==    by 0x4104C8: CppUnit::TestCaller<cool::RalSequenceTest>::setUp() (TestCaller.h:177)
==xxxxx==    by 0x6381070: CppUnit::TestCaseMethodFunctor::operator()() const (TestCase.cpp:32)
==xxxxx==    by 0x6377014: CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (DefaultProtector.cpp:15)
==xxxxx==    by 0x637E021: CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (ProtectorChain.cpp:77)
==xxxxx==    by 0x6386C84: CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::string const&) (TestResult.cpp:178)
==xxxxx==    by 0x6380C08: CppUnit::TestCase::run(CppUnit::TestResult*) (TestCase.cpp:87)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6386C09: CppUnit::TestResult::runTest(CppUnit::Test*) (TestResult.cpp:145)
==xxxxx==    by 0x63890A8: CppUnit::TestRunner::run(CppUnit::TestResult&, std::string const&) (TestRunner.cpp:96)
==xxxxx==    by 0x40BA42: cool::TextTestRunner::run(CppUnit::TestResult&, std::string const&) (CoolUnitTest.h:250)
==xxxxx==    by 0x638B395: CppUnit::TextTestRunner::run(std::string, bool, bool, bool) (TextTestRunner.cpp:64)
==xxxxx==    by 0x40BAAF: cool::TextTestRunner::run(std::string, bool, bool, bool) (CoolUnitTest.h:263)
==xxxxx==    by 0x40AE9A: cool::CoolUnitTest::Main(int, char**) (CoolUnitTest.h:407)
==xxxxx==    by 0x40B2F0: main (test_RalSequence.cpp:141)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_once_alloc
   fun:init_state_maps
   fun:init_available_charsets
   fun:pthread_once
   fun:get_charset_by_csname
   fun:mysql_init_character_set
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool15RalSequenceTest18coolUnitTest_setUpEv
   fun:_ZN4cool12CoolUnitTest5setUpEv
   fun:_ZN7CppUnit10TestCallerIN4cool15RalSequenceTestEE5setUpEv
}
==xxxxx== LEAK SUMMARY:
==xxxxx==    definitely lost: 0 bytes in 0 blocks
==xxxxx==    indirectly lost: 0 bytes in 0 blocks
==xxxxx==      possibly lost: 0 bytes in 0 blocks
==xxxxx==    still reachable: 73,808 bytes in 21 blocks
==xxxxx==         suppressed: 1,114,564 bytes in 12,937 blocks
==xxxxx== 
==xxxxx== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 5 from 5)
==xxxxx== 
==xxxxx== 3 errors in context 1 of 1:
==xxxxx== Source and destination overlap in memcpy(0x8ae081e, 0x8ae081e, 21)
==xxxxx==    at 0x4A0AD10: memcpy (mc_replace_strmem.c:838)
==xxxxx==    by 0x8CAF44F: old_password_auth_client (client.c:4298)
==xxxxx==    by 0x8CB1E3C: run_plugin_auth (client.c:2910)
==xxxxx==    by 0x8CB2917: mysql_real_connect (client.c:3429)
==xxxxx==    by 0x8C27E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x7EB72E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x7ED5632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x7EBD9FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x7EBF83E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x7ED738B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x7ECC92F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x7ECD036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0x633E4D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0x5881D0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0x58B50A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0x58B4301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0x588AD5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0x40E8B2: cool::RalSequenceTest::coolUnitTest_setUp() (test_RalSequence.cpp:113)
==xxxxx==    by 0x40B1F9: cool::CoolUnitTest::setUp() (CoolUnitTest.h:459)
==xxxxx==    by 0x4104C8: CppUnit::TestCaller<cool::RalSequenceTest>::setUp() (TestCaller.h:177)
==xxxxx==    by 0x6381070: CppUnit::TestCaseMethodFunctor::operator()() const (TestCase.cpp:32)
==xxxxx==    by 0x6377014: CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (DefaultProtector.cpp:15)
==xxxxx==    by 0x637E021: CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) (ProtectorChain.cpp:77)
==xxxxx==    by 0x6386C84: CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::string const&) (TestResult.cpp:178)
==xxxxx==    by 0x6380C08: CppUnit::TestCase::run(CppUnit::TestResult*) (TestCase.cpp:87)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6381412: CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) (TestComposite.cpp:64)
==xxxxx==    by 0x6381335: CppUnit::TestComposite::run(CppUnit::TestResult*) (TestComposite.cpp:23)
==xxxxx==    by 0x6386C09: CppUnit::TestResult::runTest(CppUnit::Test*) (TestResult.cpp:145)
==xxxxx==    by 0x63890A8: CppUnit::TestRunner::run(CppUnit::TestResult&, std::string const&) (TestRunner.cpp:96)
==xxxxx==    by 0x40BA42: cool::TextTestRunner::run(CppUnit::TestResult&, std::string const&) (CoolUnitTest.h:250)
==xxxxx==    by 0x638B395: CppUnit::TextTestRunner::run(std::string, bool, bool, bool) (TextTestRunner.cpp:64)
==xxxxx==    by 0x40BAAF: cool::TextTestRunner::run(std::string, bool, bool, bool) (CoolUnitTest.h:263)
==xxxxx==    by 0x40AE9A: cool::CoolUnitTest::Main(int, char**) (CoolUnitTest.h:407)
==xxxxx==    by 0x40B2F0: main (test_RalSequence.cpp:141)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Overlap
   fun:memcpy
   fun:old_password_auth_client
   fun:run_plugin_auth
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool15RalSequenceTest18coolUnitTest_setUpEv
   fun:_ZN4cool12CoolUnitTest5setUpEv
   fun:_ZN7CppUnit10TestCallerIN4cool15RalSequenceTestEE5setUpEv
   fun:_ZNK7CppUnit21TestCaseMethodFunctorclEv
   fun:_ZN7CppUnit16DefaultProtector7protectERKNS_7FunctorERKNS_16ProtectorContextE
   fun:_ZN7CppUnit14ProtectorChain7protectERKNS_7FunctorERKNS_16ProtectorContextE
   fun:_ZN7CppUnit10TestResult7protectERKNS_7FunctorEPNS_4TestERKSs
}
--xxxxx-- 
--xxxxx-- used_suppression:   1773 <ROOT_libCore_new_LEAK>
--xxxxx-- used_suppression:   5880 <ROOT_libCint_alloc_LEAK>
--xxxxx-- used_suppression:     45 <coral_PluginManager_loadLibrary_dlopen_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:   2779 <ROOT_libCint_new_LEAK>
--xxxxx-- used_suppression:      1 <ROOT_libCore_new_LEAK3>
--xxxxx-- used_suppression:      1 <coral_PluginManager_loadLibrary_dlsym_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:      4 dl-hack3
==xxxxx== 
==xxxxx== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 5 from 5)
