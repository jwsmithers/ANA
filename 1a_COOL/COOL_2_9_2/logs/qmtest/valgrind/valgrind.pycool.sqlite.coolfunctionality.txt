==xxxxx== Memcheck, a memory error detector
==xxxxx== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==xxxxx== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==xxxxx== Command: python /home/avalassi/COOL/COOL_2_8_17/src/../x86_64-slc5-gcc46-dbg/tests/bin/test_CoolFunctionality.py
==xxxxx== Parent PID: xxxxx
==xxxxx== 
--xxxxx-- 
--xxxxx-- Valgrind options:
--xxxxx--    -v
--xxxxx--    --leak-check=full
--xxxxx--    --show-reachable=yes
--xxxxx--    --error-limit=no
--xxxxx--    --log-file=/home/avalassi/COOL/COOL_2_8_17/src/logs/qmtest/valgrind/x86_64-slc5-gcc46-dbg/valgrind.pycool.sqlite.coolfunctionality.txt
--xxxxx--    --suppressions=/home/avalassi/CORAL/CORAL_2_3_26/src/config/scripts/valgrind.supp
--xxxxx--    --gen-suppressions=all
--xxxxx--    --num-callers=50
--xxxxx--    --track-origins=yes
--xxxxx-- Contents of /proc/version:
--xxxxx--   Linux version 2.6.18-308.20.1.el5 (mockbuild@lxdist03) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-52)) #1 SMP Wed Nov 14 10:31:58 CET 2012
--xxxxx-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--xxxxx-- Page sizes: currently 4096, max supported 4096
--xxxxx-- Valgrind library directory: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/bin/python (0x400000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/memcheck-amd64-linux (0x38000000)
--xxxxx--    object doesn't have a dynamic symbol table
--xxxxx-- Reading syms from /lib64/ld-2.5.so (0x301c400000)
--xxxxx-- Reading suppressions file: /home/avalassi/CORAL/CORAL_2_3_26/src/config/scripts/valgrind.supp
--xxxxx-- Reading suppressions file: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/default.supp
==xxxxx== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== 
==xxxxx== TO CONTROL THIS PROCESS USING vgdb (which you probably
==xxxxx== don't want to do, unless you know exactly what you're doing,
==xxxxx== or are doing some strange experiment):
==xxxxx==   /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx ...command...
==xxxxx== 
==xxxxx== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==xxxxx==   /path/to/gdb python
==xxxxx== and then give GDB the following command
==xxxxx==   target remote | /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx
==xxxxx== --pid is optional if only one valgrind process is running
==xxxxx== 
--xxxxx-- REDIR: 0x301c4147a0 (strlen) redirected to 0x380437e7 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/vgpreload_core-amd64-linux.so (0x4803000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/vgpreload_memcheck-amd64-linux.so (0x4a05000)
--xxxxx-- REDIR: 0x301c414770 (strcmp) redirected to 0x4a0a6f0 (strcmp)
--xxxxx-- REDIR: 0x301c4145c0 (index) redirected to 0x4a09730 (index)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCore.so (0x4c0f000)
--xxxxx-- Reading syms from /lib64/libdl-2.5.so (0x301d400000)
--xxxxx-- Reading syms from /lib64/libpthread-2.5.so (0x301d800000)
--xxxxx-- Reading syms from /lib64/libutil-2.5.so (0x3027400000)
--xxxxx-- Reading syms from /lib64/libm-2.5.so (0x301cc00000)
--xxxxx-- Reading syms from /lib64/libc-2.5.so (0x301c800000)
--xxxxx-- Reading syms from /lib64/libz.so.1.2.3 (0x301d000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCint.so (0x57a5000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16 (0x647c000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libgcc_s.so.1 (0x6781000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- REDIR: 0x301c87a010 (memset) redirected to 0x4a0bb50 (memset)
--xxxxx-- REDIR: 0x301c87b450 (memcpy) redirected to 0x4a0aca0 (memcpy)
--xxxxx-- REDIR: 0x301c879150 (rindex) redirected to 0x4a09520 (rindex)
--xxxxx-- REDIR: 0x301c878d60 (strlen) redirected to 0x4a09a70 (strlen)
--xxxxx-- REDIR: 0x301c8787e0 (strcmp) redirected to 0x4a0a630 (strcmp)
--xxxxx-- REDIR: 0x6533e40 (operator new[](unsigned long)) redirected to 0x4a0884d (operator new[](unsigned long))
--xxxxx-- REDIR: 0x6533d10 (operator new(unsigned long)) redirected to 0x4a08d37 (operator new(unsigned long))
--xxxxx-- REDIR: 0x301c873ec0 (malloc) redirected to 0x4a091a1 (malloc)
--xxxxx-- REDIR: 0x301c878820 (strcpy) redirected to 0x4a09ab0 (strcpy)
--xxxxx-- REDIR: 0x301c879e70 (memmove) redirected to 0x4a0bbe0 (memmove)
--xxxxx-- REDIR: 0x6531fe0 (operator delete(void*)) redirected to 0x4a081ef (operator delete(void*))
--xxxxx-- REDIR: 0x301c878fe0 (strncmp) redirected to 0x4a09ed0 (strncmp)
--xxxxx-- REDIR: 0x301c878630 (index) redirected to 0x4a095f0 (index)
--xxxxx-- REDIR: 0x301c8799d0 (bcmp) redirected to 0x4a0b770 (bcmp)
--xxxxx-- REDIR: 0x301c873ae0 (calloc) redirected to 0x4a07b9b (calloc)
--xxxxx-- REDIR: 0x301c879520 (strstr) redirected to 0x4a0c270 (strstr)
--xxxxx-- REDIR: 0x301c875850 (free) redirected to 0x4a084dd (free)
--xxxxx-- REDIR: 0xffffffffff600000 (???) redirected to 0x380437d3 (vgPlain_amd64_linux_REDIR_FOR_vgettimeofday)
--xxxxx-- REDIR: 0x301c87ab40 (mempcpy) redirected to 0x4a0bf80 (mempcpy)
--xxxxx-- REDIR: 0x301c833230 (setenv) redirected to 0x4a0c610 (setenv)
--xxxxx-- REDIR: 0x6532020 (operator delete[](void*)) redirected to 0x4a07e6b (operator delete[](void*))
--xxxxx-- REDIR: 0x301c8790a0 (strncpy) redirected to 0x4a09c50 (strncpy)
--xxxxx-- REDIR: 0x301c878e50 (strnlen) redirected to 0x4a09a10 (strnlen)
--xxxxx-- REDIR: 0x301c8759e0 (realloc) redirected to 0x4a09252 (realloc)
--xxxxx-- REDIR: 0x301c87b2f0 (strcasecmp) redirected to 0x4a09fd0 (strcasecmp)
--xxxxx-- REDIR: 0x301c879850 (memchr) redirected to 0x4a0a7b0 (memchr)
--xxxxx-- REDIR: 0x301c878470 (strcat) redirected to 0x4a09770 (strcat)
--xxxxx-- REDIR: 0x301c87c0b0 (rawmemchr) redirected to 0x4a0beb0 (rawmemchr)
--xxxxx-- REDIR: 0x301c87c200 (strchrnul) redirected to 0x4a0be80 (strchrnul)
--xxxxx-- REDIR: 0x301c87b330 (strncasecmp) redirected to 0x4a0a0d0 (strncasecmp)
--xxxxx-- REDIR: 0x301c87b150 (stpcpy) redirected to 0x4a0b810 (stpcpy)
--xxxxx-- Reading syms from /lib64/libnss_files-2.5.so (0x6e47000)
--xxxxx-- REDIR: 0x301c878f40 (strncat) redirected to 0x4a09930 (strncat)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/lib/python2.6/lib-dynload/time.so (0xae25000)
--xxxxx-- REDIR: 0xffffffffff600400 (???) redirected to 0x380437dd (vgPlain_amd64_linux_REDIR_FOR_vtime)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/lib/python2.6/lib-dynload/strop.so (0xb02a000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libPyROOT.so (0xb231000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libRIO.so (0xb541000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libTree.so (0xba0a000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/lib/libpython2.6.so.1.0 (0xbe96000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libThread.so (0xc252000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libNet.so (0xc4a9000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libMathCore.so (0xc845000)
--xxxxx-- Reading syms from /lib64/libcrypto.so.0.9.8e (0x3025000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libssl.so.0.9.8e (0x3027000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /usr/lib64/libgssapi_krb5.so.2.2 (0x3025800000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /usr/lib64/libkrb5.so.3.3 (0x3026400000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libcom_err.so.2.1 (0x3024400000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /usr/lib64/libk5crypto.so.3.1 (0x3026000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libresolv-2.5.so (0x3023800000)
--xxxxx-- Reading syms from /usr/lib64/libkrb5support.so.0.1 (0x3026800000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libkeyutils-1.2.so (0x3026c00000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libselinux.so.1 (0x3020000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libsepol.so.1 (0x301fc00000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libReflex.so (0xe9ad000)
--xxxxx-- REDIR: 0x301c4158f0 (stpcpy) redirected to 0x4a0ba80 (stpcpy)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCintex.so (0xeced000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_PyCoolDict.so (0xef49000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_CoolApplication.so (0x5799000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalCool.so (0xf1c1000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_CoolKernel.so (0xf3e1000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_thread-gcc46-mt-1_48.so.1.48.0 (0xf42c000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_filesystem-gcc46-mt-1_48.so.1.48.0 (0xf646000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_date_time-gcc46-mt-1_48.so.1.48.0 (0xf864000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_system-gcc46-mt-1_48.so.1.48.0 (0xfa74000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralBase.so (0xfc77000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralKernel.so (0xfcf1000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalAccess.so (0xfd32000)
--xxxxx-- Reading syms from /lib64/librt-2.5.so (0x301f000000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libReflexDict.so (0x11047000)
--xxxxx-- REDIR: 0x6533db0 (operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4a08ba4 (operator new(unsigned long, std::nothrow_t const&))
--xxxxx-- REDIR: 0x6532000 (operator delete(void*, std::nothrow_t const&)) redirected to 0x4a080c3 (operator delete(void*, std::nothrow_t const&))
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_ConnectionService.so (0x12126000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralCommon.so (0x121c5000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalService.so (0x12243000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_SQLiteAccess.so (0x1226d000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/sqlite/3070900/x86_64-slc5-gcc46-opt/lib/libsqlite3.so.0.8.6 (0x12372000)
--xxxxx-- Discarding syms at 0x6e48fe0-0x6e4f268 in /lib64/libnss_files-2.5.so due to munmap()
==xxxxx== 
==xxxxx== HEAP SUMMARY:
==xxxxx==     in use at exit: 20,272,952 bytes in 109,859 blocks
==xxxxx==   total heap usage: 2,099,121 allocs, 1,989,262 frees, 914,572,027 bytes allocated
==xxxxx== 
==xxxxx== Searching for pointers to 109,859 not-freed blocks
==xxxxx== Checked 25,654,688 bytes
==xxxxx== 
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,622 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFCD3FF7: coral::TimeStamp::TimeStamp(boost::posix_time::ptime const&, bool) (TimeStamp.cpp:38)
==xxxxx==    by 0xFCD4381: coral::TimeStamp::now(bool) (TimeStamp.cpp:87)
==xxxxx==    by 0x1217E6CA: coral::ConnectionService::ConnectionSharedInfo::ConnectionSharedInfo(coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.h:48)
==xxxxx==    by 0x1217C63D: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x12183962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral9TimeStampC1ERKN5boost10posix_time5ptimeEb
   fun:_ZN5coral9TimeStamp3nowEb
   fun:_ZN5coral17ConnectionService20ConnectionSharedInfoC1ERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,657 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD6751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD66A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD6065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x1232428B: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:955)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,661 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67627: __gnu_cxx::new_allocator<coral::ForeignKey*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD66BE8: std::_Vector_base<coral::ForeignKey*, std::allocator<coral::ForeignKey*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD6598A: std::vector<coral::ForeignKey*, std::allocator<coral::ForeignKey*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::ForeignKey**, std::vector<coral::ForeignKey*, std::allocator<coral::ForeignKey*> > >, coral::ForeignKey* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63C95: std::vector<coral::ForeignKey*, std::allocator<coral::ForeignKey*> >::push_back(coral::ForeignKey* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD6129C: coral::TableDescription::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescription.cpp:846)
==xxxxx==    by 0x12324E86: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1039)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral10ForeignKeyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral10ForeignKeyESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral10ForeignKeyESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral10ForeignKeyESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription16createForeignKeyERKSsRKSt6vectorISsSaISsEES2_S7_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,664 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD6751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD66A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD6065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x1232428B: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:955)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 16 bytes in 1 blocks are still reachable in loss record 9,698 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,757 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A8CC4: fts3HashMalloc (sqlite3.c:121213)
==xxxxx==    by 0x123A8F43: sqlite3Fts3HashInsert (sqlite3.c:121538)
==xxxxx==    by 0x123F0B5E: openDatabase (sqlite3.c:118081)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:fts3HashMalloc
   fun:sqlite3Fts3HashInsert
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,758 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A8CC4: fts3HashMalloc (sqlite3.c:121213)
==xxxxx==    by 0x123A8F43: sqlite3Fts3HashInsert (sqlite3.c:121538)
==xxxxx==    by 0x123F0C76: openDatabase (sqlite3.c:118082)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:fts3HashMalloc
   fun:sqlite3Fts3HashInsert
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,759 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E0AC8: sqlite3NestedParse (sqlite3.c:79689)
==xxxxx==    by 0x123E28BB: sqlite3CreateIndex.isra.465 (sqlite3.c:82320)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x12306A35: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:125)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3NestedParse
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,760 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF2C6640: cool::RalSchemaMgr::fillMainTable(std::string const&, coral::AttributeList const&) const (RalSchemaMgr.cpp:169)
==xxxxx==    by 0xF2A8C8B: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:205)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool12RalSchemaMgr13fillMainTableERKSsRKN5coral13AttributeListE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,761 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF2C6640: cool::RalSchemaMgr::fillMainTable(std::string const&, coral::AttributeList const&) const (RalSchemaMgr.cpp:169)
==xxxxx==    by 0xF2A8C8B: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:205)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool12RalSchemaMgr13fillMainTableERKSsRKN5coral13AttributeListE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,762 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,763 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,764 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,765 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,766 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x123261E0: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1208)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,767 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,768 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,769 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123B2FDD: sqlite3WhereBegin (sqlite3.c:104285)
==xxxxx==    by 0x123B52A6: sqlite3Select (sqlite3.c:96690)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x123040B2: coral::SQLiteAccess::Query::execute() (Query.cpp:131)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF354CC4: cool::RelationalTagMgr::fetchGlobalTagTableRow(unsigned int, std::string const&) const (RelationalTagMgr.cpp:222)
==xxxxx==    by 0xF355FF8: cool::RelationalTagMgr::findTagRecord(unsigned int, std::string const&) const (RelationalTagMgr.cpp:372)
==xxxxx==    by 0xF2F0DDF: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1376)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3WhereBegin
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool16RelationalTagMgr22fetchGlobalTagTableRowEjRKSs
   fun:_ZNK4cool16RelationalTagMgr13findTagRecordEjRKSs
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,770 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF357941: cool::RelationalTagMgr::insertGlobalTagTableRow(unsigned int, unsigned int, std::string const&, cool::HvsTagLock::Status, std::string const&, std::string const&) const (RelationalTagMgr.cpp:765)
==xxxxx==    by 0xF357517: cool::RelationalTagMgr::createTagAndLocalTag(unsigned int, std::string const&, std::string const&, std::string const&) const (RelationalTagMgr.cpp:706)
==xxxxx==    by 0xF2F1441: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1409)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool16RelationalTagMgr23insertGlobalTagTableRowEjjRKSsNS_10HvsTagLock6StatusES2_S2_
   fun:_ZNK4cool16RelationalTagMgr20createTagAndLocalTagEjRKSsS2_S2_
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,771 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF357941: cool::RelationalTagMgr::insertGlobalTagTableRow(unsigned int, unsigned int, std::string const&, cool::HvsTagLock::Status, std::string const&, std::string const&) const (RelationalTagMgr.cpp:765)
==xxxxx==    by 0xF357517: cool::RelationalTagMgr::createTagAndLocalTag(unsigned int, std::string const&, std::string const&, std::string const&) const (RelationalTagMgr.cpp:706)
==xxxxx==    by 0xF2F1441: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1409)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool16RelationalTagMgr23insertGlobalTagTableRowEjjRKSsNS_10HvsTagLock6StatusES2_S2_
   fun:_ZNK4cool16RelationalTagMgr20createTagAndLocalTagEjRKSsS2_S2_
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,772 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,773 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,774 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,775 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2D0B68: cool::RalSequenceMgr::initSequence(std::string const&) (RalSequenceMgr.cpp:151)
==xxxxx==    by 0xF2D069D: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:77)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZN4cool14RalSequenceMgr12initSequenceERKSs
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,776 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123B2FDD: sqlite3WhereBegin (sqlite3.c:104285)
==xxxxx==    by 0x123D8C03: sqlite3Update (sqlite3.c:98926)
==xxxxx==    by 0x123DD841: sqlite3Parser (sqlite3.c:108479)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122DD9D3: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:147)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF313F67: cool::RelationalObjectMgr::bulkUpdateObjectTableNewHeadId(std::string const&, std::string const&, std::vector<cool::SimpleObject, std::allocator<cool::SimpleObject> > const&, unsigned int) const (RelationalObjectMgr.cpp:609)
==xxxxx==    by 0xF31EAA5: cool::RelationalObjectMgr::mergeWithHead(cool::RelationalFolder*, std::vector<cool::SimpleObject, std::allocator<cool::SimpleObject> >, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > >&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >&, unsigned int, bool) const (RelationalObjectMgr.cpp:2314)
==xxxxx==    by 0xF31A09E: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1558)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3WhereBegin
   fun:sqlite3Update
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr30bulkUpdateObjectTableNewHeadIdERKSsS2_RKSt6vectorINS_12SimpleObjectESaIS4_EEj
   fun:_ZNK4cool19RelationalObjectMgr13mergeWithHeadEPNS_16RelationalFolderESt6vectorINS_12SimpleObjectESaIS4_EERS3_IN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaISA_EERSt3mapIjjSt4lessIjESaISt4pairIKjjEEEjb
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN12_GLOBAL__N_1L12method_11591EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,777 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D9227: sqlite3Update (sqlite3.c:99118)
==xxxxx==    by 0x123DD841: sqlite3Parser (sqlite3.c:108479)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122DD9D3: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:147)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF311E7C: cool::RelationalObjectMgr::bulkUpdateChannelTable(std::string const&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > > const&, bool) const (RelationalObjectMgr.cpp:373)
==xxxxx==    by 0xF31A35E: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1605)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Update
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr22bulkUpdateChannelTableERKSsRKSt3mapIjjSt4lessIjESaISt4pairIKjjEEEb
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN12_GLOBAL__N_1L12method_11591EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,778 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF31154D: cool::RelationalObjectMgr::updateChannelTable(std::string const&, unsigned int const&, unsigned int, bool) const (RelationalObjectMgr.cpp:305)
==xxxxx==    by 0xF312252: cool::RelationalObjectMgr::bulkUpdateChannelTable(std::string const&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > > const&, bool) const (RelationalObjectMgr.cpp:412)
==xxxxx==    by 0xF31A35E: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1605)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool19RelationalObjectMgr18updateChannelTableERKSsRKjjb
   fun:_ZNK4cool19RelationalObjectMgr22bulkUpdateChannelTableERKSsRKSt3mapIjjSt4lessIjESaISt4pairIKjjEEEb
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN12_GLOBAL__N_1L12method_11591EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,779 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF3582D7: cool::RelationalTagMgr::insertTagTableRow(std::string const&, unsigned int, std::string const&, std::string const&, std::string const&) const (RelationalTagMgr.cpp:854)
==xxxxx==    by 0xF357565: cool::RelationalTagMgr::createTagAndLocalTag(unsigned int, std::string const&, std::string const&, std::string const&) const (RelationalTagMgr.cpp:715)
==xxxxx==    by 0xF2F1441: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1409)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A68E: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17356)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool16RelationalTagMgr17insertTagTableRowERKSsjS2_S2_S2_
   fun:_ZNK4cool16RelationalTagMgr20createTagAndLocalTagEjRKSsS2_S2_
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,780 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF3582D7: cool::RelationalTagMgr::insertTagTableRow(std::string const&, unsigned int, std::string const&, std::string const&, std::string const&) const (RelationalTagMgr.cpp:854)
==xxxxx==    by 0xF357565: cool::RelationalTagMgr::createTagAndLocalTag(unsigned int, std::string const&, std::string const&, std::string const&) const (RelationalTagMgr.cpp:715)
==xxxxx==    by 0xF2F1441: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1409)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A68E: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17356)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool16RelationalTagMgr17insertTagTableRowERKSsjS2_S2_S2_
   fun:_ZNK4cool16RelationalTagMgr20createTagAndLocalTagEjRKSsS2_S2_
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 16 bytes in 1 blocks are possibly lost in loss record 9,781 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122DD9D3: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:147)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF2F2021: cool::RelationalFolder::insertObject2TagTableRows(std::string const&, unsigned int, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&, cool::PayloadMode::Mode) const (RelationalFolder.cpp:1544)
==xxxxx==    by 0xF2F11A7: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1416)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A68E: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17356)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool16RelationalFolder25insertObject2TagTableRowsERKSsjS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EENS_11PayloadMode4ModeE
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,357 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BFBBB: boost::detail::shared_count::shared_count<cool::CoralConnectionServiceProxy>(cool::CoralConnectionServiceProxy*) (shared_count.hpp:91)
==xxxxx==    by 0xF2BF885: boost::shared_ptr<cool::CoralConnectionServiceProxy>::shared_ptr<cool::CoralConnectionServiceProxy>(cool::CoralConnectionServiceProxy*) (shared_ptr.hpp:183)
==xxxxx==    by 0xF2BE4ED: cool::RalDatabaseSvc::RalDatabaseSvc(coral::IConnectionService&) (RalDatabaseSvc.cpp:22)
==xxxxx==    by 0xF29CC10: cool::CoralApplication::CoralApplication(coral::IConnectionService*) (CoralApplication.cpp:226)
==xxxxx==    by 0x579A408: cool::Application::Application(coral::IConnectionService*) (Application.cpp:20)
==xxxxx==    by 0x579A6A4: cool::DatabaseSvcFactory::databaseService() (DatabaseSvcFactory.cpp:23)
==xxxxx==    by 0xF0A6E47: (anonymous namespace)::method_11421(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19906)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11D2504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B4579: PyROOT::TRootObjectRefExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:309)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2A8845: PyROOT::TClassMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (ClassMethodHolder.cxx:38)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool27CoralConnectionServiceProxyEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool27CoralConnectionServiceProxyEEC1IS2_EEPT_
   fun:_ZN4cool14RalDatabaseSvcC1ERN5coral18IConnectionServiceE
   fun:_ZN4cool16CoralApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool11ApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool18DatabaseSvcFactory15databaseServiceEv
   fun:_ZN12_GLOBAL__N_1L12method_11421EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT22TRootObjectRefExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT18TClassMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,358 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x122F3617: boost::detail::shared_count::shared_count<coral::SQLiteAccess::ConnectionProperties>(coral::SQLiteAccess::ConnectionProperties*) (shared_count.hpp:91)
==xxxxx==    by 0x122F3309: boost::shared_ptr<coral::SQLiteAccess::ConnectionProperties>::shared_ptr<coral::SQLiteAccess::ConnectionProperties>(coral::SQLiteAccess::ConnectionProperties*) (shared_ptr.hpp:183)
==xxxxx==    by 0x122F0B9F: coral::SQLiteAccess::Connection::Connection(coral::SQLiteAccess::DomainProperties const&, std::string const&) (Connection.cpp:45)
==xxxxx==    by 0x122F7308: coral::SQLiteAccess::Domain::newConnection(std::string const&) const (Domain.cpp:54)
==xxxxx==    by 0x1218392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral12SQLiteAccess20ConnectionPropertiesEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral12SQLiteAccess20ConnectionPropertiesEEC1IS3_EEPT_
   fun:_ZN5coral12SQLiteAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral12SQLiteAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,359 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1217FB39: boost::detail::shared_count::shared_count<coral::IConnection>(coral::IConnection*) (shared_count.hpp:91)
==xxxxx==    by 0x1217ED65: boost::shared_ptr<coral::IConnection>::shared_ptr<coral::IConnection>(coral::IConnection*) (shared_ptr.hpp:183)
==xxxxx==    by 0x1217C61D: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x12183962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral11IConnectionEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral11IConnectionEEC1IS2_EEPT_
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,360 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1217FAB3: boost::detail::shared_count::shared_count<coral::ConnectionService::ConnectionSharedInfo>(coral::ConnectionService::ConnectionSharedInfo*) (shared_count.hpp:91)
==xxxxx==    by 0x1217ED15: boost::shared_ptr<coral::ConnectionService::ConnectionSharedInfo>::shared_ptr<coral::ConnectionService::ConnectionSharedInfo>(coral::ConnectionService::ConnectionSharedInfo*) (shared_ptr.hpp:183)
==xxxxx==    by 0x1217C650: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x12183962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral17ConnectionService20ConnectionSharedInfoEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral17ConnectionService20ConnectionSharedInfoEEC1IS3_EEPT_
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,361 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1219C00B: boost::detail::shared_count::shared_count<coral::ConnectionService::SessionHandle::SessionSharedInfo>(coral::ConnectionService::SessionHandle::SessionSharedInfo*) (shared_count.hpp:91)
==xxxxx==    by 0x1219BD1D: boost::shared_ptr<coral::ConnectionService::SessionHandle::SessionSharedInfo>::shared_ptr<coral::ConnectionService::SessionHandle::SessionSharedInfo>(coral::ConnectionService::SessionHandle::SessionSharedInfo*) (shared_ptr.hpp:183)
==xxxxx==    by 0x1219B19E: coral::ConnectionService::SessionHandle::SessionHandle(std::string const&, coral::ConnectionService::ConnectionHandle const&) (SessionHandle.cpp:36)
==xxxxx==    by 0x121839A8: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:86)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral17ConnectionService13SessionHandle17SessionSharedInfoEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral17ConnectionService13SessionHandle17SessionSharedInfoEEC1IS4_EEPT_
   fun:_ZN5coral17ConnectionService13SessionHandleC1ERKSsRKNS0_16ConnectionHandleE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,362 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x123116D9: boost::detail::shared_count::shared_count<coral::SQLiteAccess::SessionProperties>(coral::SQLiteAccess::SessionProperties*) (shared_count.hpp:91)
==xxxxx==    by 0x12311653: boost::shared_ptr<coral::SQLiteAccess::SessionProperties>::shared_ptr<coral::SQLiteAccess::SessionProperties>(coral::SQLiteAccess::SessionProperties*) (shared_ptr.hpp:183)
==xxxxx==    by 0x12311456: void boost::shared_ptr<coral::SQLiteAccess::SessionProperties>::reset<coral::SQLiteAccess::SessionProperties>(coral::SQLiteAccess::SessionProperties*) (shared_ptr.hpp:398)
==xxxxx==    by 0x1230F514: coral::SQLiteAccess::Session::Session(coral::IDevConnection&, boost::shared_ptr<coral::SQLiteAccess::ConnectionProperties>, std::string const&, coral::AccessMode) (Session.cpp:54)
==xxxxx==    by 0x122F15B5: coral::SQLiteAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:81)
==xxxxx==    by 0x1217D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral12SQLiteAccess17SessionPropertiesEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral12SQLiteAccess17SessionPropertiesEEC1IS3_EEPT_
   fun:_ZN5boost10shared_ptrIN5coral12SQLiteAccess17SessionPropertiesEE5resetIS3_EEvPT_
   fun:_ZN5coral12SQLiteAccess7SessionC1ERNS_14IDevConnectionEN5boost10shared_ptrINS0_20ConnectionPropertiesEEERKSsNS_10AccessModeE
   fun:_ZNK5coral12SQLiteAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,363 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F549: coral::SQLiteAccess::Session::Session(coral::IDevConnection&, boost::shared_ptr<coral::SQLiteAccess::ConnectionProperties>, std::string const&, coral::AccessMode) (Session.cpp:55)
==xxxxx==    by 0x122F15B5: coral::SQLiteAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:81)
==xxxxx==    by 0x1217D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess7SessionC1ERNS_14IDevConnectionEN5boost10shared_ptrINS0_20ConnectionPropertiesEEERKSsNS_10AccessModeE
   fun:_ZNK5coral12SQLiteAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,364 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1219C111: boost::detail::shared_count::shared_count<coral::ISession>(coral::ISession*) (shared_count.hpp:91)
==xxxxx==    by 0x1219BE8F: boost::shared_ptr<coral::ISession>::shared_ptr<coral::ISession>(coral::ISession*) (shared_ptr.hpp:183)
==xxxxx==    by 0x1219B650: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:83)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral8ISessionEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral8ISessionEEC1IS2_EEPT_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,365 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BBD8D: boost::detail::shared_count::shared_count<cool::RalSessionMgr>(cool::RalSessionMgr*) (shared_count.hpp:91)
==xxxxx==    by 0xF2B8EAB: boost::shared_ptr<cool::ISessionMgr>::shared_ptr<cool::RalSessionMgr>(cool::RalSessionMgr*) (shared_ptr.hpp:183)
==xxxxx==    by 0xF2A7D77: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool13RalSessionMgrEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool11ISessionMgrEEC1INS1_13RalSessionMgrEEEPT_
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,366 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A7FE7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:103)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,367 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A8073: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:107)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,368 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A80FF: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:111)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,369 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BBF49: boost::detail::shared_count::shared_count<cool::RalTransactionMgr>(cool::RalTransactionMgr*) (shared_count.hpp:91)
==xxxxx==    by 0xF2B9369: boost::shared_ptr<cool::IRelationalTransactionMgr>::shared_ptr<cool::RalTransactionMgr>(cool::RalTransactionMgr*) (shared_ptr.hpp:183)
==xxxxx==    by 0xF2A8226: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:121)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool17RalTransactionMgrEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool25IRelationalTransactionMgrEEC1INS1_17RalTransactionMgrEEEPT_
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,370 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BFD03: boost::detail::shared_count::shared_count<cool::TransRalDatabase>(cool::TransRalDatabase*) (shared_count.hpp:91)
==xxxxx==    by 0xF2BF9D9: boost::shared_ptr<cool::IDatabase>::shared_ptr<cool::TransRalDatabase>(cool::TransRalDatabase*) (shared_ptr.hpp:183)
==xxxxx==    by 0xF2BE909: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:86)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool16TransRalDatabaseEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool9IDatabaseEEC1INS1_16TransRalDatabaseEEEPT_
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,395 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,396 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,397 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 24 bytes in 1 blocks are possibly lost in loss record 14,445 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123EFE64: unixOpen (sqlite3.c:29607)
==xxxxx==    by 0x123B11E2: sqlite3BtreeOpen (sqlite3.c:14550)
==xxxxx==    by 0x123F08D6: openDatabase (sqlite3.c:112721)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:unixOpen
   fun:sqlite3BtreeOpen
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 24 bytes in 1 blocks are possibly lost in loss record 14,446 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
}
==xxxxx== 24 bytes in 1 blocks are possibly lost in loss record 14,447 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
}
==xxxxx== 24 bytes in 1 blocks are possibly lost in loss record 14,448 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 24 bytes in 1 blocks are possibly lost in loss record 14,449 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D9227: sqlite3Update (sqlite3.c:99118)
==xxxxx==    by 0x123DD841: sqlite3Parser (sqlite3.c:108479)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122DD9D3: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:147)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF313F67: cool::RelationalObjectMgr::bulkUpdateObjectTableNewHeadId(std::string const&, std::string const&, std::vector<cool::SimpleObject, std::allocator<cool::SimpleObject> > const&, unsigned int) const (RelationalObjectMgr.cpp:609)
==xxxxx==    by 0xF31EAA5: cool::RelationalObjectMgr::mergeWithHead(cool::RelationalFolder*, std::vector<cool::SimpleObject, std::allocator<cool::SimpleObject> >, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > >&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >&, unsigned int, bool) const (RelationalObjectMgr.cpp:2314)
==xxxxx==    by 0xF31A09E: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1558)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Update
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr30bulkUpdateObjectTableNewHeadIdERKSsS2_RKSt6vectorINS_12SimpleObjectESaIS4_EEj
   fun:_ZNK4cool19RelationalObjectMgr13mergeWithHeadEPNS_16RelationalFolderESt6vectorINS_12SimpleObjectESaIS4_EERS3_IN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaISA_EERSt3mapIjjSt4lessIjESaISt4pairIKjjEEEjb
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN12_GLOBAL__N_1L12method_11591EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 28 bytes in 1 blocks are possibly lost in loss record 14,709 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65188D7: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x1219E023: coral::UidGenerator::generateConnectionUid() (UidGenerator.cpp:14)
==xxxxx==    by 0x1217C65C: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:25)
==xxxxx==    by 0x12183962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt18basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZN5coral12UidGenerator21generateConnectionUidEv
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 30 bytes in 1 blocks are possibly lost in loss record 14,800 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6517F47: std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2B6573: VersionNumber::operator std::string() const (VersionNumber.h:84)
==xxxxx==    by 0xF2A8AB1: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:184)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZNK13VersionNumbercvSsEv
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 31 bytes in 1 blocks are possibly lost in loss record 14,834 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DAF06: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:224)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2DC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 31 bytes in 1 blocks are possibly lost in loss record 14,835 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DAF06: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:224)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2D1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 31 bytes in 1 blocks are possibly lost in loss record 14,845 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6517F47: std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2B6573: VersionNumber::operator std::string() const (VersionNumber.h:84)
==xxxxx==    by 0xF2A8A0E: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:175)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZNK13VersionNumbercvSsEv
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,623 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1219B179: coral::ConnectionService::SessionHandle::SessionHandle(std::string const&, coral::ConnectionService::ConnectionHandle const&) (SessionHandle.cpp:36)
==xxxxx==    by 0x121839A8: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:86)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral17ConnectionService13SessionHandleC1ERKSsRKNS0_16ConnectionHandleE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,624 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x123103C3: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:177)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,625 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A7E95: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,626 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2C0303: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:48)
==xxxxx==    by 0xF2A7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,627 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A8204: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:121)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,628 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BFC41: boost::detail::shared_count::shared_count<cool::RalDatabase*, cool::RalDatabase::deleter>(cool::RalDatabase*, cool::RalDatabase::deleter) (shared_count.hpp:128)
==xxxxx==    by 0xF2BF955: boost::shared_ptr<cool::IDatabase>::shared_ptr<cool::RalDatabase, cool::RalDatabase::deleter>(cool::RalDatabase*, cool::RalDatabase::deleter) (shared_ptr.hpp:194)
==xxxxx==    by 0xF2BE8D6: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:83)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IPN4cool11RalDatabaseENS4_7deleterEEET_T0_
   fun:_ZN5boost10shared_ptrIN4cool9IDatabaseEEC1INS1_11RalDatabaseENS5_7deleterEEEPT_T0_
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,629 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BE8E0: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:85)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,630 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,631 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,632 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,633 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,634 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,635 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,636 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2C6B85: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:244)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,637 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2C6B85: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:244)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,638 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,639 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,640 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,641 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,642 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,643 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,644 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,645 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,646 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67627: __gnu_cxx::new_allocator<coral::ForeignKey*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD66BE8: std::_Vector_base<coral::ForeignKey*, std::allocator<coral::ForeignKey*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD6598A: std::vector<coral::ForeignKey*, std::allocator<coral::ForeignKey*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::ForeignKey**, std::vector<coral::ForeignKey*, std::allocator<coral::ForeignKey*> > >, coral::ForeignKey* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63C95: std::vector<coral::ForeignKey*, std::allocator<coral::ForeignKey*> >::push_back(coral::ForeignKey* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD6129C: coral::TableDescription::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescription.cpp:846)
==xxxxx==    by 0x12324E86: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1039)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral10ForeignKeyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral10ForeignKeyESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral10ForeignKeyESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral10ForeignKeyESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription16createForeignKeyERKSsRKSt6vectorISsSaISsEES2_S7_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,647 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,648 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,649 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,650 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,651 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,652 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,678 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,679 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,680 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,681 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,682 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,683 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,684 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,685 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CA519: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:859)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,686 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CA519: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:859)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,687 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,688 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,689 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,690 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,691 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,692 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,693 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DEC5: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,694 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DF39: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,757 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48E7: sqlite3Init (sqlite3.c:92240)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,758 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,759 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,760 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F1935: sqlite3TableAffinityStr (sqlite3.c:87313)
==xxxxx==    by 0x123F1E05: sqlite3CompleteInsertion (sqlite3.c:88657)
==xxxxx==    by 0x123D6C9F: sqlite3Insert (sqlite3.c:88183)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF2C72ED: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:302)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3TableAffinityStr
   fun:sqlite3CompleteInsertion
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,761 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,762 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,763 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,764 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 32 bytes in 1 blocks are possibly lost in loss record 16,765 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 32 bytes in 2 blocks are possibly lost in loss record 16,766 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 32 bytes in 2 blocks are possibly lost in loss record 16,767 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123B2FDD: sqlite3WhereBegin (sqlite3.c:104285)
==xxxxx==    by 0x123B52A6: sqlite3Select (sqlite3.c:96690)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x123040B2: coral::SQLiteAccess::Query::execute() (Query.cpp:131)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF333FED: cool::RelationalObjectTable::fetchRowAtTimeInHead(unsigned long long const&, unsigned int const&, unsigned int) (RelationalObjectTable.cpp:429)
==xxxxx==    by 0xF31DD34: cool::RelationalObjectMgr::mergeWithHead(cool::RelationalFolder*, std::vector<cool::SimpleObject, std::allocator<cool::SimpleObject> >, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > >&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >&, unsigned int, bool) const (RelationalObjectMgr.cpp:2169)
==xxxxx==    by 0xF31A09E: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1558)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3WhereBegin
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool21RelationalObjectTable20fetchRowAtTimeInHeadERKyRKjj
   fun:_ZNK4cool19RelationalObjectMgr13mergeWithHeadEPNS_16RelationalFolderESt6vectorINS_12SimpleObjectESaIS4_EERS3_IN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaISA_EERSt3mapIjjSt4lessIjESaISt4pairIKjjEEEjb
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN12_GLOBAL__N_1L12method_11591EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 32 bytes in 2 blocks are possibly lost in loss record 16,768 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122DD9D3: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:147)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF2F2021: cool::RelationalFolder::insertObject2TagTableRows(std::string const&, unsigned int, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&, cool::PayloadMode::Mode) const (RelationalFolder.cpp:1544)
==xxxxx==    by 0xF2F11A7: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1416)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A68E: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17356)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool16RelationalFolder25insertObject2TagTableRowsERKSsjS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EENS_11PayloadMode4ModeE
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 33 bytes in 1 blocks are possibly lost in loss record 16,832 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DAD89: cool::RelationalDatabaseId::extractOption(std::string const&, std::string const&) (RelationalDatabaseId.cpp:189)
==xxxxx==    by 0xF2DB2B6: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:249)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2DC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId13extractOptionERKSsS2_
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 33 bytes in 1 blocks are possibly lost in loss record 16,833 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DAD89: cool::RelationalDatabaseId::extractOption(std::string const&, std::string const&) (RelationalDatabaseId.cpp:189)
==xxxxx==    by 0xF2DB2B6: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:249)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2D1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId13extractOptionERKSsS2_
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 37 bytes in 1 blocks are possibly lost in loss record 16,965 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65188D7: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x1219E303: coral::UidGenerator::generateSessionUid(std::string const&) (UidGenerator.cpp:44)
==xxxxx==    by 0x1219B1F2: coral::ConnectionService::SessionHandle::SessionHandle(std::string const&, coral::ConnectionService::ConnectionHandle const&) (SessionHandle.cpp:39)
==xxxxx==    by 0x121839A8: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:86)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt18basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZN5coral12UidGenerator18generateSessionUidERKSs
   fun:_ZN5coral17ConnectionService13SessionHandleC1ERKSsRKNS0_16ConnectionHandleE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 39 bytes in 1 blocks are possibly lost in loss record 17,026 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 39 bytes in 1 blocks are possibly lost in loss record 17,032 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xB604BD5: TGenCollectionProxy::TGenCollectionProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionProxy.cxx:605)
==xxxxx==    by 0xB5CF552: TCollectionProxyFactory::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:110)
==xxxxx==    by 0xB646D74: TStreamerInfo::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4411)
==xxxxx==    by 0x4F0EDFD: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4732)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN19TGenCollectionProxyC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 39 bytes in 1 blocks are possibly lost in loss record 17,034 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xB604BD5: TGenCollectionProxy::TGenCollectionProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionProxy.cxx:605)
==xxxxx==    by 0xB60D792: TGenCollectionStreamer::TGenCollectionStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionStreamer.cxx:48)
==xxxxx==    by 0xB5CF5A8: TCollectionProxyFactory::GenExplicitStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:117)
==xxxxx==    by 0xB5CF60E: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:126)
==xxxxx==    by 0xB646D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN19TGenCollectionProxyC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN22TGenCollectionStreamerC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory19GenExplicitStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,228 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A7F49: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:99)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,229 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2C6B85: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:244)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,230 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,231 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x1231BC5C: coral::SQLiteAccess::TableDescriptionProxy::refreshConstraints() const (TableDescriptionProxy.cpp:170)
==xxxxx==    by 0x12324E23: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1031)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy18refreshConstraintsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,232 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF306635: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&, cool::Record const&) const (RelationalNodeMgr.cpp:283)
==xxxxx==    by 0xF305FD1: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&) const (RelationalNodeMgr.cpp:233)
==xxxxx==    by 0xF2E2B05: cool::RelationalDatabase::fetchNodeTableRow(std::string const&) const (RelationalDatabase.cpp:1062)
==xxxxx==    by 0xF2ABCF2: cool::RalDatabase::insertNodeTableRow(std::string const&, std::string const&, bool, bool, std::string const&, cool::FolderVersioning::Mode, cool::PayloadMode::Mode) (RalDatabase.cpp:861)
==xxxxx==    by 0xF2AE0F4: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1132)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSs
   fun:_ZNK4cool18RelationalDatabase17fetchNodeTableRowERKSs
   fun:_ZN4cool11RalDatabase18insertNodeTableRowERKSsS2_bbS2_NS_16FolderVersioning4ModeENS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,236 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF354CC4: cool::RelationalTagMgr::fetchGlobalTagTableRow(unsigned int, std::string const&) const (RelationalTagMgr.cpp:222)
==xxxxx==    by 0xF355FF8: cool::RelationalTagMgr::findTagRecord(unsigned int, std::string const&) const (RelationalTagMgr.cpp:372)
==xxxxx==    by 0xF2F0DDF: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1376)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool16RelationalTagMgr22fetchGlobalTagTableRowEjRKSs
   fun:_ZNK4cool16RelationalTagMgr13findTagRecordEjRKSs
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL14PRCallFuncExecPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TVoidExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,237 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,238 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,239 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CA519: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:859)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,240 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 19,241 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x1231B722: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:141)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,257 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x122217C3: __gnu_cxx::new_allocator<std::_Rb_tree_node<coral::IDevSession*> >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x122216E3: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1222150A: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_create_node(coral::IDevSession* const&) (stl_tree.h:379)
==xxxxx==    by 0x12221094: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, coral::IDevSession* const&) (stl_tree.h:961)
==xxxxx==    by 0x12220682: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_insert_unique(coral::IDevSession* const&) (stl_tree.h:1275)
==xxxxx==    by 0x1221FE56: std::set<coral::IDevSession*, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::insert(coral::IDevSession* const&) (stl_set.h:410)
==xxxxx==    by 0x1221EEF4: coral::IDevConnection::registerSession(coral::IDevSession*) (IDevConnection.cpp:29)
==xxxxx==    by 0x122219D5: coral::IDevSession::IDevSession(coral::IDevConnection&) (IDevSession.cpp:9)
==xxxxx==    by 0x1230F451: coral::SQLiteAccess::Session::Session(coral::IDevConnection&, boost::shared_ptr<coral::SQLiteAccess::ConnectionProperties>, std::string const&, coral::AccessMode) (Session.cpp:51)
==xxxxx==    by 0x122F15B5: coral::SQLiteAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:81)
==xxxxx==    by 0x1217D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5coral11IDevSessionEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeERKS2_
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_
   fun:_ZNSt3setIPN5coral11IDevSessionESt4lessIS2_ESaIS2_EE6insertERKS2_
   fun:_ZN5coral14IDevConnection15registerSessionEPNS_11IDevSessionE
   fun:_ZN5coral11IDevSessionC1ERNS_14IDevConnectionE
   fun:_ZN5coral12SQLiteAccess7SessionC1ERNS_14IDevConnectionEN5boost10shared_ptrINS0_20ConnectionPropertiesEEERKSsNS_10AccessModeE
   fun:_ZNK5coral12SQLiteAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,258 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F0B03: openDatabase (sqlite3.c:118072)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,259 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,260 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,261 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,264 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,265 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,266 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 40 bytes in 1 blocks are possibly lost in loss record 19,267 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123D49C2: sqlite3StartTable (sqlite3.c:80206)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 41 bytes in 1 blocks are possibly lost in loss record 19,274 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2DD527: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:140)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 42 bytes in 1 blocks are possibly lost in loss record 19,287 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,305 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2E726B: cool::RelationalNodeTable::defaultTableName(std::string const&) (RelationalNodeTable.h:33)
==xxxxx==    by 0xF2DD55F: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:159)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool19RelationalNodeTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,306 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2E718D: cool::RelationalGlobalTagTable::defaultTableName(std::string const&) (RelationalGlobalTagTable.h:28)
==xxxxx==    by 0xF2DD597: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:164)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool24RelationalGlobalTagTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,307 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2E7316: cool::RelationalTag2TagTable::defaultTableName(std::string const&) (RelationalTag2TagTable.h:27)
==xxxxx==    by 0xF2DD5CF: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:183)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool22RelationalTag2TagTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,308 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2E7385: cool::RelationalTagSharedSequenceTable::defaultTableName(std::string const&) (RelationalTagSharedSequenceTable.h:24)
==xxxxx==    by 0xF2DD607: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:188)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool32RelationalTagSharedSequenceTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,309 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2E71FC: cool::RelationalIovSharedSequenceTable::defaultTableName(std::string const&) (RelationalIovSharedSequenceTable.h:24)
==xxxxx==    by 0xF2DD63F: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:193)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool32RelationalIovSharedSequenceTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,310 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 19,311 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,323 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,324 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0xF2B8109: cool::RelationalObjectTable::defaultTableName(std::string const&, unsigned int) (RelationalObjectTable.h:60)
==xxxxx==    by 0xF2AE12C: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1137)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN4cool21RelationalObjectTable16defaultTableNameERKSsj
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,325 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0xF2B8751: cool::RelationalTagTable::defaultTableName(std::string const&, unsigned int) (RelationalTagTable.h:32)
==xxxxx==    by 0xF2AE261: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1145)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN4cool18RelationalTagTable16defaultTableNameERKSsj
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 45 bytes in 1 blocks are possibly lost in loss record 19,339 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 45 bytes in 1 blocks are possibly lost in loss record 19,340 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 45 bytes in 1 blocks are possibly lost in loss record 19,342 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xB604BD5: TGenCollectionProxy::TGenCollectionProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionProxy.cxx:605)
==xxxxx==    by 0xB5CF552: TCollectionProxyFactory::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:110)
==xxxxx==    by 0xB646D74: TStreamerInfo::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4411)
==xxxxx==    by 0x4F0EDFD: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4732)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x516BA6B: ROOT::vectorlEunsignedsPintgR_Dictionary() (G__Base3.cxx:10062)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN19TGenCollectionProxyC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL34vectorlEunsignedsPintgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 45 bytes in 1 blocks are possibly lost in loss record 19,344 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xB604BD5: TGenCollectionProxy::TGenCollectionProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionProxy.cxx:605)
==xxxxx==    by 0xB60D792: TGenCollectionStreamer::TGenCollectionStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionStreamer.cxx:48)
==xxxxx==    by 0xB5CF5A8: TCollectionProxyFactory::GenExplicitStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:117)
==xxxxx==    by 0xB5CF60E: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:126)
==xxxxx==    by 0xB646D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x516BA6B: ROOT::vectorlEunsignedsPintgR_Dictionary() (G__Base3.cxx:10062)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN19TGenCollectionProxyC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN22TGenCollectionStreamerC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory19GenExplicitStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL34vectorlEunsignedsPintgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 46 bytes in 1 blocks are possibly lost in loss record 19,352 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 47 bytes in 1 blocks are possibly lost in loss record 19,362 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2E6DF5: cool::RelationalDatabaseTable::tableName(std::string const&) (RelationalDatabaseTable.h:42)
==xxxxx==    by 0xF2DF6B8: cool::RelationalDatabase::mainTableName() const (RelationalDatabase.cpp:489)
==xxxxx==    by 0xF2A8C1A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool23RelationalDatabaseTable9tableNameERKSs
   fun:_ZNK4cool18RelationalDatabase13mainTableNameEv
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 47 bytes in 1 blocks are possibly lost in loss record 19,365 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0xF2B828C: cool::RelationalObject2TagTable::defaultTableName(std::string const&, unsigned int) (RelationalObject2TagTable.h:37)
==xxxxx==    by 0xF2AE21D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1143)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN4cool25RelationalObject2TagTable16defaultTableNameERKSsj
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,325 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,326 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D72E: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1275)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,327 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,328 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,329 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,330 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,331 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,332 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,333 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,334 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,335 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,336 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,337 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,338 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,339 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,340 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,341 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,342 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,369 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,370 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,371 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,372 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,373 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,374 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,375 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,376 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,377 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,378 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,379 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12306BB0: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 22,380 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F1AC: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1230EFA1: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x1230ECD6: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x1230E502: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x1230D7E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::SQLiteAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::SQLiteAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x1230CC6A: std::map<std::string, coral::SQLiteAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::SQLiteAccess::Table*> > >::insert(std::pair<std::string const, coral::SQLiteAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12306C3B: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:131)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral12SQLiteAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral12SQLiteAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral12SQLiteAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,477 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x1238F8DF: pthreadMutexAlloc (sqlite3.c:17628)
==xxxxx==    by 0x123F087A: openDatabase (sqlite3.c:16942)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:pthreadMutexAlloc
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,478 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x12386CEB: sqlite3FindCollSeq (sqlite3.c:83431)
==xxxxx==    by 0x1239C2C3: createCollation (sqlite3.c:112225)
==xxxxx==    by 0x123F071B: openDatabase (sqlite3.c:112692)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3FindCollSeq
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,479 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x12386CEB: sqlite3FindCollSeq (sqlite3.c:83431)
==xxxxx==    by 0x1239C2C3: createCollation (sqlite3.c:112225)
==xxxxx==    by 0x123F079C: openDatabase (sqlite3.c:112698)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3FindCollSeq
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,480 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x12386CEB: sqlite3FindCollSeq (sqlite3.c:83431)
==xxxxx==    by 0x1239C2C3: createCollation (sqlite3.c:112225)
==xxxxx==    by 0x123F0804: openDatabase (sqlite3.c:112707)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3FindCollSeq
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,481 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12397FD8: createModule (sqlite3.c:99676)
==xxxxx==    by 0x123F0AF1: openDatabase (sqlite3.c:120183)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,482 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239802B: createModule (sqlite3.c:99685)
==xxxxx==    by 0x123F0AF1: openDatabase (sqlite3.c:120183)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,483 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A8CC4: fts3HashMalloc (sqlite3.c:121213)
==xxxxx==    by 0x123A8F1A: sqlite3Fts3HashInsert (sqlite3.c:121535)
==xxxxx==    by 0x123F0B5E: openDatabase (sqlite3.c:118081)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:fts3HashMalloc
   fun:sqlite3Fts3HashInsert
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,484 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A8CC4: fts3HashMalloc (sqlite3.c:121213)
==xxxxx==    by 0x123A8F1A: sqlite3Fts3HashInsert (sqlite3.c:121535)
==xxxxx==    by 0x123F0C76: openDatabase (sqlite3.c:118082)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:fts3HashMalloc
   fun:sqlite3Fts3HashInsert
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,485 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12397FD8: createModule (sqlite3.c:99676)
==xxxxx==    by 0x123F0DA1: openDatabase (sqlite3.c:118109)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,486 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239802B: createModule (sqlite3.c:99685)
==xxxxx==    by 0x123F0DA1: openDatabase (sqlite3.c:118109)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,487 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12397FD8: createModule (sqlite3.c:99676)
==xxxxx==    by 0x123F0DC5: openDatabase (sqlite3.c:118113)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,488 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239802B: createModule (sqlite3.c:99685)
==xxxxx==    by 0x123F0DC5: openDatabase (sqlite3.c:118113)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,489 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12397FD8: createModule (sqlite3.c:99676)
==xxxxx==    by 0x123F0C29: openDatabase (sqlite3.c:131030)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,490 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239802B: createModule (sqlite3.c:99685)
==xxxxx==    by 0x123F0C29: openDatabase (sqlite3.c:131030)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,491 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239802B: createModule (sqlite3.c:99685)
==xxxxx==    by 0x123F0C4F: openDatabase (sqlite3.c:131034)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,492 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,493 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48E7: sqlite3Init (sqlite3.c:92240)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,494 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,495 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,496 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,497 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,498 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,499 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239B569: sqlite3CreateForeignKey (sqlite3.c:81726)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,500 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,501 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,502 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,503 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,504 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,505 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,506 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123DE9D0: sqlite3Parser (sqlite3.c:108242)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,507 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,508 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,509 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239B569: sqlite3CreateForeignKey (sqlite3.c:81726)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,510 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,511 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,512 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,513 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,514 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,515 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,516 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,518 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0xF2B6C8A: cool::RelationalChannelTable::defaultTableName(std::string const&, unsigned int) (RelationalChannelTable.h:50)
==xxxxx==    by 0xF2AE2E3: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1149)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN4cool22RelationalChannelTable16defaultTableNameERKSsj
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,519 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,520 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,521 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,522 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,523 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239B569: sqlite3CreateForeignKey (sqlite3.c:81726)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,524 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,525 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,526 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,527 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,528 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,529 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,530 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,531 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,532 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,533 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,534 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 48 bytes in 3 blocks are possibly lost in loss record 22,535 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 48 bytes in 3 blocks are possibly lost in loss record 22,536 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122F4A97: coral::SQLiteAccess::DataEditor::insertRow(coral::AttributeList const&) (DataEditor.cpp:75)
==xxxxx==    by 0xF2C2C8A: cool::RalQueryMgr::insertTableRow(std::string const&, cool::Record const&) const (RalQueryMgr.cpp:397)
==xxxxx==    by 0xF2C72ED: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:302)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess10DataEditor9insertRowERKNS_13AttributeListE
   fun:_ZNK4cool11RalQueryMgr14insertTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 49 bytes in 1 blocks are possibly lost in loss record 22,547 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 49 bytes in 1 blocks are possibly lost in loss record 22,548 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 49 bytes in 1 blocks are possibly lost in loss record 22,549 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 49 bytes in 1 blocks are possibly lost in loss record 22,550 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0x1232DEB7: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 53 bytes in 1 blocks are possibly lost in loss record 22,578 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2B7F26: cool::RelationalNodeTable::sequenceName(std::string const&) (RelationalNodeTable.h:40)
==xxxxx==    by 0xF2C6AE8: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:238)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool19RelationalNodeTable12sequenceNameERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,601 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BE4C8: cool::RalDatabaseSvc::RalDatabaseSvc(coral::IConnectionService&) (RalDatabaseSvc.cpp:22)
==xxxxx==    by 0xF29CC10: cool::CoralApplication::CoralApplication(coral::IConnectionService*) (CoralApplication.cpp:226)
==xxxxx==    by 0x579A408: cool::Application::Application(coral::IConnectionService*) (Application.cpp:20)
==xxxxx==    by 0x579A6A4: cool::DatabaseSvcFactory::databaseService() (DatabaseSvcFactory.cpp:23)
==xxxxx==    by 0xF0A6E47: (anonymous namespace)::method_11421(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19906)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11D2504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B4579: PyROOT::TRootObjectRefExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:309)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2A8845: PyROOT::TClassMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (ClassMethodHolder.cxx:38)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool14RalDatabaseSvcC1ERN5coral18IConnectionServiceE
   fun:_ZN4cool16CoralApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool11ApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool18DatabaseSvcFactory15databaseServiceEv
   fun:_ZN12_GLOBAL__N_1L12method_11421EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT22TRootObjectRefExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT18TClassMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,606 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD60613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x1232428B: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:955)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,607 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD60613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x1232428B: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:955)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 56 bytes in 1 blocks are possibly lost in loss record 22,613 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12397FD8: createModule (sqlite3.c:99676)
==xxxxx==    by 0x123F0C4F: openDatabase (sqlite3.c:131034)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:createModule
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,614 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,615 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,616 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,617 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,618 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,619 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 56 bytes in 3 blocks are possibly lost in loss record 22,620 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 57 bytes in 1 blocks are possibly lost in loss record 22,625 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2B886F: cool::RelationalTag2TagTable::sequenceName(std::string const&) (RelationalTag2TagTable.h:33)
==xxxxx==    by 0xF2C8617: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:516)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool22RelationalTag2TagTable12sequenceNameERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 61 bytes in 1 blocks are possibly lost in loss record 22,644 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2C896D: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 61 bytes in 1 blocks are possibly lost in loss record 22,645 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2C8AE6: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 62 bytes in 1 blocks are possibly lost in loss record 22,664 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DADAD: cool::RelationalDatabaseId::extractOption(std::string const&, std::string const&) (RelationalDatabaseId.cpp:191)
==xxxxx==    by 0xF2DB220: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:248)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2DC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId13extractOptionERKSsS2_
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 62 bytes in 1 blocks are possibly lost in loss record 22,665 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DADAD: cool::RelationalDatabaseId::extractOption(std::string const&, std::string const&) (RelationalDatabaseId.cpp:191)
==xxxxx==    by 0xF2DB220: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:248)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2D1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId13extractOptionERKSsS2_
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 62 bytes in 1 blocks are possibly lost in loss record 22,666 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DE43: std::string::assign(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12228AC1: coral::URIParser::parse() (URIParser.cpp:113)
==xxxxx==    by 0x12228773: coral::URIParser::databaseOrSchemaName() const (URIParser.cpp:61)
==xxxxx==    by 0x122F7394: coral::SQLiteAccess::Domain::decodeUserConnectionString(std::string const&) const (Domain.cpp:64)
==xxxxx==    by 0x12194841: coral::ConnectionService::DataSource::setupForConnection(coral::ConnectionService::ConnectionParams&, std::string const&, coral::ICertificateData const*) (DataSource.cpp:31)
==xxxxx==    by 0x1218570A: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:271)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs6assignERKSs
   fun:_ZN5coral9URIParser5parseEv
   fun:_ZNK5coral9URIParser20databaseOrSchemaNameEv
   fun:_ZNK5coral12SQLiteAccess6Domain26decodeUserConnectionStringERKSs
   fun:_ZN5coral17ConnectionService10DataSource18setupForConnectionERNS0_16ConnectionParamsERKSsPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,673 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2B8800: cool::RelationalTagSequence::sequenceName(std::string const&, unsigned int) (RelationalTagSequence.h:23)
==xxxxx==    by 0xF2C730C: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:306)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool21RelationalTagSequence12sequenceNameERKSsj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,674 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2B8800: cool::RelationalTagSequence::sequenceName(std::string const&, unsigned int) (RelationalTagSequence.h:23)
==xxxxx==    by 0xF2AE2A5: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1147)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool21RelationalTagSequence12sequenceNameERKSsj
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,675 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2C9CE2: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:764)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,676 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2C9E51: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:785)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,677 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2C9F89: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:797)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,678 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2CA0F8: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:812)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,679 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2CA2A8: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:824)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,680 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2CAA13: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,681 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2B81B2: cool::RelationalObjectTable::sequenceName(std::string const&) (RelationalObjectTable.h:67)
==xxxxx==    by 0xF2CA47C: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:851)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool21RelationalObjectTable12sequenceNameERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,783 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x122F0B76: coral::SQLiteAccess::Connection::Connection(coral::SQLiteAccess::DomainProperties const&, std::string const&) (Connection.cpp:45)
==xxxxx==    by 0x122F7308: coral::SQLiteAccess::Domain::newConnection(std::string const&) const (Domain.cpp:54)
==xxxxx==    by 0x1218392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral12SQLiteAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,784 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1231BC5C: coral::SQLiteAccess::TableDescriptionProxy::refreshConstraints() const (TableDescriptionProxy.cpp:170)
==xxxxx==    by 0x12324E23: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1031)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy18refreshConstraintsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,785 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x1231BC5C: coral::SQLiteAccess::TableDescriptionProxy::refreshConstraints() const (TableDescriptionProxy.cpp:170)
==xxxxx==    by 0x12324E23: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1031)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy18refreshConstraintsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,790 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF354CC4: cool::RelationalTagMgr::fetchGlobalTagTableRow(unsigned int, std::string const&) const (RelationalTagMgr.cpp:222)
==xxxxx==    by 0xF355FF8: cool::RelationalTagMgr::findTagRecord(unsigned int, std::string const&) const (RelationalTagMgr.cpp:372)
==xxxxx==    by 0xF2F0DDF: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1376)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool16RelationalTagMgr22fetchGlobalTagTableRowEjRKSs
   fun:_ZNK4cool16RelationalTagMgr13findTagRecordEjRKSs
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL14PRCallFuncExecPN4Cint11G__CallFuncEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,791 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF354CC4: cool::RelationalTagMgr::fetchGlobalTagTableRow(unsigned int, std::string const&) const (RelationalTagMgr.cpp:222)
==xxxxx==    by 0xF355FF8: cool::RelationalTagMgr::findTagRecord(unsigned int, std::string const&) const (RelationalTagMgr.cpp:372)
==xxxxx==    by 0xF2F0DDF: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1376)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool16RelationalTagMgr22fetchGlobalTagTableRowEjRKSs
   fun:_ZNK4cool16RelationalTagMgr13findTagRecordEjRKSs
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL14PRCallFuncExecPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TVoidExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,793 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,794 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,795 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD6751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD66A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD6065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x1232428B: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:955)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,796 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,797 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,802 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB5CF5EC: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:125)
==xxxxx==    by 0xB646D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x516BA6B: ROOT::vectorlEunsignedsPintgR_Dictionary() (G__Base3.cxx:10062)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL34vectorlEunsignedsPintgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,807 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB5CF5EC: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:125)
==xxxxx==    by 0xB646D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==xxxxx== 64 bytes in 1 blocks are possibly lost in loss record 22,890 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x12383B2D: sqlite3ValueNew (sqlite3.c:58012)
==xxxxx==    by 0x12397EF3: sqlite3Error (sqlite3.c:20751)
==xxxxx==    by 0x1239C30B: createCollation (sqlite3.c:112232)
==xxxxx==    by 0x123F071B: openDatabase (sqlite3.c:112692)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3ValueNew
   fun:sqlite3Error
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 64 bytes in 2 blocks are possibly lost in loss record 22,893 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 64 bytes in 3 blocks are possibly lost in loss record 22,894 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 64 bytes in 3 blocks are possibly lost in loss record 22,895 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 64 bytes in 4 blocks are possibly lost in loss record 22,896 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123839B3: sqlite3IndexAffinityStr (sqlite3.c:87271)
==xxxxx==    by 0x123F53EA: sqlite3GenerateConstraintChecks (sqlite3.c:88533)
==xxxxx==    by 0x123D6C4D: sqlite3Insert (sqlite3.c:88179)
==xxxxx==    by 0x123DD797: sqlite3Parser (sqlite3.c:108495)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x122DD9D3: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:147)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF316849: cool::RelationalObjectMgr::bulkInsertObjectTableRows(cool::RelationalFolder const*, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > > const&, std::vector<boost::shared_ptr<cool::RelationalPayloadTableRow>, std::allocator<boost::shared_ptr<cool::RelationalPayloadTableRow> > > const&) const (RelationalObjectMgr.cpp:1107)
==xxxxx==    by 0xF31A4C9: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1620)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3IndexAffinityStr
   fun:sqlite3GenerateConstraintChecks
   fun:sqlite3Insert
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr25bulkInsertObjectTableRowsEPKNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaIS8_EERKS4_INS6_INS_25RelationalPayloadTableRowEEESaISE_EE
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN12_GLOBAL__N_1L12method_11591EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 69 bytes in 1 blocks are possibly lost in loss record 22,916 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2CC873: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1225)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 71 bytes in 1 blocks are possibly lost in loss record 22,926 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xF2CC419: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1176)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 72 bytes in 1 blocks are still reachable in loss record 22,954 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1230F4DD: coral::SQLiteAccess::Session::Session(coral::IDevConnection&, boost::shared_ptr<coral::SQLiteAccess::ConnectionProperties>, std::string const&, coral::AccessMode) (Session.cpp:54)
==xxxxx==    by 0x122F15B5: coral::SQLiteAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:81)
==xxxxx==    by 0x1217D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess7SessionC1ERNS_14IDevConnectionEN5boost10shared_ptrINS0_20ConnectionPropertiesEEERKSsNS_10AccessModeE
   fun:_ZNK5coral12SQLiteAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 72 bytes in 1 blocks are still reachable in loss record 22,955 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD61252: coral::TableDescription::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescription.cpp:846)
==xxxxx==    by 0x1231FACF: coral::SQLiteAccess::TableDescriptionProxy::refreshForeignKeyInfo() const (TableDescriptionProxy.cpp:452)
==xxxxx==    by 0x12324E32: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1033)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription16createForeignKeyERKSsRKSt6vectorISsSaISsEES2_S7_
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy21refreshForeignKeyInfoEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 72 bytes in 1 blocks are still reachable in loss record 22,956 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD61252: coral::TableDescription::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescription.cpp:846)
==xxxxx==    by 0x12324E86: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1039)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription16createForeignKeyERKSsRKSt6vectorISsSaISsEES2_S7_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 72 bytes in 1 blocks are still reachable in loss record 22,957 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD61252: coral::TableDescription::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescription.cpp:846)
==xxxxx==    by 0x12324E86: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1039)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription16createForeignKeyERKSsRKSt6vectorISsSaISsEES2_S7_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 72 bytes in 1 blocks are still reachable in loss record 22,958 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD61252: coral::TableDescription::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescription.cpp:846)
==xxxxx==    by 0x12324E86: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1039)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription16createForeignKeyERKSsRKSt6vectorISsSaISsEES2_S7_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 72 bytes in 3 blocks are still reachable in loss record 22,960 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2C6B85: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:244)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 72 bytes in 3 blocks are still reachable in loss record 22,961 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 72 bytes in 3 blocks are still reachable in loss record 22,962 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CA519: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:859)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 72 bytes in 3 blocks are still reachable in loss record 22,963 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,977 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,978 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,979 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,980 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,981 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,982 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 72 bytes in 3 blocks are possibly lost in loss record 22,983 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 74 bytes in 1 blocks are possibly lost in loss record 22,990 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2D0F7C: cool::RalConnectionString(cool::RelationalDatabaseId const&) (RalSessionMgr.cpp:31)
==xxxxx==    by 0xF2D191A: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:175)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool19RalConnectionStringERKNS_20RelationalDatabaseIdE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 79 bytes in 1 blocks are possibly lost in loss record 23,008 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DB5A4: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:263)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2DC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 79 bytes in 1 blocks are possibly lost in loss record 23,009 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DB5A4: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:263)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2D1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 80 bytes in 1 blocks are still reachable in loss record 23,215 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFCC2F5D: coral::AttributeList::operator=(coral::AttributeList const&) (AttributeList.cpp:64)
==xxxxx==    by 0xF413EFF: cool::Record::reset() (Record.cpp:206)
==xxxxx==    by 0xF413B7D: cool::Record::operator=(cool::IRecord const&) (Record.cpp:133)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral13AttributeListaSERKS0_
   fun:_ZN4cool6Record5resetEv
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 80 bytes in 1 blocks are still reachable in loss record 23,216 of 33,250
==xxxxx==    at 0x4A0931B: realloc (vg_replace_malloc.c:632)
==xxxxx==    by 0x301C409E15: _dl_lookup_symbol_x (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C40CFB4: _dl_fixup (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C412A31: _dl_runtime_resolve (in /lib64/ld-2.5.so)
==xxxxx==    by 0x1232A427: int boost::random::detail::generate_uniform_int<boost::random::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>, int>(boost::random::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&, int, int, mpl_::bool_<true>) (uniform_int_distribution.hpp:191)
==xxxxx==    by 0x123288F1: int boost::random::detail::generate_uniform_int<boost::random::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>, int>(boost::random::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&, int, int) (uniform_int_distribution.hpp:229)
==xxxxx==    by 0x12327746: int boost::random::uniform_int_distribution<int>::operator()<boost::random::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u> >(boost::random::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&) const (uniform_int_distribution.hpp:352)
==xxxxx==    by 0x1231A403: (anonymous namespace)::getRandomName(std::string&, int) (TableDescriptionProxy.cpp:34)
==xxxxx==    by 0x123254AA: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1124)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:realloc
   fun:_dl_lookup_symbol_x
   fun:_dl_fixup
   fun:_dl_runtime_resolve
   fun:_ZN5boost6random6detail20generate_uniform_intINS0_23mersenne_twister_engineIjLm32ELm624ELm397ELm31ELj2567483615ELm11ELj4294967295ELm7ELj2636928640ELm15ELj4022730752ELm18ELj1812433253EEEiEET0_RT_S5_S5_N4mpl_5bool_ILb1EEE
   fun:_ZN5boost6random6detail20generate_uniform_intINS0_23mersenne_twister_engineIjLm32ELm624ELm397ELm31ELj2567483615ELm11ELj4294967295ELm7ELj2636928640ELm15ELj4022730752ELm18ELj1812433253EEEiEET0_RT_S5_S5_
   fun:_ZNK5boost6random24uniform_int_distributionIiEclINS0_23mersenne_twister_engineIjLm32ELm624ELm397ELm31ELj2567483615ELm11ELj4294967295ELm7ELj2636928640ELm15ELj4022730752ELm18ELj1812433253EEEEEiRT_
   fun:_ZN12_GLOBAL__N_113getRandomNameERSsi
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 80 bytes in 1 blocks are possibly lost in loss record 23,283 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123B0673: sqlite3BtreeOpen (sqlite3.c:49827)
==xxxxx==    by 0x123F08D6: openDatabase (sqlite3.c:112721)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:sqlite3BtreeOpen
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 80 bytes in 1 blocks are possibly lost in loss record 23,284 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123F03B5: unixOpen (sqlite3.c:25793)
==xxxxx==    by 0x123B11E2: sqlite3BtreeOpen (sqlite3.c:14550)
==xxxxx==    by 0x123F08D6: openDatabase (sqlite3.c:112721)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:unixOpen
   fun:sqlite3BtreeOpen
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 80 bytes in 1 blocks are possibly lost in loss record 23,285 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123B0673: sqlite3BtreeOpen (sqlite3.c:49827)
==xxxxx==    by 0x123B1413: sqlite3OpenTempDatabase (sqlite3.c:82948)
==xxxxx==    by 0x123B24FC: sqlite3WhereBegin (sqlite3.c:105718)
==xxxxx==    by 0x123B52A6: sqlite3Select (sqlite3.c:96690)
==xxxxx==    by 0x123BAE05: multiSelect (sqlite3.c:95059)
==xxxxx==    by 0x123B5216: sqlite3Select (sqlite3.c:96595)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:sqlite3BtreeOpen
   fun:sqlite3OpenTempDatabase
   fun:sqlite3WhereBegin
   fun:sqlite3Select
   fun:multiSelect
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 80 bytes in 3 blocks are possibly lost in loss record 23,288 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 80 bytes in 5 blocks are possibly lost in loss record 23,289 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
}
==xxxxx== 80 bytes in 5 blocks are possibly lost in loss record 23,290 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48E7: sqlite3Init (sqlite3.c:92240)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,548 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,549 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,550 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,551 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,552 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,553 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,554 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,555 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,556 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,558 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,559 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,560 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,561 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,562 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,563 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232DE11: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:21)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 88 bytes in 1 blocks are possibly lost in loss record 24,567 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C9FE: sqlite3_overload_function (sqlite3.c:111755)
==xxxxx==    by 0x123F0989: openDatabase (sqlite3.c:85803)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_overload_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 88 bytes in 1 blocks are possibly lost in loss record 24,568 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C9FE: sqlite3_overload_function (sqlite3.c:111755)
==xxxxx==    by 0x123F0D09: openDatabase (sqlite3.c:118103)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_overload_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 88 bytes in 1 blocks are possibly lost in loss record 24,569 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C9FE: sqlite3_overload_function (sqlite3.c:111755)
==xxxxx==    by 0x123F0D25: openDatabase (sqlite3.c:118104)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_overload_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,788 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C89C: sqlite3CreateFunc (sqlite3.c:111601)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0CB3: openDatabase (sqlite3.c:122669)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,789 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C8D7: sqlite3CreateFunc (sqlite3.c:111604)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0CB3: openDatabase (sqlite3.c:122669)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,790 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0CB3: openDatabase (sqlite3.c:122669)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,791 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C89C: sqlite3CreateFunc (sqlite3.c:111601)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0CEF: openDatabase (sqlite3.c:122672)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,792 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C8D7: sqlite3CreateFunc (sqlite3.c:111604)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0CEF: openDatabase (sqlite3.c:122672)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,793 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0CEF: openDatabase (sqlite3.c:122672)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,794 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C9FE: sqlite3_overload_function (sqlite3.c:111755)
==xxxxx==    by 0x123F0D41: openDatabase (sqlite3.c:118105)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_overload_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,795 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C9FE: sqlite3_overload_function (sqlite3.c:111755)
==xxxxx==    by 0x123F0D5D: openDatabase (sqlite3.c:118106)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_overload_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,796 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239C9FE: sqlite3_overload_function (sqlite3.c:111755)
==xxxxx==    by 0x123F0D79: openDatabase (sqlite3.c:118107)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_overload_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,797 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0BCA: openDatabase (sqlite3.c:131024)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 1 blocks are possibly lost in loss record 24,798 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123894B3: sqlite3FindFunction (sqlite3.c:83645)
==xxxxx==    by 0x1239C77A: sqlite3CreateFunc (sqlite3.c:111633)
==xxxxx==    by 0x1239CC1C: sqlite3_create_function_v2 (sqlite3.c:111696)
==xxxxx==    by 0x1239CC64: sqlite3_create_function (sqlite3.c:111669)
==xxxxx==    by 0x123F0C06: openDatabase (sqlite3.c:131026)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindFunction
   fun:sqlite3CreateFunc
   fun:sqlite3_create_function_v2
   fun:sqlite3_create_function
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
}
==xxxxx== 96 bytes in 2 blocks are possibly lost in loss record 24,799 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123DE9D0: sqlite3Parser (sqlite3.c:108242)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 96 bytes in 2 blocks are possibly lost in loss record 24,800 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x1239B569: sqlite3CreateForeignKey (sqlite3.c:81726)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 96 bytes in 5 blocks are possibly lost in loss record 24,803 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
}
==xxxxx== 96 bytes in 5 blocks are possibly lost in loss record 24,804 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48E7: sqlite3Init (sqlite3.c:92240)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
}
==xxxxx== 96 bytes in 5 blocks are possibly lost in loss record 24,805 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 104 bytes in 1 blocks are possibly lost in loss record 24,887 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A988B: pcache1Create (sqlite3.c:36379)
==xxxxx==    by 0x123814B2: sqlite3PcacheFetch (sqlite3.c:35428)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BE8A5: sqlite3BtreeBeginTrans (sqlite3.c:50387)
==xxxxx==    by 0x123D44D6: sqlite3InitOne (sqlite3.c:92058)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Create
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:sqlite3BtreeBeginTrans
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
}
==xxxxx== 104 bytes in 1 blocks are possibly lost in loss record 24,888 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A988B: pcache1Create (sqlite3.c:36379)
==xxxxx==    by 0x123814B2: sqlite3PcacheFetch (sqlite3.c:35428)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BE8A5: sqlite3BtreeBeginTrans (sqlite3.c:50387)
==xxxxx==    by 0x123CB308: sqlite3VdbeExec (sqlite3.c:66301)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316B2F: coral::SQLiteAccess::SQLiteStatement::fetchNext() (SQLiteStatement.cpp:293)
==xxxxx==    by 0x1230BA57: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:493)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Create
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:sqlite3BtreeBeginTrans
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement9fetchNextEv
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 112 bytes in 1 blocks are still reachable in loss record 24,932 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x122F1579: coral::SQLiteAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:81)
==xxxxx==    by 0x1217D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK5coral12SQLiteAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 112 bytes in 1 blocks are possibly lost in loss record 24,941 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 112 bytes in 1 blocks are possibly lost in loss record 24,942 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 112 bytes in 1 blocks are possibly lost in loss record 24,943 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 112 bytes in 1 blocks are possibly lost in loss record 24,944 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 112 bytes in 5 blocks are possibly lost in loss record 24,946 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 112 bytes in 5 blocks are possibly lost in loss record 24,947 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 120 bytes in 5 blocks are still reachable in loss record 24,974 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x1231BC5C: coral::SQLiteAccess::TableDescriptionProxy::refreshConstraints() const (TableDescriptionProxy.cpp:170)
==xxxxx==    by 0x12324E23: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1031)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy18refreshConstraintsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 120 bytes in 5 blocks are still reachable in loss record 24,975 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 120 bytes in 5 blocks are possibly lost in loss record 24,981 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 120 bytes in 6 blocks are possibly lost in loss record 24,982 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 25,004 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF10D89F: __gnu_cxx::new_allocator<cool::IFieldSpecification*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF10B796: std::_Vector_base<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF11C7B2: std::vector<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cool::IFieldSpecification**, std::vector<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> > >, cool::IFieldSpecification* const&) (vector.tcc:327)
==xxxxx==    by 0xF104483: std::vector<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> >::push_back(cool::IFieldSpecification* const&) (stl_vector.h:834)
==xxxxx==    by 0xF4146C0: cool::RecordSpecification::extend(std::string const&, cool::StorageType::TypeId) (RecordSpecification.cpp:72)
==xxxxx==    by 0xF414058: cool::Record::extend(cool::IRecord const&) (Record.cpp:220)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN4cool19IFieldSpecificationEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN4cool19IFieldSpecificationESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN4cool19IFieldSpecificationESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN4cool19IFieldSpecificationESaIS2_EE9push_backERKS2_
   fun:_ZN4cool19RecordSpecification6extendERKSsNS_11StorageType6TypeIdE
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 25,005 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF10DE53: __gnu_cxx::new_allocator<coral::AttributeSpecification*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF10C212: std::_Vector_base<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF11E744: std::vector<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::AttributeSpecification**, std::vector<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> > >, coral::AttributeSpecification* const&) (vector.tcc:327)
==xxxxx==    by 0xF1069CD: std::vector<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> >::push_back(coral::AttributeSpecification* const&) (stl_vector.h:834)
==xxxxx==    by 0xFCC5BBF: coral::AttributeListSpecification::extend(std::string const&, std::type_info const&) (AttributeListSpecification.cpp:58)
==xxxxx==    by 0xFCC35D7: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:143)
==xxxxx==    by 0xF41407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral22AttributeSpecificationEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral22AttributeSpecificationESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral22AttributeSpecificationESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral22AttributeSpecificationESaIS2_EE9push_backERKS2_
   fun:_ZN5coral26AttributeListSpecification6extendERKSsRKSt9type_info
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 25,006 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF10E125: __gnu_cxx::new_allocator<coral::Attribute*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF10C750: std::_Vector_base<coral::Attribute*, std::allocator<coral::Attribute*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF11F642: std::vector<coral::Attribute*, std::allocator<coral::Attribute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Attribute**, std::vector<coral::Attribute*, std::allocator<coral::Attribute*> > >, coral::Attribute* const&) (vector.tcc:327)
==xxxxx==    by 0xF1079A7: std::vector<coral::Attribute*, std::allocator<coral::Attribute*> >::push_back(coral::Attribute* const&) (stl_vector.h:834)
==xxxxx==    by 0xFCC3630: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:144)
==xxxxx==    by 0xF41407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral9AttributeEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral9AttributeESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral9AttributeESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral9AttributeESaIS2_EE9push_backERKS2_
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 25,007 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF10D5CD: __gnu_cxx::new_allocator<cool::IField*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF10B258: std::_Vector_base<cool::IField*, std::allocator<cool::IField*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF11A76E: std::vector<cool::IField*, std::allocator<cool::IField*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cool::IField**, std::vector<cool::IField*, std::allocator<cool::IField*> > >, cool::IField* const&) (vector.tcc:327)
==xxxxx==    by 0xF102317: std::vector<cool::IField*, std::allocator<cool::IField*> >::push_back(cool::IField* const&) (stl_vector.h:834)
==xxxxx==    by 0xF414117: cool::Record::extend(cool::IRecord const&) (Record.cpp:223)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN4cool6IFieldEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN4cool6IFieldESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN4cool6IFieldESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN4cool6IFieldESaIS2_EE9push_backERKS2_
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 25,008 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 25,009 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 128 bytes in 1 blocks are possibly lost in loss record 25,037 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123884B8: sqlite3BtreeSchema (sqlite3.c:56160)
==xxxxx==    by 0x123884F0: sqlite3SchemaGet (sqlite3.c:83704)
==xxxxx==    by 0x123F0919: openDatabase (sqlite3.c:112730)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocZero
   fun:sqlite3BtreeSchema
   fun:sqlite3SchemaGet
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 128 bytes in 1 blocks are possibly lost in loss record 25,038 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1238858B: sqlite3SchemaGet (sqlite3.c:83706)
==xxxxx==    by 0x123F092C: openDatabase (sqlite3.c:112731)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocZero
   fun:sqlite3SchemaGet
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 128 bytes in 1 blocks are possibly lost in loss record 25,039 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 128 bytes in 5 blocks are possibly lost in loss record 25,043 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 133 bytes in 1 blocks are possibly lost in loss record 25,048 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DB60B: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:268)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2DC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 133 bytes in 1 blocks are possibly lost in loss record 25,049 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DB628: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:269)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2DC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 133 bytes in 1 blocks are possibly lost in loss record 25,050 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DB60B: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:268)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2D1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 133 bytes in 1 blocks are possibly lost in loss record 25,051 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2DB628: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:269)
==xxxxx==    by 0xF2D9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xF2D1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 136 bytes in 1 blocks are still reachable in loss record 25,078 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231036F: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:176)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 136 bytes in 1 blocks are possibly lost in loss record 25,084 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x122F72EE: coral::SQLiteAccess::Domain::newConnection(std::string const&) const (Domain.cpp:54)
==xxxxx==    by 0x1218392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK5coral12SQLiteAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 136 bytes in 1 blocks are possibly lost in loss record 25,085 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x12386C98: sqlite3FindCollSeq (sqlite3.c:83420)
==xxxxx==    by 0x1239C2C3: createCollation (sqlite3.c:112225)
==xxxxx==    by 0x123F071B: openDatabase (sqlite3.c:112692)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindCollSeq
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 136 bytes in 1 blocks are possibly lost in loss record 25,086 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x12386C98: sqlite3FindCollSeq (sqlite3.c:83420)
==xxxxx==    by 0x1239C2C3: createCollation (sqlite3.c:112225)
==xxxxx==    by 0x123F079C: openDatabase (sqlite3.c:112698)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindCollSeq
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 136 bytes in 1 blocks are possibly lost in loss record 25,087 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x12386C98: sqlite3FindCollSeq (sqlite3.c:83420)
==xxxxx==    by 0x1239C2C3: createCollation (sqlite3.c:112225)
==xxxxx==    by 0x123F0804: openDatabase (sqlite3.c:112707)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3FindCollSeq
   fun:createCollation
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 136 bytes in 1 blocks are possibly lost in loss record 25,088 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A8CC4: fts3HashMalloc (sqlite3.c:121213)
==xxxxx==    by 0x123A8D07: fts3Rehash (sqlite3.c:121376)
==xxxxx==    by 0x123A8FE8: sqlite3Fts3HashInsert (sqlite3.c:121528)
==xxxxx==    by 0x123F0B5E: openDatabase (sqlite3.c:118081)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:fts3HashMalloc
   fun:fts3Rehash
   fun:sqlite3Fts3HashInsert
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 144 bytes in 6 blocks are still reachable in loss record 25,179 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF354CC4: cool::RelationalTagMgr::fetchGlobalTagTableRow(unsigned int, std::string const&) const (RelationalTagMgr.cpp:222)
==xxxxx==    by 0xF355FF8: cool::RelationalTagMgr::findTagRecord(unsigned int, std::string const&) const (RelationalTagMgr.cpp:372)
==xxxxx==    by 0xF2F0DDF: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1376)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool16RelationalTagMgr22fetchGlobalTagTableRowEjRKSs
   fun:_ZNK4cool16RelationalTagMgr13findTagRecordEjRKSs
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL14PRCallFuncExecPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TVoidExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 144 bytes in 6 blocks are still reachable in loss record 25,180 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,182 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,183 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48E7: sqlite3Init (sqlite3.c:92240)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,184 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,185 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,186 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,187 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,188 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,189 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,190 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,191 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,192 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,193 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,194 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,195 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,196 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,197 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,198 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 144 bytes in 1 blocks are possibly lost in loss record 25,199 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123D4AD4: sqlite3StartTable (sqlite3.c:80267)
==xxxxx==    by 0x123DE598: sqlite3Parser (sqlite3.c:108053)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3StartTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 144 bytes in 6 blocks are possibly lost in loss record 25,200 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,205 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2A7D3E: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,206 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,207 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,208 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,209 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,210 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,211 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,212 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,213 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,214 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,215 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,216 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,217 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,218 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,219 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 25,220 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231A6E0: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:47)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 152 bytes in 1 blocks are possibly lost in loss record 25,226 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 152 bytes in 1 blocks are possibly lost in loss record 25,227 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123DE9D0: sqlite3Parser (sqlite3.c:108242)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 152 bytes in 1 blocks are possibly lost in loss record 25,228 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 160 bytes in 1 blocks are still reachable in loss record 25,234 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1217C627: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x12183962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 160 bytes in 10 blocks are still reachable in loss record 25,269 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFCC5B85: coral::AttributeListSpecification::extend(std::string const&, std::type_info const&) (AttributeListSpecification.cpp:58)
==xxxxx==    by 0xFCC35D7: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:143)
==xxxxx==    by 0xF41407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral26AttributeListSpecification6extendERKSsRKSt9type_info
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 160 bytes in 10 blocks are still reachable in loss record 25,270 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFCC3607: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:144)
==xxxxx==    by 0xF41407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,271 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123B06C2: sqlite3BtreeOpen (sqlite3.c:49907)
==xxxxx==    by 0x123F08D6: openDatabase (sqlite3.c:112721)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:sqlite3BtreeOpen
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,272 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123B06C2: sqlite3BtreeOpen (sqlite3.c:49907)
==xxxxx==    by 0x123B1413: sqlite3OpenTempDatabase (sqlite3.c:82948)
==xxxxx==    by 0x123B24FC: sqlite3WhereBegin (sqlite3.c:105718)
==xxxxx==    by 0x123B52A6: sqlite3Select (sqlite3.c:96690)
==xxxxx==    by 0x123BAE05: multiSelect (sqlite3.c:95059)
==xxxxx==    by 0x123B5216: sqlite3Select (sqlite3.c:96595)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:sqlite3BtreeOpen
   fun:sqlite3OpenTempDatabase
   fun:sqlite3WhereBegin
   fun:sqlite3Select
   fun:multiSelect
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,273 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,274 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,275 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,276 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,277 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,278 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,279 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,280 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,281 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,282 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 160 bytes in 1 blocks are possibly lost in loss record 25,283 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 160 bytes in 6 blocks are possibly lost in loss record 25,286 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 25,295 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2C6B85: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:244)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 25,296 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 25,297 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CA519: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:859)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 25,298 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF351C9C: cool::RelationalSequence::currValDate(unsigned int, bool) (RelationalSequence.cpp:60)
==xxxxx==    by 0xF2B85C8: cool::RelationalSequence::nextVal(unsigned int) (RelationalSequence.h:63)
==xxxxx==    by 0xF2CC633: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1194)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZN4cool18RelationalSequence11currValDateEjb
   fun:_ZN4cool18RelationalSequence7nextValEj
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 168 bytes in 1 blocks are possibly lost in loss record 25,301 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 176 bytes in 1 blocks are possibly lost in loss record 25,347 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 184 bytes in 1 blocks are still reachable in loss record 25,357 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12325FE7: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1192)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
}
==xxxxx== 192 bytes in 1 blocks are possibly lost in loss record 25,425 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
}
==xxxxx== 200 bytes in 1 blocks are possibly lost in loss record 25,452 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 224 bytes in 1 blocks are still reachable in loss record 25,485 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x121928FF: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:48)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 240 bytes in 10 blocks are still reachable in loss record 29,709 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF414690: cool::RecordSpecification::extend(std::string const&, cool::StorageType::TypeId) (RecordSpecification.cpp:72)
==xxxxx==    by 0xF414058: cool::Record::extend(cool::IRecord const&) (Record.cpp:220)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool19RecordSpecification6extendERKSsNS_11StorageType6TypeIdE
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 240 bytes in 10 blocks are still reachable in loss record 29,710 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF4140D7: cool::Record::extend(cool::IRecord const&) (Record.cpp:222)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 240 bytes in 2 blocks are possibly lost in loss record 29,712 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 240 bytes in 5 blocks are possibly lost in loss record 29,713 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386960: sqlite3HashInsert (sqlite3.c:22080)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12325FE7: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1192)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 240 bytes in 11 blocks are possibly lost in loss record 29,714 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 248 bytes in 12 blocks are possibly lost in loss record 29,717 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
}
==xxxxx== 256 bytes in 1 blocks are still reachable in loss record 29,723 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD67341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xFD6669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xFD65042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xFD63A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xFD5C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF306635: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&, cool::Record const&) const (RelationalNodeMgr.cpp:283)
==xxxxx==    by 0xF305FD1: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&) const (RelationalNodeMgr.cpp:233)
==xxxxx==    by 0xF2E2B05: cool::RelationalDatabase::fetchNodeTableRow(std::string const&) const (RelationalDatabase.cpp:1062)
==xxxxx==    by 0xF2ABCF2: cool::RalDatabase::insertNodeTableRow(std::string const&, std::string const&, bool, bool, std::string const&, cool::FolderVersioning::Mode, cool::PayloadMode::Mode) (RalDatabase.cpp:861)
==xxxxx==    by 0xF2AE0F4: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1132)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSs
   fun:_ZNK4cool18RelationalDatabase17fetchNodeTableRowERKSs
   fun:_ZN4cool11RalDatabase18insertNodeTableRowERKSsS2_bbS2_NS_16FolderVersioning4ModeENS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 256 bytes in 1 blocks are still reachable in loss record 29,724 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1232C6FB: __gnu_cxx::new_allocator<coral::SQLiteAccess::ColumnProxy*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x1232A70E: std::_Vector_base<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0x12328BA8: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::SQLiteAccess::ColumnProxy**, std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> > >, coral::SQLiteAccess::ColumnProxy* const&) (vector.tcc:327)
==xxxxx==    by 0x1232792D: std::vector<coral::SQLiteAccess::ColumnProxy*, std::allocator<coral::SQLiteAccess::ColumnProxy*> >::push_back(coral::SQLiteAccess::ColumnProxy* const&) (stl_vector.h:834)
==xxxxx==    by 0x1231B7CD: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:148)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF306635: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&, cool::Record const&) const (RelationalNodeMgr.cpp:283)
==xxxxx==    by 0xF305FD1: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&) const (RelationalNodeMgr.cpp:233)
==xxxxx==    by 0xF2E2B05: cool::RelationalDatabase::fetchNodeTableRow(std::string const&) const (RelationalDatabase.cpp:1062)
==xxxxx==    by 0xF2ABCF2: cool::RalDatabase::insertNodeTableRow(std::string const&, std::string const&, bool, bool, std::string const&, cool::FolderVersioning::Mode, cool::PayloadMode::Mode) (RalDatabase.cpp:861)
==xxxxx==    by 0xF2AE0F4: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1132)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral12SQLiteAccess11ColumnProxyEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
   fun:_ZNSt6vectorIPN5coral12SQLiteAccess11ColumnProxyESaIS3_EE9push_backERKS3_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSs
   fun:_ZNK4cool18RelationalDatabase17fetchNodeTableRowERKSs
   fun:_ZN4cool11RalDatabase18insertNodeTableRowERKSsS2_bbS2_NS_16FolderVersioning4ModeENS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 280 bytes in 5 blocks are still reachable in loss record 29,969 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1231BC5C: coral::SQLiteAccess::TableDescriptionProxy::refreshConstraints() const (TableDescriptionProxy.cpp:170)
==xxxxx==    by 0x12324E23: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1031)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy18refreshConstraintsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 280 bytes in 5 blocks are still reachable in loss record 29,970 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 280 bytes in 5 blocks are still reachable in loss record 29,971 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD60613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x1232428B: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:955)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 288 bytes in 12 blocks are still reachable in loss record 30,006 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 304 bytes in 1 blocks are still reachable in loss record 30,013 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x122F3940: coral::SQLiteAccess::ConnectionProperties::ConnectionProperties(coral::SQLiteAccess::DomainProperties const&, std::string const&) (ConnectionProperties.cpp:17)
==xxxxx==    by 0x122F0B8C: coral::SQLiteAccess::Connection::Connection(coral::SQLiteAccess::DomainProperties const&, std::string const&) (Connection.cpp:43)
==xxxxx==    by 0x122F7308: coral::SQLiteAccess::Domain::newConnection(std::string const&) const (Domain.cpp:54)
==xxxxx==    by 0x1218392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess20ConnectionPropertiesC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZN5coral12SQLiteAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral12SQLiteAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 320 bytes in 1 blocks are still reachable in loss record 30,026 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB5CF53C: TCollectionProxyFactory::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:110)
==xxxxx==    by 0xB646D74: TStreamerInfo::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4411)
==xxxxx==    by 0x4F0EDFD: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4732)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x516BA6B: ROOT::vectorlEunsignedsPintgR_Dictionary() (G__Base3.cxx:10062)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL34vectorlEunsignedsPintgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==xxxxx== 320 bytes in 1 blocks are still reachable in loss record 30,027 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB5CF53C: TCollectionProxyFactory::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:110)
==xxxxx==    by 0xB646D74: TStreamerInfo::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4411)
==xxxxx==    by 0x4F0EDFD: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4732)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==xxxxx== 320 bytes in 2 blocks are possibly lost in loss record 30,039 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123DE9D0: sqlite3Parser (sqlite3.c:108242)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 328 bytes in 1 blocks are possibly lost in loss record 30,046 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386A68: sqlite3HashInsert (sqlite3.c:21940)
==xxxxx==    by 0x123E0DA5: sqlite3EndTable (sqlite3.c:81074)
==xxxxx==    by 0x123DE288: sqlite3Parser (sqlite3.c:108088)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3EndTable
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 328 bytes in 19 blocks are possibly lost in loss record 30,047 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE0AF: sqlite3Parser (sqlite3.c:80519)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 336 bytes in 1 blocks are still reachable in loss record 31,935 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB5CF592: TCollectionProxyFactory::GenExplicitStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:117)
==xxxxx==    by 0xB5CF60E: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:126)
==xxxxx==    by 0xB646D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x516BA6B: ROOT::vectorlEunsignedsPintgR_Dictionary() (G__Base3.cxx:10062)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory19GenExplicitStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL34vectorlEunsignedsPintgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 336 bytes in 1 blocks are still reachable in loss record 31,936 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB5CF592: TCollectionProxyFactory::GenExplicitStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:117)
==xxxxx==    by 0xB5CF60E: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:126)
==xxxxx==    by 0xB646D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xB2B4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xB2BCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xB2BC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xB2BC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory19GenExplicitStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 336 bytes in 6 blocks are still reachable in loss record 31,938 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF354CC4: cool::RelationalTagMgr::fetchGlobalTagTableRow(unsigned int, std::string const&) const (RelationalTagMgr.cpp:222)
==xxxxx==    by 0xF355FF8: cool::RelationalTagMgr::findTagRecord(unsigned int, std::string const&) const (RelationalTagMgr.cpp:372)
==xxxxx==    by 0xF2F0DDF: cool::RelationalFolder::tagObjectList(std::string const&, std::string const&, std::vector<cool::RelationalObjectTableRow, std::allocator<cool::RelationalObjectTableRow> > const&) const (RelationalFolder.cpp:1376)
==xxxxx==    by 0xF2EF490: cool::RelationalFolder::tagCurrentHead(std::string const&, std::string const&) const (RelationalFolder.cpp:1188)
==xxxxx==    by 0xF364F06: cool::TransRelFolder::tagCurrentHead(std::string const&, std::string const&) const (TransRelFolder.cpp:412)
==xxxxx==    by 0xF08A70A: (anonymous namespace)::method_11601(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17360)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1265504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool16RelationalTagMgr22fetchGlobalTagTableRowEjRKSs
   fun:_ZNK4cool16RelationalTagMgr13findTagRecordEjRKSs
   fun:_ZNK4cool16RelationalFolder13tagObjectListERKSsS2_RKSt6vectorINS_24RelationalObjectTableRowESaIS4_EE
   fun:_ZNK4cool16RelationalFolder14tagCurrentHeadERKSsS2_
   fun:_ZNK4cool14TransRelFolder14tagCurrentHeadERKSsS2_
   fun:_ZN12_GLOBAL__N_1L12method_11601EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL14PRCallFuncExecPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TVoidExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 336 bytes in 6 blocks are still reachable in loss record 31,939 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 376 bytes in 1 blocks are still reachable in loss record 31,977 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2BE891: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,981 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2DC8A8: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,982 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF2D1194: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,983 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF3509AD: cool::RelationalQueryMgr::RelationalQueryMgr() (RelationalQueryMgr.cpp:15)
==xxxxx==    by 0xF2C022A: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:41)
==xxxxx==    by 0xF2A7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool18RelationalQueryMgrC1Ev
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,984 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF3513F1: cool::RelationalSequenceMgr::RelationalSequenceMgr(cool::RelationalQueryMgr const&) (RelationalSequenceMgr.cpp:16)
==xxxxx==    by 0xF2C4373: cool::RalSequenceMgr::RalSequenceMgr(cool::RelationalQueryMgr const&, cool::ISessionMgr const&) (RalSequenceMgr.h:36)
==xxxxx==    by 0xF2C031D: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:48)
==xxxxx==    by 0xF2A7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool21RelationalSequenceMgrC1ERKNS_18RelationalQueryMgrE
   fun:_ZN4cool14RalSequenceMgrC1ERKNS_18RelationalQueryMgrERKNS_11ISessionMgrE
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,985 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF350F9D: cool::RelationalSchemaMgr::RelationalSchemaMgr(cool::RelationalDatabase const&) (RelationalSchemaMgr.cpp:15)
==xxxxx==    by 0xF2B6B75: cool::RalSchemaMgr::RalSchemaMgr(cool::RelationalDatabase const&, boost::shared_ptr<cool::ISessionMgr> const&) (RalSchemaMgr.h:38)
==xxxxx==    by 0xF2A7F61: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:99)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool19RelationalSchemaMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool12RalSchemaMgrC1ERKNS_18RelationalDatabaseERKN5boost10shared_ptrINS_11ISessionMgrEEE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,986 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF304CAD: cool::RelationalNodeMgr::RelationalNodeMgr(cool::RelationalDatabase const&) (RelationalNodeMgr.cpp:24)
==xxxxx==    by 0xF2A7FFC: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:103)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool17RelationalNodeMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,987 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF35361D: cool::RelationalTagMgr::RelationalTagMgr(cool::RelationalDatabase const&) (RelationalTagMgr.cpp:38)
==xxxxx==    by 0xF2A8088: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:107)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool16RelationalTagMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,988 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF30F4F1: cool::RelationalObjectMgr::RelationalObjectMgr(cool::RelationalDatabase const&) (RelationalObjectMgr.cpp:36)
==xxxxx==    by 0xF2A8114: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:111)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool19RelationalObjectMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,014 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,015 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D43DE: sqlite3InitOne (sqlite3.c:92033)
==xxxxx==    by 0x123D48E7: sqlite3Init (sqlite3.c:92240)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,016 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,017 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,018 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,019 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,020 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,021 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,022 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,023 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,024 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,025 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,026 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CA4FD: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:856)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,027 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,028 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 392 bytes in 1 blocks are possibly lost in loss record 32,029 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 416 bytes in 3 blocks are possibly lost in loss record 32,052 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x1239B357: sqlite3CreateForeignKey (sqlite3.c:81680)
==xxxxx==    by 0x123DE95C: sqlite3Parser (sqlite3.c:108249)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8B0B: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:578)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateForeignKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 456 bytes in 19 blocks are still reachable in loss record 32,157 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x1231B77E: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:147)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF306635: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&, cool::Record const&) const (RelationalNodeMgr.cpp:283)
==xxxxx==    by 0xF305FD1: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&) const (RelationalNodeMgr.cpp:233)
==xxxxx==    by 0xF2E2B05: cool::RelationalDatabase::fetchNodeTableRow(std::string const&) const (RelationalDatabase.cpp:1062)
==xxxxx==    by 0xF2ABCF2: cool::RalDatabase::insertNodeTableRow(std::string const&, std::string const&, bool, bool, std::string const&, cool::FolderVersioning::Mode, cool::PayloadMode::Mode) (RalDatabase.cpp:861)
==xxxxx==    by 0xF2AE0F4: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1132)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSs
   fun:_ZNK4cool18RelationalDatabase17fetchNodeTableRowERKSs
   fun:_ZN4cool11RalDatabase18insertNodeTableRowERKSsS2_bbS2_NS_16FolderVersioning4ModeENS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,249 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2B9B45: coral::MessageStream& coral::MessageStream::operator<< <char [39]>(char const (&) [39]) (MessageStream.h:97)
==xxxxx==    by 0xF2DC9D0: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:62)
==xxxxx==    by 0xF2A7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA39_cEERS0_RKT_
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,250 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2B8EFF: coral::MessageStream& coral::MessageStream::operator<< <char [15]>(char const (&) [15]) (MessageStream.h:97)
==xxxxx==    by 0xF2D12AB: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:67)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA15_cEERS0_RKT_
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,251 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF29DF89: coral::MessageStream& coral::MessageStream::operator<< <char [33]>(char const (&) [33]) (MessageStream.h:97)
==xxxxx==    by 0xF350A0E: cool::RelationalQueryMgr::RelationalQueryMgr() (RelationalQueryMgr.cpp:18)
==xxxxx==    by 0xF2C022A: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:41)
==xxxxx==    by 0xF2A7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA33_cEERS0_RKT_
   fun:_ZN4cool18RelationalQueryMgrC1Ev
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,252 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF29E001: coral::MessageStream& coral::MessageStream::operator<< <char [36]>(char const (&) [36]) (MessageStream.h:97)
==xxxxx==    by 0xF351452: cool::RelationalSequenceMgr::RelationalSequenceMgr(cool::RelationalQueryMgr const&) (RelationalSequenceMgr.cpp:18)
==xxxxx==    by 0xF2C4373: cool::RalSequenceMgr::RalSequenceMgr(cool::RelationalQueryMgr const&, cool::ISessionMgr const&) (RalSequenceMgr.h:36)
==xxxxx==    by 0xF2C031D: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:48)
==xxxxx==    by 0xF2A7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA36_cEERS0_RKT_
   fun:_ZN4cool21RelationalSequenceMgrC1ERKNS_18RelationalQueryMgrE
   fun:_ZN4cool14RalSequenceMgrC1ERKNS_18RelationalQueryMgrERKNS_11ISessionMgrE
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,253 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2D015B: coral::MessageStream& coral::MessageStream::operator<< <char [32]>(char const (&) [32]) (MessageStream.h:97)
==xxxxx==    by 0xF304D0E: cool::RelationalNodeMgr::RelationalNodeMgr(cool::RelationalDatabase const&) (RelationalNodeMgr.cpp:26)
==xxxxx==    by 0xF2A7FFC: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:103)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA32_cEERS0_RKT_
   fun:_ZN4cool17RelationalNodeMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,254 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF29DED5: coral::MessageStream& coral::MessageStream::operator<< <char [31]>(char const (&) [31]) (MessageStream.h:97)
==xxxxx==    by 0xF35367E: cool::RelationalTagMgr::RelationalTagMgr(cool::RelationalDatabase const&) (RelationalTagMgr.cpp:40)
==xxxxx==    by 0xF2A8088: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:107)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA31_cEERS0_RKT_
   fun:_ZN4cool16RelationalTagMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 32,255 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF2B9B09: coral::MessageStream& coral::MessageStream::operator<< <char [7]>(char const (&) [7]) (MessageStream.h:97)
==xxxxx==    by 0xF318C07: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1344)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF36234A: cool::TransRelFolder::flushStorageBuffer() (TransRelFolder.cpp:45)
==xxxxx==    by 0xF088D38: (anonymous namespace)::method_11590(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17172)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264A04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA7_cEERS0_RKT_
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool14TransRelFolder18flushStorageBufferEv
   fun:_ZN12_GLOBAL__N_1L12method_11590EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL14PRCallFuncExecPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TVoidExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 560 bytes in 10 blocks are possibly lost in loss record 32,291 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFCB7DEE: coral::AttributeDataFactory::create(std::type_info const&) const (AttributeDataFactory.cpp:33)
==xxxxx==    by 0xFCC82C9: coral::Attribute::Attribute(coral::AttributeSpecification const&) (Attribute.cpp:47)
==xxxxx==    by 0xFCC3615: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:144)
==xxxxx==    by 0xF41407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF413B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xF2A89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK5coral20AttributeDataFactory6createERKSt9type_info
   fun:_ZN5coral9AttributeC1ERKNS_22AttributeSpecificationE
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 568 bytes in 19 blocks are possibly lost in loss record 32,295 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383EB9: sqlite3DbStrNDup (sqlite3.c:18901)
==xxxxx==    by 0x12383F02: sqlite3NameFromToken (sqlite3.c:80025)
==xxxxx==    by 0x123DE11B: sqlite3Parser (sqlite3.c:80398)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbStrNDup
   fun:sqlite3NameFromToken
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 576 bytes in 1 blocks are possibly lost in loss record 32,303 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123B0774: sqlite3BtreeOpen (sqlite3.c:41700)
==xxxxx==    by 0x123B1413: sqlite3OpenTempDatabase (sqlite3.c:82948)
==xxxxx==    by 0x123B24FC: sqlite3WhereBegin (sqlite3.c:105718)
==xxxxx==    by 0x123B52A6: sqlite3Select (sqlite3.c:96690)
==xxxxx==    by 0x123BAE05: multiSelect (sqlite3.c:95059)
==xxxxx==    by 0x123B5216: sqlite3Select (sqlite3.c:96595)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:sqlite3BtreeOpen
   fun:sqlite3OpenTempDatabase
   fun:sqlite3WhereBegin
   fun:sqlite3Select
   fun:multiSelect
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
}
==xxxxx== 672 bytes in 12 blocks are still reachable in loss record 32,344 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x1232420C: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:946)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 688 bytes in 1 blocks are possibly lost in loss record 32,348 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123B0774: sqlite3BtreeOpen (sqlite3.c:41700)
==xxxxx==    by 0x123F08D6: openDatabase (sqlite3.c:112721)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:sqlite3BtreeOpen
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 752 bytes in 4 blocks are possibly lost in loss record 32,378 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383732: sqlite3DbMallocRaw (sqlite3.c:18815)
==xxxxx==    by 0x12383AF4: sqlite3DbMallocZero (sqlite3.c:18759)
==xxxxx==    by 0x123E230B: sqlite3CreateIndex.isra.465 (sqlite3.c:82104)
==xxxxx==    by 0x123DD10A: sqlite3Parser (sqlite3.c:108819)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12325FE7: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1192)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3DbMallocRaw
   fun:sqlite3DbMallocZero
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
}
==xxxxx== 776 bytes in 1 blocks are possibly lost in loss record 32,433 of 33,250
==xxxxx==    at 0x4A0931B: realloc (vg_replace_malloc.c:632)
==xxxxx==    by 0x1239DD66: sqlite3MemRealloc (sqlite3.c:14988)
==xxxxx==    by 0x1238443A: sqlite3Realloc (sqlite3.c:18714)
==xxxxx==    by 0x12390EB9: sqlite3DbRealloc (sqlite3.c:18849)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325D0C: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1177)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:realloc
   fun:sqlite3MemRealloc
   fun:sqlite3Realloc
   fun:sqlite3DbRealloc
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 840 bytes in 1 blocks are possibly lost in loss record 32,462 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123840B4: sqlite3MallocZero (sqlite3.c:18747)
==xxxxx==    by 0x123F0541: openDatabase (sqlite3.c:112648)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3MallocZero
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 1,032 bytes in 1 blocks are possibly lost in loss record 32,587 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x1238C1C8: sqlite3PagerSetPagesize (sqlite3.c:36136)
==xxxxx==    by 0x123B0924: sqlite3BtreeOpen (sqlite3.c:41805)
==xxxxx==    by 0x123F08D6: openDatabase (sqlite3.c:112721)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:sqlite3PagerSetPagesize
   fun:sqlite3BtreeOpen
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 1,032 bytes in 1 blocks are possibly lost in loss record 32,588 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x1238C1C8: sqlite3PagerSetPagesize (sqlite3.c:36136)
==xxxxx==    by 0x123B0924: sqlite3BtreeOpen (sqlite3.c:41805)
==xxxxx==    by 0x123B1413: sqlite3OpenTempDatabase (sqlite3.c:82948)
==xxxxx==    by 0x123B24FC: sqlite3WhereBegin (sqlite3.c:105718)
==xxxxx==    by 0x123B52A6: sqlite3Select (sqlite3.c:96690)
==xxxxx==    by 0x123BAE05: multiSelect (sqlite3.c:95059)
==xxxxx==    by 0x123B5216: sqlite3Select (sqlite3.c:96595)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:sqlite3PagerSetPagesize
   fun:sqlite3BtreeOpen
   fun:sqlite3OpenTempDatabase
   fun:sqlite3WhereBegin
   fun:sqlite3Select
   fun:multiSelect
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
}
==xxxxx== 1,032 bytes in 1 blocks are possibly lost in loss record 32,589 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123C28B4: sqlite3BtreeInsert (sqlite3.c:36136)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 1,032 bytes in 1 blocks are possibly lost in loss record 32,590 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12386A68: sqlite3HashInsert (sqlite3.c:21940)
==xxxxx==    by 0x123E2553: sqlite3CreateIndex.isra.465 (sqlite3.c:82259)
==xxxxx==    by 0x123E2C6F: sqlite3AddPrimaryKey (sqlite3.c:80625)
==xxxxx==    by 0x123DE9EC: sqlite3Parser (sqlite3.c:108239)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF092225: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18008)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:sqlite3HashInsert
   fun:sqlite3CreateIndex.isra.465
   fun:sqlite3AddPrimaryKey
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 1,049 bytes in 1 blocks are possibly lost in loss record 32,594 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xF29E03D: coral::MessageStream& coral::MessageStream::operator<< <std::string>(std::string const&) (MessageStream.h:97)
==xxxxx==    by 0xF2C64C2: cool::RalSchemaMgr::fillMainTable(std::string const&, coral::AttributeList const&) const (RalSchemaMgr.cpp:146)
==xxxxx==    by 0xF2A8C8B: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:205)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZN5coral13MessageStreamlsISsEERS0_RKT_
   fun:_ZNK4cool12RalSchemaMgr13fillMainTableERKSsRKN5coral13AttributeListE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 1,064 bytes in 19 blocks are still reachable in loss record 32,605 of 33,250
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xFD5C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x1231B63F: coral::SQLiteAccess::TableDescriptionProxy::readColumnDescription() (TableDescriptionProxy.cpp:132)
==xxxxx==    by 0x123202DE: coral::SQLiteAccess::TableDescriptionProxy::numberOfColumns() const (TableDescriptionProxy.cpp:472)
==xxxxx==    by 0x12312283: coral::SQLiteAccess::SQLiteExpressionParser::addToTableList(std::string const&, coral::ITableDescription const&) (SQLiteExpressionParser.cpp:24)
==xxxxx==    by 0x122FD84A: coral::SQLiteAccess::QueryDefinition::process() (QueryDefinition.cpp:261)
==xxxxx==    by 0x122FC093: coral::SQLiteAccess::QueryDefinition::sqlFragment() const (QueryDefinition.cpp:75)
==xxxxx==    by 0x12304051: coral::SQLiteAccess::Query::execute() (Query.cpp:118)
==xxxxx==    by 0xF2C135C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:242)
==xxxxx==    by 0xF306635: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&, cool::Record const&) const (RelationalNodeMgr.cpp:283)
==xxxxx==    by 0xF305FD1: cool::RelationalNodeMgr::fetchNodeTableRow(std::string const&) const (RelationalNodeMgr.cpp:233)
==xxxxx==    by 0xF2E2B05: cool::RelationalDatabase::fetchNodeTableRow(std::string const&) const (RelationalDatabase.cpp:1062)
==xxxxx==    by 0xF2ABCF2: cool::RalDatabase::insertNodeTableRow(std::string const&, std::string const&, bool, bool, std::string const&, cool::FolderVersioning::Mode, cool::PayloadMode::Mode) (RalDatabase.cpp:861)
==xxxxx==    by 0xF2AE0F4: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1132)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy21readColumnDescriptionEv
   fun:_ZNK5coral12SQLiteAccess21TableDescriptionProxy15numberOfColumnsEv
   fun:_ZN5coral12SQLiteAccess22SQLiteExpressionParser14addToTableListERKSsRKNS_17ITableDescriptionE
   fun:_ZN5coral12SQLiteAccess15QueryDefinition7processEv
   fun:_ZNK5coral12SQLiteAccess15QueryDefinition11sqlFragmentEv
   fun:_ZN5coral12SQLiteAccess5Query7executeEv
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSsRKNS_6RecordE
   fun:_ZNK4cool17RelationalNodeMgr17fetchNodeTableRowERKSs
   fun:_ZNK4cool18RelationalDatabase17fetchNodeTableRowERKSs
   fun:_ZN4cool11RalDatabase18insertNodeTableRowERKSsS2_bbS2_NS_16FolderVersioning4ModeENS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 1,160 bytes in 1 blocks are possibly lost in loss record 32,619 of 33,250
==xxxxx==    at 0x4A0931B: realloc (vg_replace_malloc.c:632)
==xxxxx==    by 0x1239DD66: sqlite3MemRealloc (sqlite3.c:14988)
==xxxxx==    by 0x1238443A: sqlite3Realloc (sqlite3.c:18714)
==xxxxx==    by 0x12390EB9: sqlite3DbRealloc (sqlite3.c:18849)
==xxxxx==    by 0x123DEB1B: sqlite3Parser (sqlite3.c:80409)
==xxxxx==    by 0x123E023F: sqlite3RunParser (sqlite3.c:110082)
==xxxxx==    by 0x123E43F9: sqlite3Prepare (sqlite3.c:92441)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x123E4BB0: sqlite3InitCallback (sqlite3.c:91919)
==xxxxx==    by 0x123D3DC5: sqlite3_exec (sqlite3.c:89148)
==xxxxx==    by 0x123C7C39: sqlite3VdbeExec (sqlite3.c:68322)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:realloc
   fun:sqlite3MemRealloc
   fun:sqlite3Realloc
   fun:sqlite3DbRealloc
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:sqlite3InitCallback
   fun:sqlite3_exec
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,658 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BE8A5: sqlite3BtreeBeginTrans (sqlite3.c:50387)
==xxxxx==    by 0x123D44D6: sqlite3InitOne (sqlite3.c:92058)
==xxxxx==    by 0x123D48A1: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x123D4930: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x123D4E2F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x123D5040: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x12388CA7: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x123897E3: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x123B4632: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x123DEABC: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x123E0293: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x123E4210: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x123E4618: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x123E4AA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x12314F26: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x1230B87C: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:sqlite3BtreeBeginTrans
   fun:sqlite3InitOne
   fun:sqlite3Init
   fun:sqlite3ReadSchema
   fun:sqlite3LocateTable
   fun:selectExpander
   fun:sqlite3WalkSelect
   fun:sqlite3SelectPrep
   fun:sqlite3Select
   fun:sqlite3Parser
   fun:sqlite3RunParser
   fun:sqlite3Prepare
   fun:sqlite3LockAndPrepare
   fun:sqlite3_prepare
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7prepareERKSs
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,659 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BE8A5: sqlite3BtreeBeginTrans (sqlite3.c:50387)
==xxxxx==    by 0x123CB308: sqlite3VdbeExec (sqlite3.c:66301)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316B2F: coral::SQLiteAccess::SQLiteStatement::fetchNext() (SQLiteStatement.cpp:293)
==xxxxx==    by 0x1230BA57: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:493)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:sqlite3BtreeBeginTrans
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement9fetchNextEv
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,660 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12326A6E: coral::SQLiteAccess::TableDescriptionProxy::createFKtableIfNotexists() (TableDescriptionProxy.cpp:1222)
==xxxxx==    by 0x1231A75D: coral::SQLiteAccess::TableDescriptionProxy::TableDescriptionProxy(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (TableDescriptionProxy.cpp:51)
==xxxxx==    by 0x1232DE29: coral::SQLiteAccess::Table::Table(boost::shared_ptr<coral::SQLiteAccess::SessionProperties const>, std::string const&) (Table.cpp:19)
==xxxxx==    by 0x12306BC8: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:130)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy24createFKtableIfNotexistsEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxyC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess5TableC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,661 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C0FED: balance (sqlite3.c:54622)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,662 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,663 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,664 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,665 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325586: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1129)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,666 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,667 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,668 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,669 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,670 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,671 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325586: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1129)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,672 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1D11: balance (sqlite3.c:54296)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,673 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,674 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C0FED: balance (sqlite3.c:54622)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x122DEB7D: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:243)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF316849: cool::RelationalObjectMgr::bulkInsertObjectTableRows(cool::RelationalFolder const*, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > > const&, std::vector<boost::shared_ptr<cool::RelationalPayloadTableRow>, std::allocator<boost::shared_ptr<cool::RelationalPayloadTableRow> > > const&) const (RelationalObjectMgr.cpp:1107)
==xxxxx==    by 0xF31A4C9: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1620)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr25bulkInsertObjectTableRowsEPKNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaIS8_EERKS4_INS6_INS_25RelationalPayloadTableRowEEESaISE_EE
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
}
==xxxxx== 1,280 bytes in 1 blocks are possibly lost in loss record 32,675 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C1A92: balance (sqlite3.c:53763)
==xxxxx==    by 0x123C2ACE: sqlite3BtreeInsert (sqlite3.c:54919)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x122DEB7D: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:243)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF316849: cool::RelationalObjectMgr::bulkInsertObjectTableRows(cool::RelationalFolder const*, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > > const&, std::vector<boost::shared_ptr<cool::RelationalPayloadTableRow>, std::allocator<boost::shared_ptr<cool::RelationalPayloadTableRow> > > const&) const (RelationalObjectMgr.cpp:1107)
==xxxxx==    by 0xF31A4C9: cool::RelationalObjectMgr::storeMultiVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1620)
==xxxxx==    by 0xF318D9F: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1360)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF3627F6: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:90)
==xxxxx==    by 0xF088E1A: (anonymous namespace)::method_11591(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17181)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C22DC: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:500)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:balance
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr25bulkInsertObjectTableRowsEPKNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaIS8_EERKS4_INS6_INS_25RelationalPayloadTableRowEEESaISE_EE
   fun:_ZNK4cool19RelationalObjectMgr24storeMultiVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
}
==xxxxx== 2,056 bytes in 1 blocks are possibly lost in loss record 32,792 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A96F5: pcache1Fetch (sqlite3.c:36194)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BE8A5: sqlite3BtreeBeginTrans (sqlite3.c:50387)
==xxxxx==    by 0x123CB308: sqlite3VdbeExec (sqlite3.c:66301)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316B2F: coral::SQLiteAccess::SQLiteStatement::fetchNext() (SQLiteStatement.cpp:293)
==xxxxx==    by 0x1230BA57: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:493)
==xxxxx==    by 0x123062C3: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x123068DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:119)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:sqlite3BtreeBeginTrans
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement9fetchNextEv
   fun:_ZNK5coral12SQLiteAccess6Schema28readTablesFromDataDictionaryEv
   fun:_ZNK5coral12SQLiteAccess6Schema11existsTableERKSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,829 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xF2A8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,830 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2C6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,831 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2C7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,832 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,833 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325586: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1129)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0xF2C8992: cool::RalSchemaMgr::createTag2TagFKs(std::string const&, std::string const&) const (RalSchemaMgr.cpp:548)
==xxxxx==    by 0xF2C85FE: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:512)
==xxxxx==    by 0xF2A8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZNK4cool12RalSchemaMgr16createTag2TagFKsERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,834 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xF2A8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,835 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC4F6: cool::RalSchemaMgr::createChannelTable(std::string const&) const (RalSchemaMgr.cpp:1180)
==xxxxx==    by 0xF2AE330: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1154)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createChannelTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,836 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,837 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12325586: coral::SQLiteAccess::TableDescriptionProxy::alterschema() (TableDescriptionProxy.cpp:1129)
==xxxxx==    by 0x12324E95: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, std::string const&, std::vector<std::string, std::allocator<std::string> > const&) (TableDescriptionProxy.cpp:1041)
==xxxxx==    by 0x12324D48: coral::SQLiteAccess::TableDescriptionProxy::createForeignKey(std::string const&, std::string const&, std::string const&, std::string const&) (TableDescriptionProxy.cpp:1012)
==xxxxx==    by 0xF2CAA32: cool::RalSchemaMgr::createObjectChannelFK(std::string const&, std::string const&) const (RalSchemaMgr.cpp:880)
==xxxxx==    by 0xF2CA405: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:834)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11alterschemaEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsRKSt6vectorISsSaISsEES3_S8_
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy16createForeignKeyERKSsS3_S3_S3_
   fun:_ZNK4cool12RalSchemaMgr21createObjectChannelFKERKSsS2_
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,838 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2D0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xF2CC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xF2AE54F: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1188)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,839 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CC220: cool::RalSchemaMgr::createTagTable(std::string const&) const (RalSchemaMgr.cpp:1142)
==xxxxx==    by 0xF2AE577: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1189)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr14createTagTableERKSs
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 2,560 bytes in 2 blocks are possibly lost in loss record 32,840 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2CCC55: cool::RalSchemaMgr::createObject2TagTable(std::string const&, std::string const&, std::string const&, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:1292)
==xxxxx==    by 0xF2AE5BF: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1194)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr21createObject2TagTableERKSsS2_S2_S2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 3,840 bytes in 3 blocks are possibly lost in loss record 32,965 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xF2A8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 5,120 bytes in 4 blocks are possibly lost in loss record 33,019 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12306A53: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0xF2C6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xF2A8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xF2DD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xF361385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xF360DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xF2BE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 6,400 bytes in 5 blocks are possibly lost in loss record 33,058 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C34B9: btreeCreateTable (sqlite3.c:55180)
==xxxxx==    by 0x123C79BC: sqlite3VdbeExec (sqlite3.c:55199)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x12324508: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x12306D9E: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0xF2CA3D4: cool::RalSchemaMgr::createObjectTable(std::string const&, std::string const&, cool::IRecordSpecification const&, cool::FolderVersioning::Mode, std::string const&, cool::PayloadMode::Mode) const (RalSchemaMgr.cpp:831)
==xxxxx==    by 0xF2AE502: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool, cool::PayloadMode::Mode) (RalDatabase.cpp:1184)
==xxxxx==    by 0xF2ADB9D: cool::RalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (RalDatabase.cpp:1065)
==xxxxx==    by 0xF35FCF6: cool::TransRalDatabase::createFolder(std::string const&, cool::IRecordSpecification const&, std::string const&, cool::FolderVersioning::Mode, bool) (TransRalDatabase.cpp:103)
==xxxxx==    by 0xF09253B: (anonymous namespace)::method_11174(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:18024)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x6E3B04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:btreeCreateTable
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr17createObjectTableERKSsS2_RKNS_20IRecordSpecificationENS_16FolderVersioning4ModeES2_NS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEbNS_11PayloadMode4ModeE
   fun:_ZN4cool11RalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN4cool16TransRalDatabase12createFolderERKSsRKNS_20IRecordSpecificationES2_NS_16FolderVersioning4ModeEb
   fun:_ZN12_GLOBAL__N_1L12method_11174EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
}
==xxxxx== 16,392 bytes in 1 blocks are possibly lost in loss record 33,148 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x123A96F5: pcache1Fetch (sqlite3.c:36194)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C2911: sqlite3BtreeInsert (sqlite3.c:53437)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x122DEB7D: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:243)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF316849: cool::RelationalObjectMgr::bulkInsertObjectTableRows(cool::RelationalFolder const*, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > > const&, std::vector<boost::shared_ptr<cool::RelationalPayloadTableRow>, std::allocator<boost::shared_ptr<cool::RelationalPayloadTableRow> > > const&) const (RelationalObjectMgr.cpp:1107)
==xxxxx==    by 0xF3194C0: cool::RelationalObjectMgr::storeSingleVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&) const (RelationalObjectMgr.cpp:1423)
==xxxxx==    by 0xF318D70: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1356)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF2EB5EA: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, coral::AttributeList const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:549)
==xxxxx==    by 0xF362D90: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, coral::AttributeList const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:190)
==xxxxx==    by 0xF0890CE: (anonymous namespace)::method_11592(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17206)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264C04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr25bulkInsertObjectTableRowsEPKNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaIS8_EERKS4_INS6_INS_25RelationalPayloadTableRowEEESaISE_EE
   fun:_ZNK4cool19RelationalObjectMgr25storeSingleVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EE
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKN5coral13AttributeListERKjRKSsb
   fun:_ZN4cool14TransRelFolder11storeObjectERKyS2_RKN5coral13AttributeListERKjRKSsb
}
==xxxxx== 64,008 bytes in 1 blocks are possibly lost in loss record 33,213 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x1238A960: setupLookaside.part.189 (sqlite3.c:111022)
==xxxxx==    by 0x123F0AD7: openDatabase (sqlite3.c:111001)
==xxxxx==    by 0x1230FCC9: coral::SQLiteAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:109)
==xxxxx==    by 0x1217D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x1219B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x121839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x1218583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x1219D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x1219292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x12193036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xFD584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xF29ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xF2D20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xF2D1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xF2A7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xF2BE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xF09D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xB2B44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:setupLookaside.part.189
   fun:openDatabase
   fun:_ZN5coral12SQLiteAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 216,320 bytes in 169 blocks are possibly lost in loss record 33,232 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381411: sqlite3PcacheFetch (sqlite3.c:35473)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C2911: sqlite3BtreeInsert (sqlite3.c:53437)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x122DEB7D: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:243)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF316849: cool::RelationalObjectMgr::bulkInsertObjectTableRows(cool::RelationalFolder const*, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > > const&, std::vector<boost::shared_ptr<cool::RelationalPayloadTableRow>, std::allocator<boost::shared_ptr<cool::RelationalPayloadTableRow> > > const&) const (RelationalObjectMgr.cpp:1107)
==xxxxx==    by 0xF3194C0: cool::RelationalObjectMgr::storeSingleVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&) const (RelationalObjectMgr.cpp:1423)
==xxxxx==    by 0xF318D70: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1356)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF2EB5EA: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, coral::AttributeList const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:549)
==xxxxx==    by 0xF362D90: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, coral::AttributeList const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:190)
==xxxxx==    by 0xF0890CE: (anonymous namespace)::method_11592(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17206)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264C04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr25bulkInsertObjectTableRowsEPKNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaIS8_EERKS4_INS6_INS_25RelationalPayloadTableRowEEESaISE_EE
   fun:_ZNK4cool19RelationalObjectMgr25storeSingleVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EE
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKN5coral13AttributeListERKjRKSsb
}
==xxxxx== 2,274,560 bytes in 1,777 blocks are possibly lost in loss record 33,250 of 33,250
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x1239DDDE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x1237BEF8: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x123836E7: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x12383FB2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x123A961C: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x12381387: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x123AEAA3: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x123AEC57: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x123BF34E: allocateBtreePage (sqlite3.c:53118)
==xxxxx==    by 0x123C2911: sqlite3BtreeInsert (sqlite3.c:53437)
==xxxxx==    by 0x123CCBA2: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x123D02B0: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x12315177: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x12316290: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x122DEB7D: coral::SQLiteAccess::BulkOperation::flush() (BulkOperation.cpp:243)
==xxxxx==    by 0xF2C40C8: cool::RalBulkOperation::flush() (RalBulkOperation.h:41)
==xxxxx==    by 0xF316849: cool::RelationalObjectMgr::bulkInsertObjectTableRows(cool::RelationalFolder const*, std::vector<boost::shared_ptr<cool::RelationalObjectTableRow>, std::allocator<boost::shared_ptr<cool::RelationalObjectTableRow> > > const&, std::vector<boost::shared_ptr<cool::RelationalPayloadTableRow>, std::allocator<boost::shared_ptr<cool::RelationalPayloadTableRow> > > const&) const (RelationalObjectMgr.cpp:1107)
==xxxxx==    by 0xF3194C0: cool::RelationalObjectMgr::storeSingleVersionObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&) const (RelationalObjectMgr.cpp:1423)
==xxxxx==    by 0xF318D70: cool::RelationalObjectMgr::storeObjects(cool::RelationalFolder*, std::vector<boost::shared_ptr<cool::RelationalObject>, std::allocator<boost::shared_ptr<cool::RelationalObject> > > const&, bool) const (RelationalObjectMgr.cpp:1356)
==xxxxx==    by 0xF2EB097: cool::RelationalFolder::flushStorageBuffer() (RelationalFolder.cpp:445)
==xxxxx==    by 0xF2EB9C4: cool::RelationalFolder::storeObject(boost::shared_ptr<cool::RelationalObject>&, bool) (RelationalFolder.cpp:590)
==xxxxx==    by 0xF2EB4D8: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, cool::IRecord const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:532)
==xxxxx==    by 0xF2EB5EA: cool::RelationalFolder::storeObject(unsigned long long const&, unsigned long long const&, coral::AttributeList const&, unsigned int const&, std::string const&, bool) (RelationalFolder.cpp:549)
==xxxxx==    by 0xF362D90: cool::TransRelFolder::storeObject(unsigned long long const&, unsigned long long const&, coral::AttributeList const&, unsigned int const&, std::string const&, bool) (TransRelFolder.cpp:190)
==xxxxx==    by 0xF0890CE: (anonymous namespace)::method_11592(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:17206)
==xxxxx==    by 0xED1EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x1264C04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xB2B30C3: PRCallFuncExec(Cint::G__CallFunc*, void*, bool) (Executors.cxx:39)
==xxxxx==    by 0xB2B3F6F: PyROOT::TVoidExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:203)
==xxxxx==    by 0xB2BD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xB2BD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xB2BCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xB2BC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xB2C2462: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:526)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:sqlite3MemMalloc
   fun:mallocWithAlarm
   fun:sqlite3Malloc
   fun:pcache1Alloc
   fun:pcache1Fetch
   fun:sqlite3PcacheFetch
   fun:sqlite3PagerAcquire
   fun:btreeGetPage
   fun:allocateBtreePage
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess13BulkOperation5flushEv
   fun:_ZN4cool16RalBulkOperation5flushEv
   fun:_ZNK4cool19RelationalObjectMgr25bulkInsertObjectTableRowsEPKNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_24RelationalObjectTableRowEEESaIS8_EERKS4_INS6_INS_25RelationalPayloadTableRowEEESaISE_EE
   fun:_ZNK4cool19RelationalObjectMgr25storeSingleVersionObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EE
   fun:_ZNK4cool19RelationalObjectMgr12storeObjectsEPNS_16RelationalFolderERKSt6vectorIN5boost10shared_ptrINS_16RelationalObjectEEESaIS7_EEb
   fun:_ZN4cool16RelationalFolder18flushStorageBufferEv
   fun:_ZN4cool16RelationalFolder11storeObjectERN5boost10shared_ptrINS_16RelationalObjectEEEb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKNS_7IRecordERKjRKSsb
   fun:_ZN4cool16RelationalFolder11storeObjectERKyS2_RKN5coral13AttributeListERKjRKSsb
}
==xxxxx== LEAK SUMMARY:
==xxxxx==    definitely lost: 0 bytes in 0 blocks
==xxxxx==    indirectly lost: 0 bytes in 0 blocks
==xxxxx==      possibly lost: 2,685,364 bytes in 2,495 blocks
==xxxxx==    still reachable: 22,488 bytes in 365 blocks
==xxxxx==         suppressed: 17,565,100 bytes in 106,999 blocks
==xxxxx== 
==xxxxx== ERROR SUMMARY: 355 errors from 355 contexts (suppressed: 2449 from 870)
--xxxxx-- 
--xxxxx-- used_suppression:    275 <ROOT_libPyROOT_new_LEAK>
--xxxxx-- used_suppression:    963 <ROOT_PyImport_PyROOT_LEAK>
--xxxxx-- used_suppression:     48 <python26_Py_malloc_LEAK>
--xxxxx-- used_suppression:    115 <python26_Py_dictresize_malloc_LEAK>
--xxxxx-- used_suppression:   2974 <ROOT_libCore_new_LEAK>
--xxxxx-- used_suppression:   2099 <ROOT_libReflex_new_LEAK>
--xxxxx-- used_suppression:   6127 <ROOT_libCint_new_LEAK>
--xxxxx-- used_suppression:    314 <python26_PyObject_GC_Malloc_malloc_LEAK>
--xxxxx-- used_suppression:    420 <python26_PyImport_dlopen_LEAK>
--xxxxx-- used_suppression:  18900 <ROOT_libCint_alloc_LEAK>
--xxxxx-- used_suppression:      1 <python26_Py_PyInit_malloc_LEAK>
--xxxxx-- used_suppression:     31 <python26_PyImport_malloc_LEAK>
--xxxxx-- used_suppression:     16 <ROOT_libPyROOT_new_LEAK3>
--xxxxx-- used_suppression:      1 <python26_Py_calculatepath_malloc_LEAK>
--xxxxx-- used_suppression:     27 <coral_PluginManager_loadLibrary_dlopen_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:    243 <ROOT_libCore_new_LEAK1>
--xxxxx-- used_suppression:      1 <python26_Py_realloc_malloc_LEAK>
--xxxxx-- used_suppression:     49 <python26_add_subclass_LEAK>
--xxxxx-- used_suppression:      3 <python26__Py_realloc_LEAK>
--xxxxx-- used_suppression:     53 <ROOT_libCore_new_LEAK3>
--xxxxx-- used_suppression:     15 <ROOT_libPyROOT_new_LEAK4>
--xxxxx-- used_suppression:      3 <ROOT_libCintex_new_LEAK>
--xxxxx-- used_suppression:      1 <coral_PluginManager_loadLibrary_dlsym_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:      1 <python26_Py_strdup_malloc_LEAK>
--xxxxx-- used_suppression:    105 <python26_PyObject_Free_cond>
--xxxxx-- used_suppression:   1280 <python26_PyObject_Free_addr4>
--xxxxx-- used_suppression:     87 <python26_PyObject_Free_val8>
--xxxxx-- used_suppression:     28 <python26_PyObject_Realloc_val8>
--xxxxx-- used_suppression:     33 <python26_PyObject_Realloc_cond>
--xxxxx-- used_suppression:    183 <python26_PyObject_Realloc_addr4>
--xxxxx-- used_suppression:     53 dl-hack3
==xxxxx== 
==xxxxx== ERROR SUMMARY: 355 errors from 355 contexts (suppressed: 2449 from 870)
