==xxxxx== Memcheck, a memory error detector
==xxxxx== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==xxxxx== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==xxxxx== Command: python /home/avalassi/COOL/COOL_2_8_17/src/../x86_64-slc5-gcc46-dbg/tests/bin/test_IDatabase.py
==xxxxx== Parent PID: xxxxx
==xxxxx== 
--xxxxx-- 
--xxxxx-- Valgrind options:
--xxxxx--    -v
--xxxxx--    --leak-check=full
--xxxxx--    --show-reachable=yes
--xxxxx--    --error-limit=no
--xxxxx--    --log-file=/home/avalassi/COOL/COOL_2_8_17/src/logs/qmtest/valgrind/x86_64-slc5-gcc46-dbg/valgrind.pycool.mysql.idatabase.txt
--xxxxx--    --suppressions=/home/avalassi/CORAL/CORAL_2_3_26/src/config/scripts/valgrind.supp
--xxxxx--    --gen-suppressions=all
--xxxxx--    --num-callers=50
--xxxxx--    --track-origins=yes
--xxxxx-- Contents of /proc/version:
--xxxxx--   Linux version 2.6.18-308.20.1.el5 (mockbuild@lxdist03) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-52)) #1 SMP Wed Nov 14 10:31:58 CET 2012
--xxxxx-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--xxxxx-- Page sizes: currently 4096, max supported 4096
--xxxxx-- Valgrind library directory: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/bin/python (0x400000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/memcheck-amd64-linux (0x38000000)
--xxxxx--    object doesn't have a dynamic symbol table
--xxxxx-- Reading syms from /lib64/ld-2.5.so (0x301c400000)
--xxxxx-- Reading suppressions file: /home/avalassi/CORAL/CORAL_2_3_26/src/config/scripts/valgrind.supp
--xxxxx-- Reading suppressions file: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/default.supp
==xxxxx== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== 
==xxxxx== TO CONTROL THIS PROCESS USING vgdb (which you probably
==xxxxx== don't want to do, unless you know exactly what you're doing,
==xxxxx== or are doing some strange experiment):
==xxxxx==   /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx ...command...
==xxxxx== 
==xxxxx== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==xxxxx==   /path/to/gdb python
==xxxxx== and then give GDB the following command
==xxxxx==   target remote | /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx
==xxxxx== --pid is optional if only one valgrind process is running
==xxxxx== 
--xxxxx-- REDIR: 0x301c4147a0 (strlen) redirected to 0x380437e7 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/vgpreload_core-amd64-linux.so (0x4803000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc46-opt/lib/valgrind/vgpreload_memcheck-amd64-linux.so (0x4a05000)
--xxxxx-- REDIR: 0x301c414770 (strcmp) redirected to 0x4a0a6f0 (strcmp)
--xxxxx-- REDIR: 0x301c4145c0 (index) redirected to 0x4a09730 (index)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCore.so (0x4c0f000)
--xxxxx-- Reading syms from /lib64/libdl-2.5.so (0x301d400000)
--xxxxx-- Reading syms from /lib64/libpthread-2.5.so (0x301d800000)
--xxxxx-- Reading syms from /lib64/libutil-2.5.so (0x3027400000)
--xxxxx-- Reading syms from /lib64/libm-2.5.so (0x301cc00000)
--xxxxx-- Reading syms from /lib64/libc-2.5.so (0x301c800000)
--xxxxx-- Reading syms from /lib64/libz.so.1.2.3 (0x301d000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCint.so (0x57a5000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16 (0x647c000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libgcc_s.so.1 (0x6781000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- REDIR: 0x301c87a010 (memset) redirected to 0x4a0bb50 (memset)
--xxxxx-- REDIR: 0x301c87b450 (memcpy) redirected to 0x4a0aca0 (memcpy)
--xxxxx-- REDIR: 0x301c879150 (rindex) redirected to 0x4a09520 (rindex)
--xxxxx-- REDIR: 0x301c878d60 (strlen) redirected to 0x4a09a70 (strlen)
--xxxxx-- REDIR: 0x301c8787e0 (strcmp) redirected to 0x4a0a630 (strcmp)
--xxxxx-- REDIR: 0x6533e40 (operator new[](unsigned long)) redirected to 0x4a0884d (operator new[](unsigned long))
--xxxxx-- REDIR: 0x6533d10 (operator new(unsigned long)) redirected to 0x4a08d37 (operator new(unsigned long))
--xxxxx-- REDIR: 0x301c873ec0 (malloc) redirected to 0x4a091a1 (malloc)
--xxxxx-- REDIR: 0x301c878820 (strcpy) redirected to 0x4a09ab0 (strcpy)
--xxxxx-- REDIR: 0x301c879e70 (memmove) redirected to 0x4a0bbe0 (memmove)
--xxxxx-- REDIR: 0x6531fe0 (operator delete(void*)) redirected to 0x4a081ef (operator delete(void*))
--xxxxx-- REDIR: 0x301c878fe0 (strncmp) redirected to 0x4a09ed0 (strncmp)
--xxxxx-- REDIR: 0x301c878630 (index) redirected to 0x4a095f0 (index)
--xxxxx-- REDIR: 0x301c8799d0 (bcmp) redirected to 0x4a0b770 (bcmp)
--xxxxx-- REDIR: 0x301c873ae0 (calloc) redirected to 0x4a07b9b (calloc)
--xxxxx-- REDIR: 0x301c879520 (strstr) redirected to 0x4a0c270 (strstr)
--xxxxx-- REDIR: 0x301c875850 (free) redirected to 0x4a084dd (free)
--xxxxx-- REDIR: 0xffffffffff600000 (???) redirected to 0x380437d3 (vgPlain_amd64_linux_REDIR_FOR_vgettimeofday)
--xxxxx-- REDIR: 0x301c87ab40 (mempcpy) redirected to 0x4a0bf80 (mempcpy)
--xxxxx-- REDIR: 0x301c833230 (setenv) redirected to 0x4a0c610 (setenv)
--xxxxx-- REDIR: 0x6532020 (operator delete[](void*)) redirected to 0x4a07e6b (operator delete[](void*))
--xxxxx-- REDIR: 0x301c8790a0 (strncpy) redirected to 0x4a09c50 (strncpy)
--xxxxx-- REDIR: 0x301c878e50 (strnlen) redirected to 0x4a09a10 (strnlen)
--xxxxx-- REDIR: 0x301c8759e0 (realloc) redirected to 0x4a09252 (realloc)
--xxxxx-- REDIR: 0x301c87b2f0 (strcasecmp) redirected to 0x4a09fd0 (strcasecmp)
--xxxxx-- REDIR: 0x301c879850 (memchr) redirected to 0x4a0a7b0 (memchr)
--xxxxx-- REDIR: 0x301c878470 (strcat) redirected to 0x4a09770 (strcat)
--xxxxx-- REDIR: 0x301c87c0b0 (rawmemchr) redirected to 0x4a0beb0 (rawmemchr)
--xxxxx-- REDIR: 0x301c87c200 (strchrnul) redirected to 0x4a0be80 (strchrnul)
--xxxxx-- REDIR: 0x301c87b330 (strncasecmp) redirected to 0x4a0a0d0 (strncasecmp)
--xxxxx-- REDIR: 0x301c87b150 (stpcpy) redirected to 0x4a0b810 (stpcpy)
--xxxxx-- Reading syms from /lib64/libnss_files-2.5.so (0x6e47000)
--xxxxx-- REDIR: 0x301c878f40 (strncat) redirected to 0x4a09930 (strncat)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/lib/python2.6/lib-dynload/time.so (0xaa25000)
--xxxxx-- REDIR: 0xffffffffff600400 (???) redirected to 0x380437dd (vgPlain_amd64_linux_REDIR_FOR_vtime)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/lib/python2.6/lib-dynload/strop.so (0xac2a000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libPyROOT.so (0xae31000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libRIO.so (0xb141000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libTree.so (0xb60a000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc46-opt/lib/libpython2.6.so.1.0 (0xba96000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libThread.so (0xbe52000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libNet.so (0xc0a9000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libMathCore.so (0xc445000)
--xxxxx-- Reading syms from /lib64/libcrypto.so.0.9.8e (0x3025000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libssl.so.0.9.8e (0x3027000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /usr/lib64/libgssapi_krb5.so.2.2 (0x3025800000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /usr/lib64/libkrb5.so.3.3 (0x3026400000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libcom_err.so.2.1 (0x3024400000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /usr/lib64/libk5crypto.so.3.1 (0x3026000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libresolv-2.5.so (0x3023800000)
--xxxxx-- Reading syms from /usr/lib64/libkrb5support.so.0.1 (0x3026800000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libkeyutils-1.2.so (0x3026c00000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libselinux.so.1 (0x3020000000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libsepol.so.1 (0x301fc00000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libReflex.so (0xe5ad000)
--xxxxx-- REDIR: 0x301c4158f0 (stpcpy) redirected to 0x4a0ba80 (stpcpy)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libCintex.so (0xe8ed000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_PyCoolDict.so (0xeb49000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_CoolApplication.so (0x5799000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalCool.so (0xedc1000)
--xxxxx-- Reading syms from /home/avalassi/COOL/COOL_2_8_17/x86_64-slc5-gcc46-dbg/lib/liblcg_CoolKernel.so (0xefe1000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_thread-gcc46-mt-1_48.so.1.48.0 (0xf02c000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_filesystem-gcc46-mt-1_48.so.1.48.0 (0xf246000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_date_time-gcc46-mt-1_48.so.1.48.0 (0xf464000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc46-opt/lib/libboost_system-gcc46-mt-1_48.so.1.48.0 (0xf674000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralBase.so (0xf877000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralKernel.so (0xf8f1000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalAccess.so (0xf932000)
--xxxxx-- Reading syms from /lib64/librt-2.5.so (0x301f000000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/5.34.05/x86_64-slc5-gcc46-dbg/root/lib/libReflexDict.so (0x10847000)
--xxxxx-- REDIR: 0x6533db0 (operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4a08ba4 (operator new(unsigned long, std::nothrow_t const&))
--xxxxx-- REDIR: 0x6532000 (operator delete(void*, std::nothrow_t const&)) redirected to 0x4a080c3 (operator delete(void*, std::nothrow_t const&))
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_ConnectionService.so (0x11d26000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_CoralCommon.so (0x11dc5000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_RelationalService.so (0x11e43000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_XMLLookupService.so (0x11e6d000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/XercesC/3.1.1p1/x86_64-slc5-gcc46-opt/lib/libxerces-c-3.1.so (0x11ea4000)
--xxxxx-- Reading syms from /usr/lib64/gconv/UTF-16.so (0x12457000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_MySQLAccess.so (0x12a5a000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/mysql/5.5.14/x86_64-slc5-gcc46-opt/lib/libmysqlclient.so.18.0.0 (0x12b4f000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc46-dbg/lib/liblcg_XMLAuthenticationService.so (0x13033000)
--xxxxx-- Reading syms from /lib64/libnss_dns-2.5.so (0x13a7e000)
==xxxxx== Source and destination overlap in memcpy(0x73bc95e, 0x73bc95e, 21)
==xxxxx==    at 0x4A0AD10: memcpy (mc_replace_strmem.c:838)
==xxxxx==    by 0x12B7C44F: old_password_auth_client (client.c:4298)
==xxxxx==    by 0x12B7EE3C: run_plugin_auth (client.c:2910)
==xxxxx==    by 0x12B7F917: mysql_real_connect (client.c:3429)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBED4C: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:146)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Overlap
   fun:memcpy
   fun:old_password_auth_client
   fun:run_plugin_auth
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
--xxxxx-- Discarding syms at 0x12457560-0x12458cd8 in /usr/lib64/gconv/UTF-16.so due to munmap()
--xxxxx-- Discarding syms at 0x6e48fe0-0x6e4f268 in /lib64/libnss_files-2.5.so due to munmap()
--xxxxx-- Discarding syms at 0x13a7efe0-0x13a81898 in /lib64/libnss_dns-2.5.so due to munmap()
==xxxxx== 
==xxxxx== HEAP SUMMARY:
==xxxxx==     in use at exit: 13,564,206 bytes in 106,414 blocks
==xxxxx==   total heap usage: 587,985 allocs, 481,571 frees, 55,742,297 bytes allocated
==xxxxx== 
==xxxxx== Searching for pointers to 106,414 not-freed blocks
==xxxxx== Checked 22,925,544 bytes
==xxxxx== 
==xxxxx== 7 bytes in 1 blocks are still reachable in loss record 3,248 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B97F1A: my_strdup (my_malloc.c:146)
==xxxxx==    by 0x12B7E947: mysql_init_character_set (client.c:2187)
==xxxxx==    by 0x12B7F76E: mysql_real_connect (client.c:3370)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_strdup
   fun:mysql_init_character_set
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,627 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF8D3FF7: coral::TimeStamp::TimeStamp(boost::posix_time::ptime const&, bool) (TimeStamp.cpp:38)
==xxxxx==    by 0xF8D4381: coral::TimeStamp::now(bool) (TimeStamp.cpp:87)
==xxxxx==    by 0x11D7E6CA: coral::ConnectionService::ConnectionSharedInfo::ConnectionSharedInfo(coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.h:48)
==xxxxx==    by 0x11D7C63D: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x11D83962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral9TimeStampC1ERKN5boost10posix_time5ptimeEb
   fun:_ZN5coral9TimeStamp3nowEb
   fun:_ZN5coral17ConnectionService20ConnectionSharedInfoC1ERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,635 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF96751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF966A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xF963BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xF96065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,639 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF96751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF966A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xF963BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xF96065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 8 bytes in 1 blocks are still reachable in loss record 3,642 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF96751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF966A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xF963BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xF96065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 9 bytes in 1 blocks are still reachable in loss record 4,133 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B97F1A: my_strdup (my_malloc.c:146)
==xxxxx==    by 0x12B7F830: mysql_real_connect (client.c:3382)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_strdup
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 13 bytes in 1 blocks are still reachable in loss record 5,941 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B97F1A: my_strdup (my_malloc.c:146)
==xxxxx==    by 0x12B7F84C: mysql_real_connect (client.c:3383)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_strdup
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 16 bytes in 1 blocks are still reachable in loss record 9,659 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 16 bytes in 1 blocks are still reachable in loss record 9,661 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF96751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF966A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xF963BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xF96065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,286 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBFBBB: boost::detail::shared_count::shared_count<cool::CoralConnectionServiceProxy>(cool::CoralConnectionServiceProxy*) (shared_count.hpp:91)
==xxxxx==    by 0xEEBF885: boost::shared_ptr<cool::CoralConnectionServiceProxy>::shared_ptr<cool::CoralConnectionServiceProxy>(cool::CoralConnectionServiceProxy*) (shared_ptr.hpp:183)
==xxxxx==    by 0xEEBE4ED: cool::RalDatabaseSvc::RalDatabaseSvc(coral::IConnectionService&) (RalDatabaseSvc.cpp:22)
==xxxxx==    by 0xEE9CC10: cool::CoralApplication::CoralApplication(coral::IConnectionService*) (CoralApplication.cpp:226)
==xxxxx==    by 0x579A408: cool::Application::Application(coral::IConnectionService*) (Application.cpp:20)
==xxxxx==    by 0x579A6A4: cool::DatabaseSvcFactory::databaseService() (DatabaseSvcFactory.cpp:23)
==xxxxx==    by 0xECA6E47: (anonymous namespace)::method_11421(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19906)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11D2504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB4579: PyROOT::TRootObjectRefExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:309)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEA8845: PyROOT::TClassMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (ClassMethodHolder.cxx:38)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool27CoralConnectionServiceProxyEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool27CoralConnectionServiceProxyEEC1IS2_EEPT_
   fun:_ZN4cool14RalDatabaseSvcC1ERN5coral18IConnectionServiceE
   fun:_ZN4cool16CoralApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool11ApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool18DatabaseSvcFactory15databaseServiceEv
   fun:_ZN12_GLOBAL__N_1L12method_11421EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT22TRootObjectRefExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT18TClassMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,287 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B966FA: my_error_register (my_error.c:195)
==xxxxx==    by 0x12B78B2C: mysql_server_init (libmysql.c:132)
==xxxxx==    by 0x12B7E63E: mysql_init (client.c:1699)
==xxxxx==    by 0x12ACB9BA: coral::MySQLAccess::Connection::initialize() (Connection.cpp:218)
==xxxxx==    by 0x12ACAEB0: coral::MySQLAccess::Connection::Connection(coral::MySQLAccess::DomainProperties const&, std::string const&) (Connection.cpp:39)
==xxxxx==    by 0x12AD07BC: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x11D8392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBED4C: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:146)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_error_register
   fun:mysql_server_init
   fun:mysql_init
   fun:_ZN5coral11MySQLAccess10Connection10initializeEv
   fun:_ZN5coral11MySQLAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,288 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D7FB39: boost::detail::shared_count::shared_count<coral::IConnection>(coral::IConnection*) (shared_count.hpp:91)
==xxxxx==    by 0x11D7ED65: boost::shared_ptr<coral::IConnection>::shared_ptr<coral::IConnection>(coral::IConnection*) (shared_ptr.hpp:183)
==xxxxx==    by 0x11D7C61D: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x11D83962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral11IConnectionEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral11IConnectionEEC1IS2_EEPT_
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,289 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D7FAB3: boost::detail::shared_count::shared_count<coral::ConnectionService::ConnectionSharedInfo>(coral::ConnectionService::ConnectionSharedInfo*) (shared_count.hpp:91)
==xxxxx==    by 0x11D7ED15: boost::shared_ptr<coral::ConnectionService::ConnectionSharedInfo>::shared_ptr<coral::ConnectionService::ConnectionSharedInfo>(coral::ConnectionService::ConnectionSharedInfo*) (shared_ptr.hpp:183)
==xxxxx==    by 0x11D7C650: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x11D83962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral17ConnectionService20ConnectionSharedInfoEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral17ConnectionService20ConnectionSharedInfoEEC1IS3_EEPT_
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,290 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D9C00B: boost::detail::shared_count::shared_count<coral::ConnectionService::SessionHandle::SessionSharedInfo>(coral::ConnectionService::SessionHandle::SessionSharedInfo*) (shared_count.hpp:91)
==xxxxx==    by 0x11D9BD1D: boost::shared_ptr<coral::ConnectionService::SessionHandle::SessionSharedInfo>::shared_ptr<coral::ConnectionService::SessionHandle::SessionSharedInfo>(coral::ConnectionService::SessionHandle::SessionSharedInfo*) (shared_ptr.hpp:183)
==xxxxx==    by 0x11D9B19E: coral::ConnectionService::SessionHandle::SessionHandle(std::string const&, coral::ConnectionService::ConnectionHandle const&) (SessionHandle.cpp:36)
==xxxxx==    by 0x11D839A8: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:86)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral17ConnectionService13SessionHandle17SessionSharedInfoEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral17ConnectionService13SessionHandle17SessionSharedInfoEEC1IS4_EEPT_
   fun:_ZN5coral17ConnectionService13SessionHandleC1ERKSsRKNS0_16ConnectionHandleE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,291 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF7BCB: boost::detail::shared_count::shared_count<coral::MySQLAccess::SessionProperties>(coral::MySQLAccess::SessionProperties*) (shared_count.hpp:91)
==xxxxx==    by 0x12AF75FF: boost::shared_ptr<coral::MySQLAccess::SessionProperties>::shared_ptr<coral::MySQLAccess::SessionProperties>(coral::MySQLAccess::SessionProperties*) (shared_ptr.hpp:183)
==xxxxx==    by 0x12AF724E: void boost::shared_ptr<coral::MySQLAccess::SessionProperties>::reset<coral::MySQLAccess::SessionProperties>(coral::MySQLAccess::SessionProperties*) (shared_ptr.hpp:398)
==xxxxx==    by 0x12AF46F6: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:198)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral11MySQLAccess17SessionPropertiesEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral11MySQLAccess17SessionPropertiesEEC1IS3_EEPT_
   fun:_ZN5boost10shared_ptrIN5coral11MySQLAccess17SessionPropertiesEE5resetIS3_EEvPT_
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,292 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF4722: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:199)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,293 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D9C111: boost::detail::shared_count::shared_count<coral::ISession>(coral::ISession*) (shared_count.hpp:91)
==xxxxx==    by 0x11D9BE8F: boost::shared_ptr<coral::ISession>::shared_ptr<coral::ISession>(coral::ISession*) (shared_ptr.hpp:183)
==xxxxx==    by 0x11D9B650: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:83)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN5coral8ISessionEEEPT_
   fun:_ZN5boost10shared_ptrIN5coral8ISessionEEC1IS2_EEPT_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,294 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBBD8D: boost::detail::shared_count::shared_count<cool::RalSessionMgr>(cool::RalSessionMgr*) (shared_count.hpp:91)
==xxxxx==    by 0xEEB8EAB: boost::shared_ptr<cool::ISessionMgr>::shared_ptr<cool::RalSessionMgr>(cool::RalSessionMgr*) (shared_ptr.hpp:183)
==xxxxx==    by 0xEEA7D77: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool13RalSessionMgrEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool11ISessionMgrEEC1INS1_13RalSessionMgrEEEPT_
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,295 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA7FE7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:103)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,296 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA8073: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:107)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,297 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA80FF: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:111)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,298 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBBF49: boost::detail::shared_count::shared_count<cool::RalTransactionMgr>(cool::RalTransactionMgr*) (shared_count.hpp:91)
==xxxxx==    by 0xEEB9369: boost::shared_ptr<cool::IRelationalTransactionMgr>::shared_ptr<cool::RalTransactionMgr>(cool::RalTransactionMgr*) (shared_ptr.hpp:183)
==xxxxx==    by 0xEEA8226: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:121)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool17RalTransactionMgrEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool25IRelationalTransactionMgrEEC1INS1_17RalTransactionMgrEEEPT_
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 24 bytes in 1 blocks are still reachable in loss record 14,299 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBFD03: boost::detail::shared_count::shared_count<cool::TransRalDatabase>(cool::TransRalDatabase*) (shared_count.hpp:91)
==xxxxx==    by 0xEEBF9D9: boost::shared_ptr<cool::IDatabase>::shared_ptr<cool::TransRalDatabase>(cool::TransRalDatabase*) (shared_ptr.hpp:183)
==xxxxx==    by 0xEEBE909: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:86)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IN4cool16TransRalDatabaseEEEPT_
   fun:_ZN5boost10shared_ptrIN4cool9IDatabaseEEC1INS1_16TransRalDatabaseEEEPT_
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 28 bytes in 1 blocks are possibly lost in loss record 14,596 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65188D7: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x11D9E023: coral::UidGenerator::generateConnectionUid() (UidGenerator.cpp:14)
==xxxxx==    by 0x11D7C65C: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:25)
==xxxxx==    by 0x11D83962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt18basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZN5coral12UidGenerator21generateConnectionUidEv
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 30 bytes in 1 blocks are possibly lost in loss record 14,647 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6517F47: std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEB6573: VersionNumber::operator std::string() const (VersionNumber.h:84)
==xxxxx==    by 0xEEA8AB1: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:184)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZNK13VersionNumbercvSsEv
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 31 bytes in 1 blocks are possibly lost in loss record 14,680 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6517F47: std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEB6573: VersionNumber::operator std::string() const (VersionNumber.h:84)
==xxxxx==    by 0xEEA8A0E: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:175)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZNK13VersionNumbercvSsEv
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,452 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D9B179: coral::ConnectionService::SessionHandle::SessionHandle(std::string const&, coral::ConnectionService::ConnectionHandle const&) (SessionHandle.cpp:36)
==xxxxx==    by 0x11D839A8: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:86)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral17ConnectionService13SessionHandleC1ERKSsRKNS0_16ConnectionHandleE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,453 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA7E95: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,454 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEC0303: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:48)
==xxxxx==    by 0xEEA7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,455 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA8204: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:121)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,456 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBFC41: boost::detail::shared_count::shared_count<cool::RalDatabase*, cool::RalDatabase::deleter>(cool::RalDatabase*, cool::RalDatabase::deleter) (shared_count.hpp:128)
==xxxxx==    by 0xEEBF955: boost::shared_ptr<cool::IDatabase>::shared_ptr<cool::RalDatabase, cool::RalDatabase::deleter>(cool::RalDatabase*, cool::RalDatabase::deleter) (shared_ptr.hpp:194)
==xxxxx==    by 0xEEBE8D6: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:83)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5boost6detail12shared_countC1IPN4cool11RalDatabaseENS4_7deleterEEET_T0_
   fun:_ZN5boost10shared_ptrIN4cool9IDatabaseEEC1INS1_11RalDatabaseENS5_7deleterEEEPT_T0_
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,457 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBE8E0: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:85)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,458 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,459 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,460 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF96751F: __gnu_cxx::new_allocator<coral::Index*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF966A28: std::_Vector_base<coral::Index*, std::allocator<coral::Index*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965672: std::vector<coral::Index*, std::allocator<coral::Index*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Index**, std::vector<coral::Index*, std::allocator<coral::Index*> > >, coral::Index* const&) (vector.tcc:327)
==xxxxx==    by 0xF963BD1: std::vector<coral::Index*, std::allocator<coral::Index*> >::push_back(coral::Index* const&) (stl_vector.h:834)
==xxxxx==    by 0xF96065E: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral5IndexEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral5IndexESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral5IndexESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,461 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,462 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,463 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,464 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,465 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,466 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,467 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,468 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,469 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,470 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,471 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,472 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,473 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,474 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,475 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,476 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,477 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,478 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,479 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,480 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04064: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:39)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 32 bytes in 1 blocks are still reachable in loss record 16,481 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B040FB: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:40)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 33 bytes in 1 blocks are possibly lost in loss record 16,631 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEDB983: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:302)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEEDC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xEEA7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 33 bytes in 1 blocks are possibly lost in loss record 16,632 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEDB983: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:302)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEED1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 33 bytes in 1 blocks are possibly lost in loss record 16,633 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x11E28DAD: coral::URIParser::parse() (URIParser.cpp:140)
==xxxxx==    by 0x11E28741: coral::URIParser::hostName() const (URIParser.cpp:54)
==xxxxx==    by 0x12AD0853: coral::MySQLAccess::Domain::decodeUserConnectionString(std::string const&) const (Domain.cpp:56)
==xxxxx==    by 0x11D94841: coral::ConnectionService::DataSource::setupForConnection(coral::ConnectionService::ConnectionParams&, std::string const&, coral::ICertificateData const*) (DataSource.cpp:31)
==xxxxx==    by 0x11D8570A: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:271)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN5coral9URIParser5parseEv
   fun:_ZNK5coral9URIParser8hostNameEv
   fun:_ZNK5coral11MySQLAccess6Domain26decodeUserConnectionStringERKSs
   fun:_ZN5coral17ConnectionService10DataSource18setupForConnectionERNS0_16ConnectionParamsERKSsPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 37 bytes in 1 blocks are possibly lost in loss record 16,704 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65188D7: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x11D9E303: coral::UidGenerator::generateSessionUid(std::string const&) (UidGenerator.cpp:44)
==xxxxx==    by 0x11D9B1F2: coral::ConnectionService::SessionHandle::SessionHandle(std::string const&, coral::ConnectionService::ConnectionHandle const&) (SessionHandle.cpp:39)
==xxxxx==    by 0x11D839A8: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:86)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt18basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZN5coral12UidGenerator18generateSessionUidERKSs
   fun:_ZN5coral17ConnectionService13SessionHandleC1ERKSsRKNS0_16ConnectionHandleE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 39 bytes in 1 blocks are possibly lost in loss record 16,751 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xB204BD5: TGenCollectionProxy::TGenCollectionProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionProxy.cxx:605)
==xxxxx==    by 0xB1CF552: TCollectionProxyFactory::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:110)
==xxxxx==    by 0xB246D74: TStreamerInfo::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4411)
==xxxxx==    by 0x4F0EDFD: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4732)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xAEB4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xAEBCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xAEBC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xAEBC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN19TGenCollectionProxyC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 39 bytes in 1 blocks are possibly lost in loss record 16,753 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xB204BD5: TGenCollectionProxy::TGenCollectionProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionProxy.cxx:605)
==xxxxx==    by 0xB20D792: TGenCollectionStreamer::TGenCollectionStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TGenCollectionStreamer.cxx:48)
==xxxxx==    by 0xB1CF5A8: TCollectionProxyFactory::GenExplicitStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:117)
==xxxxx==    by 0xB1CF60E: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:126)
==xxxxx==    by 0xB246D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xAEB4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xAEBCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xAEBC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xAEBC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN19TGenCollectionProxyC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN22TGenCollectionStreamerC1ERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory19GenExplicitStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,914 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11E217C3: __gnu_cxx::new_allocator<std::_Rb_tree_node<coral::IDevSession*> >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x11E216E3: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x11E2150A: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_create_node(coral::IDevSession* const&) (stl_tree.h:379)
==xxxxx==    by 0x11E21094: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, coral::IDevSession* const&) (stl_tree.h:961)
==xxxxx==    by 0x11E20682: std::_Rb_tree<coral::IDevSession*, coral::IDevSession*, std::_Identity<coral::IDevSession*>, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::_M_insert_unique(coral::IDevSession* const&) (stl_tree.h:1275)
==xxxxx==    by 0x11E1FE56: std::set<coral::IDevSession*, std::less<coral::IDevSession*>, std::allocator<coral::IDevSession*> >::insert(coral::IDevSession* const&) (stl_set.h:410)
==xxxxx==    by 0x11E1EEF4: coral::IDevConnection::registerSession(coral::IDevSession*) (IDevConnection.cpp:29)
==xxxxx==    by 0x11E219D5: coral::IDevSession::IDevSession(coral::IDevConnection&) (IDevSession.cpp:9)
==xxxxx==    by 0x12AF45E0: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:196)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5coral11IDevSessionEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeERKS2_
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
   fun:_ZNSt8_Rb_treeIPN5coral11IDevSessionES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_
   fun:_ZNSt3setIPN5coral11IDevSessionESt4lessIS2_ESaIS2_EE6insertERKS2_
   fun:_ZN5coral14IDevConnection15registerSessionEPNS_11IDevSessionE
   fun:_ZN5coral11IDevSessionC1ERNS_14IDevConnectionE
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,915 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF47E1: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:203)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,916 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA7F49: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:99)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,918 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,919 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,921 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,922 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,924 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,925 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,927 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,928 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,930 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,931 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,933 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,934 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,936 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,937 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,939 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,940 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,942 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B05B75: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:36)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 40 bytes in 1 blocks are still reachable in loss record 18,943 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95FC12: coral::TableDescription::setPrimaryKey(std::vector<std::string, std::allocator<std::string> > const&, std::string) (TableDescription.cpp:660)
==xxxxx==    by 0x12B0BF11: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:164)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription13setPrimaryKeyERKSt6vectorISsSaISsEESs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 41 bytes in 1 blocks are possibly lost in loss record 18,966 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEDD527: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:140)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 18,991 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEE726B: cool::RelationalNodeTable::defaultTableName(std::string const&) (RelationalNodeTable.h:33)
==xxxxx==    by 0xEEDD55F: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:159)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool19RelationalNodeTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 18,992 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEE718D: cool::RelationalGlobalTagTable::defaultTableName(std::string const&) (RelationalGlobalTagTable.h:28)
==xxxxx==    by 0xEEDD597: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:164)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool24RelationalGlobalTagTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 18,993 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEE7316: cool::RelationalTag2TagTable::defaultTableName(std::string const&) (RelationalTag2TagTable.h:27)
==xxxxx==    by 0xEEDD5CF: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:183)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool22RelationalTag2TagTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 18,994 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEE7385: cool::RelationalTagSharedSequenceTable::defaultTableName(std::string const&) (RelationalTagSharedSequenceTable.h:24)
==xxxxx==    by 0xEEDD607: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:188)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool32RelationalTagSharedSequenceTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 43 bytes in 1 blocks are possibly lost in loss record 18,995 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEE71FC: cool::RelationalIovSharedSequenceTable::defaultTableName(std::string const&) (RelationalIovSharedSequenceTable.h:24)
==xxxxx==    by 0xEEDD63F: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:193)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool32RelationalIovSharedSequenceTable16defaultTableNameERKSs
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,006 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEDB932: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:301)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEEDC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xEEA7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,007 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DE43: std::string::assign(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEDBDB1: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:330)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEEDC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xEEA7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs6assignERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,008 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E284: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E2B1: std::string::substr(unsigned long, unsigned long) const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEDB932: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:301)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEED1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1ERKSsmm
   fun:_ZNKSs6substrEmm
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,009 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DE43: std::string::assign(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEDBDB1: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:330)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEED1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs6assignERKSs
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 44 bytes in 1 blocks are possibly lost in loss record 19,010 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEED107C: cool::RalConnectionString(cool::RelationalDatabaseId const&) (RalSessionMgr.cpp:37)
==xxxxx==    by 0xEED191A: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:175)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZN4cool19RalConnectionStringERKNS_20RelationalDatabaseIdE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 47 bytes in 1 blocks are possibly lost in loss record 19,042 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEE6DF5: cool::RelationalDatabaseTable::tableName(std::string const&) (RelationalDatabaseTable.h:42)
==xxxxx==    by 0xEEDF6B8: cool::RelationalDatabase::mainTableName() const (RelationalDatabase.cpp:489)
==xxxxx==    by 0xEEA8C1A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool23RelationalDatabaseTable9tableNameERKSs
   fun:_ZNK4cool18RelationalDatabase13mainTableNameEv
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,953 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B0542E: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1275)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,954 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1AE8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1275)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,955 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,956 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,957 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,958 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,959 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,960 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,961 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,962 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,963 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,964 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,965 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,966 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,967 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,968 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,969 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B0585C: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::TableDescription*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12B05773: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12B056B6: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_create_node(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12B055F2: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12B054E5: std::_Rb_tree<std::string, std::pair<std::string const, coral::TableDescription*>, std::_Select1st<std::pair<std::string const, coral::TableDescription*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::_M_insert_unique(std::pair<std::string const, coral::TableDescription*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12B05298: std::map<std::string, coral::TableDescription*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::TableDescription*> > >::insert(std::pair<std::string const, coral::TableDescription*> const&) (stl_map.h:518)
==xxxxx==    by 0x12B03F66: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:35)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral16TableDescriptionEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral16TableDescriptionEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
   fun:_ZNSt3mapISsPN5coral16TableDescriptionESt4lessISsESaISt4pairIKSsS2_EEE6insertERKS7_
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 48 bytes in 1 blocks are still reachable in loss record 21,970 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF2F94: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, coral::MySQLAccess::Table*> > >::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0x12AF2C3D: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_get_node() (stl_tree.h:369)
==xxxxx==    by 0x12AF28E8: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_create_node(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:379)
==xxxxx==    by 0x12AF2410: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:961)
==xxxxx==    by 0x12AF1B9F: std::_Rb_tree<std::string, std::pair<std::string const, coral::MySQLAccess::Table*>, std::_Select1st<std::pair<std::string const, coral::MySQLAccess::Table*> >, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::_M_insert_unique(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_tree.h:1281)
==xxxxx==    by 0x12AF15BC: std::map<std::string, coral::MySQLAccess::Table*, std::less<std::string>, std::allocator<std::pair<std::string const, coral::MySQLAccess::Table*> > >::insert(std::pair<std::string const, coral::MySQLAccess::Table*> const&) (stl_map.h:518)
==xxxxx==    by 0x12AEEC95: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:190)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN5coral11MySQLAccess5TableEEEE8allocateEmPKv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
   fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN5coral11MySQLAccess5TableEESt10_Select1stIS6_ESt4lessISsESaIS6_EE16_M_insert_uniqueERKS6_
   fun:_ZNSt3mapISsPN5coral11MySQLAccess5TableESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 48 bytes in 1 blocks are possibly lost in loss record 22,065 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E124: char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651E1E9: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6517F47: std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12AD09A7: coral::MySQLAccess::Domain::decodeUserConnectionString(std::string const&) const (Domain.cpp:74)
==xxxxx==    by 0x11D94841: coral::ConnectionService::DataSource::setupForConnection(coral::ConnectionService::ConnectionParams&, std::string const&, coral::ICertificateData const*) (DataSource.cpp:31)
==xxxxx==    by 0x11D8570A: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:271)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1IPcEET_S1_RKSaIcE
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   fun:_ZNK5coral11MySQLAccess6Domain26decodeUserConnectionStringERKSs
   fun:_ZN5coral17ConnectionService10DataSource18setupForConnectionERNS0_16ConnectionParamsERKSsPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 50 bytes in 1 blocks are possibly lost in loss record 22,089 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0C761: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:230)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 52 bytes in 1 blocks are possibly lost in loss record 22,105 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0C761: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:230)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 52 bytes in 1 blocks are possibly lost in loss record 22,106 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0C761: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:230)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 53 bytes in 1 blocks are possibly lost in loss record 22,114 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0xEEDBD3F: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:329)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEEDC877: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xEEA7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 53 bytes in 1 blocks are possibly lost in loss record 22,115 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DC7C: std::string::append(std::string const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4F5918E: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:2310)
==xxxxx==    by 0xEEDBD3F: cool::RelationalDatabaseId::i_parseUrl(std::string const&) (RelationalDatabaseId.cpp:329)
==xxxxx==    by 0xEED9205: cool::RelationalDatabaseId::RelationalDatabaseId(std::string const&) (RelationalDatabaseId.cpp:32)
==xxxxx==    by 0xEED1163: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendERKSs
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
   fun:_ZN4cool20RelationalDatabaseId10i_parseUrlERKSs
   fun:_ZN4cool20RelationalDatabaseIdC1ERKSs
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 53 bytes in 1 blocks are possibly lost in loss record 22,116 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEB7F26: cool::RelationalNodeTable::sequenceName(std::string const&) (RelationalNodeTable.h:40)
==xxxxx==    by 0xEEC6AE8: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:238)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool19RelationalNodeTable12sequenceNameERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,139 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBE4C8: cool::RalDatabaseSvc::RalDatabaseSvc(coral::IConnectionService&) (RalDatabaseSvc.cpp:22)
==xxxxx==    by 0xEE9CC10: cool::CoralApplication::CoralApplication(coral::IConnectionService*) (CoralApplication.cpp:226)
==xxxxx==    by 0x579A408: cool::Application::Application(coral::IConnectionService*) (Application.cpp:20)
==xxxxx==    by 0x579A6A4: cool::DatabaseSvcFactory::databaseService() (DatabaseSvcFactory.cpp:23)
==xxxxx==    by 0xECA6E47: (anonymous namespace)::method_11421(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19906)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11D2504C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB4579: PyROOT::TRootObjectRefExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:309)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEA8845: PyROOT::TClassMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (ClassMethodHolder.cxx:38)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool14RalDatabaseSvcC1ERN5coral18IConnectionServiceE
   fun:_ZN4cool16CoralApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool11ApplicationC1EPN5coral18IConnectionServiceE
   fun:_ZN4cool18DatabaseSvcFactory15databaseServiceEv
   fun:_ZN12_GLOBAL__N_1L12method_11421EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT22TRootObjectRefExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT18TClassMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,140 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x301C40BBAA: _dl_map_object_deps (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C410F01: dl_open_worker (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C40D135: _dl_catch_error (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C4108BB: _dl_open (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C909FDF: do_dlopen (in /lib64/libc-2.5.so)
==xxxxx==    by 0x301C40D135: _dl_catch_error (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C90A146: __libc_dlopen_mode (in /lib64/libc-2.5.so)
==xxxxx==    by 0x301D80F36B: pthread_cancel_init (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301D80F47F: _Unwind_ForcedUnwind (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301D80D2AF: __pthread_unwind (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301D807AB4: pthread_exit (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x12B98CCA: nptl_pthread_exit_hack_handler (my_thr_init.c:57)
==xxxxx==    by 0x301D80683C: start_thread (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x301C8D4FAC: clone (in /lib64/libc-2.5.so)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_error
   fun:__libc_dlopen_mode
   fun:pthread_cancel_init
   fun:_Unwind_ForcedUnwind
   fun:__pthread_unwind
   fun:pthread_exit
   fun:nptl_pthread_exit_hack_handler
   fun:start_thread
   fun:clone
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,141 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,142 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C72C: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:223)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,143 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,144 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,145 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 56 bytes in 1 blocks are still reachable in loss record 22,146 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C9A3: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:244)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 57 bytes in 1 blocks are possibly lost in loss record 22,154 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEB886F: cool::RelationalTag2TagTable::sequenceName(std::string const&) (RelationalTag2TagTable.h:33)
==xxxxx==    by 0xEEC8617: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:516)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool22RelationalTag2TagTable12sequenceNameERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 63 bytes in 1 blocks are possibly lost in loss record 22,199 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651DA7F: std::string::append(char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x4EFBCD9: std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2347)
==xxxxx==    by 0xEEB8800: cool::RelationalTagSequence::sequenceName(std::string const&, unsigned int) (RelationalTagSequence.h:23)
==xxxxx==    by 0xEEC730C: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:306)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSs6appendEPKcm
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_
   fun:_ZN4cool21RelationalTagSequence12sequenceNameERKSsj
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,301 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,302 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,303 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,304 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,305 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,306 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,307 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,308 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,309 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,310 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,311 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,312 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,313 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,314 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,315 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,316 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,317 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,318 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,319 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AEEBEB: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,320 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B04001: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 64 bytes in 1 blocks are still reachable in loss record 22,329 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB1CF5EC: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:125)
==xxxxx==    by 0xB246D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xAEB4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xAEBCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xAEBC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xAEBC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==xxxxx== 72 bytes in 1 blocks are still reachable in loss record 22,467 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B95877: my_multi_malloc (mulalloc.c:50)
==xxxxx==    by 0x12B7F81D: mysql_real_connect (client.c:3374)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_multi_malloc
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 80 bytes in 1 blocks are still reachable in loss record 22,710 of 32,525
==xxxxx==    at 0x4A0931B: realloc (vg_replace_malloc.c:632)
==xxxxx==    by 0x301C409E15: _dl_lookup_symbol_x (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C40CFB4: _dl_fixup (in /lib64/ld-2.5.so)
==xxxxx==    by 0x301C412A31: _dl_runtime_resolve (in /lib64/ld-2.5.so)
==xxxxx==    by 0x12AED5CC: coral::MySQLAccess::Schema::existsTable(std::string const&) const (Schema.cpp:70)
==xxxxx==    by 0xEEC04AF: cool::RalQueryMgr::existsTable(std::string const&) const (RalQueryMgr.cpp:76)
==xxxxx==    by 0xEEC0615: cool::RalQueryMgr::prepareQueryDefinition(coral::IQueryDefinition&, cool::IRelationalQueryDefinition const&, bool) const (RalQueryMgr.cpp:106)
==xxxxx==    by 0xEEC0D73: cool::RalQueryMgr::prepareQuery(cool::IRelationalQueryDefinition const&, boost::shared_ptr<coral::AttributeList>&) const (RalQueryMgr.cpp:172)
==xxxxx==    by 0xEEC101C: cool::RalQueryMgr::fetchOrderedRows(cool::IRelationalQueryDefinition const&, std::string const&, unsigned int, bool) const (RalQueryMgr.cpp:214)
==xxxxx==    by 0xEEE1EFF: cool::RelationalDatabase::fetchDatabaseAttributes() const (RelationalDatabase.cpp:978)
==xxxxx==    by 0xEEDD8A8: cool::RelationalDatabase::openDatabase() (RelationalDatabase.cpp:214)
==xxxxx==    by 0xEF60CAF: cool::TransRalDatabase::openDatabase() (TransRalDatabase.cpp:237)
==xxxxx==    by 0xEEBEDDE: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:153)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:realloc
   fun:_dl_lookup_symbol_x
   fun:_dl_fixup
   fun:_dl_runtime_resolve
   fun:_ZNK5coral11MySQLAccess6Schema11existsTableERKSs
   fun:_ZNK4cool11RalQueryMgr11existsTableERKSs
   fun:_ZNK4cool11RalQueryMgr22prepareQueryDefinitionERN5coral16IQueryDefinitionERKNS_26IRelationalQueryDefinitionEb
   fun:_ZNK4cool11RalQueryMgr12prepareQueryERKNS_26IRelationalQueryDefinitionERN5boost10shared_ptrIN5coral13AttributeListEEE
   fun:_ZNK4cool11RalQueryMgr16fetchOrderedRowsERKNS_26IRelationalQueryDefinitionERKSsjb
   fun:_ZNK4cool18RelationalDatabase23fetchDatabaseAttributesEv
   fun:_ZN4cool18RelationalDatabase12openDatabaseEv
   fun:_ZN4cool16TransRalDatabase12openDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TBoolExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 80 bytes in 1 blocks are still reachable in loss record 22,711 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF8C2F5D: coral::AttributeList::operator=(coral::AttributeList const&) (AttributeList.cpp:64)
==xxxxx==    by 0xF013EFF: cool::Record::reset() (Record.cpp:206)
==xxxxx==    by 0xF013B7D: cool::Record::operator=(cool::IRecord const&) (Record.cpp:133)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral13AttributeListaSERKS0_
   fun:_ZN4cool6Record5resetEv
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 88 bytes in 1 blocks are still reachable in loss record 24,039 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF4773: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:200)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 97 bytes in 2 blocks are possibly lost in loss record 24,267 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0C761: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:230)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 101 bytes in 2 blocks are possibly lost in loss record 24,277 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 108 bytes in 3 blocks are possibly lost in loss record 24,356 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 108 bytes in 3 blocks are possibly lost in loss record 24,357 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 112 bytes in 2 blocks are still reachable in loss record 24,399 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 112 bytes in 2 blocks are still reachable in loss record 24,400 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF960613: coral::TableDescription::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescription.cpp:749)
==xxxxx==    by 0x12B0C72C: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:223)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 113 bytes in 3 blocks are possibly lost in loss record 24,406 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 113 bytes in 3 blocks are possibly lost in loss record 24,407 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 113 bytes in 3 blocks are possibly lost in loss record 24,408 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 24,450 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xED0D89F: __gnu_cxx::new_allocator<cool::IFieldSpecification*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xED0B796: std::_Vector_base<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xED1C7B2: std::vector<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cool::IFieldSpecification**, std::vector<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> > >, cool::IFieldSpecification* const&) (vector.tcc:327)
==xxxxx==    by 0xED04483: std::vector<cool::IFieldSpecification*, std::allocator<cool::IFieldSpecification*> >::push_back(cool::IFieldSpecification* const&) (stl_vector.h:834)
==xxxxx==    by 0xF0146C0: cool::RecordSpecification::extend(std::string const&, cool::StorageType::TypeId) (RecordSpecification.cpp:72)
==xxxxx==    by 0xF014058: cool::Record::extend(cool::IRecord const&) (Record.cpp:220)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN4cool19IFieldSpecificationEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN4cool19IFieldSpecificationESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN4cool19IFieldSpecificationESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN4cool19IFieldSpecificationESaIS2_EE9push_backERKS2_
   fun:_ZN4cool19RecordSpecification6extendERKSsNS_11StorageType6TypeIdE
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 24,451 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xED0DE53: __gnu_cxx::new_allocator<coral::AttributeSpecification*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xED0C212: std::_Vector_base<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xED1E744: std::vector<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::AttributeSpecification**, std::vector<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> > >, coral::AttributeSpecification* const&) (vector.tcc:327)
==xxxxx==    by 0xED069CD: std::vector<coral::AttributeSpecification*, std::allocator<coral::AttributeSpecification*> >::push_back(coral::AttributeSpecification* const&) (stl_vector.h:834)
==xxxxx==    by 0xF8C5BBF: coral::AttributeListSpecification::extend(std::string const&, std::type_info const&) (AttributeListSpecification.cpp:58)
==xxxxx==    by 0xF8C35D7: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:143)
==xxxxx==    by 0xF01407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral22AttributeSpecificationEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral22AttributeSpecificationESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral22AttributeSpecificationESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral22AttributeSpecificationESaIS2_EE9push_backERKS2_
   fun:_ZN5coral26AttributeListSpecification6extendERKSsRKSt9type_info
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 24,452 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xED0E125: __gnu_cxx::new_allocator<coral::Attribute*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xED0C750: std::_Vector_base<coral::Attribute*, std::allocator<coral::Attribute*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xED1F642: std::vector<coral::Attribute*, std::allocator<coral::Attribute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Attribute**, std::vector<coral::Attribute*, std::allocator<coral::Attribute*> > >, coral::Attribute* const&) (vector.tcc:327)
==xxxxx==    by 0xED079A7: std::vector<coral::Attribute*, std::allocator<coral::Attribute*> >::push_back(coral::Attribute* const&) (stl_vector.h:834)
==xxxxx==    by 0xF8C3630: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:144)
==xxxxx==    by 0xF01407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral9AttributeEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral9AttributeESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral9AttributeESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral9AttributeESaIS2_EE9push_backERKS2_
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 128 bytes in 1 blocks are still reachable in loss record 24,453 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xED0D5CD: __gnu_cxx::new_allocator<cool::IField*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xED0B258: std::_Vector_base<cool::IField*, std::allocator<cool::IField*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xED1A76E: std::vector<cool::IField*, std::allocator<cool::IField*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cool::IField**, std::vector<cool::IField*, std::allocator<cool::IField*> > >, cool::IField* const&) (vector.tcc:327)
==xxxxx==    by 0xED02317: std::vector<cool::IField*, std::allocator<cool::IField*> >::push_back(cool::IField* const&) (stl_vector.h:834)
==xxxxx==    by 0xF014117: cool::Record::extend(cool::IRecord const&) (Record.cpp:223)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN4cool6IFieldEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN4cool6IFieldESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN4cool6IFieldESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN4cool6IFieldESaIS2_EE9push_backERKS2_
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 136 bytes in 1 blocks are still reachable in loss record 24,508 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AF4694: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:198)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 144 bytes in 1 blocks are still reachable in loss record 24,552 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B959B2: init_alloc_root (my_alloc.c:63)
==xxxxx==    by 0x12B82940: mysql_client_plugin_init (client_plugin.c:238)
==xxxxx==    by 0x12B78B33: mysql_server_init (libmysql.c:133)
==xxxxx==    by 0x12B7E63E: mysql_init (client.c:1699)
==xxxxx==    by 0x12ACB9BA: coral::MySQLAccess::Connection::initialize() (Connection.cpp:218)
==xxxxx==    by 0x12ACAEB0: coral::MySQLAccess::Connection::Connection(coral::MySQLAccess::DomainProperties const&, std::string const&) (Connection.cpp:39)
==xxxxx==    by 0x12AD07BC: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x11D8392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBED4C: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:146)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:init_alloc_root
   fun:mysql_client_plugin_init
   fun:mysql_server_init
   fun:mysql_init
   fun:_ZN5coral11MySQLAccess10Connection10initializeEv
   fun:_ZN5coral11MySQLAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
}
==xxxxx== 149 bytes in 3 blocks are possibly lost in loss record 24,605 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0C761: coral::MySQLAccess::TableSchemaLoader::loadIndexDescriptions() (TableSchemaLoader.cpp:230)
==xxxxx==    by 0x12B0B65B: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:42)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader21loadIndexDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,609 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEA7D3E: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,610 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC63D2: cool::RalSchemaMgr::createMainTable(std::string const&) const (RalSchemaMgr.cpp:135)
==xxxxx==    by 0xEEA8C27: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:204)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createMainTableERKSs
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,611 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,612 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,613 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,614 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,615 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,616 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,617 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 152 bytes in 1 blocks are still reachable in loss record 24,618 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12B03E58: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:31)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 160 bytes in 1 blocks are still reachable in loss record 24,626 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D7C627: coral::ConnectionService::ConnectionHandle::ConnectionHandle(coral::IConnection*, coral::ConnectionService::ConnectionParams const&, coral::ConnectionService::ConnectionServiceConfiguration const&) (ConnectionHandle.cpp:23)
==xxxxx==    by 0x11D83962: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:83)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral17ConnectionService16ConnectionHandleC1EPNS_11IConnectionERKNS0_16ConnectionParamsERKNS0_30ConnectionServiceConfigurationE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 160 bytes in 10 blocks are still reachable in loss record 24,661 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF8C5B85: coral::AttributeListSpecification::extend(std::string const&, std::type_info const&) (AttributeListSpecification.cpp:58)
==xxxxx==    by 0xF8C35D7: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:143)
==xxxxx==    by 0xF01407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral26AttributeListSpecification6extendERKSsRKSt9type_info
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 160 bytes in 10 blocks are still reachable in loss record 24,662 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF8C3607: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:144)
==xxxxx==    by 0xF01407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 24,672 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC6B69: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:241)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 24,673 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEECC61A: cool::RalSchemaMgr::createTagSequence(std::string const&) const (RalSchemaMgr.cpp:1191)
==xxxxx==    by 0xEEC7333: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:307)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr17createTagSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 24,674 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEED0676: cool::RalSequenceMgr::createSequence(std::string const&) (RalSequenceMgr.cpp:73)
==xxxxx==    by 0xEEC8695: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:519)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZN4cool14RalSequenceMgr14createSequenceERKSs
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 24,675 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8E5A: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:265)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 168 bytes in 3 blocks are still reachable in loss record 24,676 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC955E: cool::RalSchemaMgr::createSharedSequence(std::string const&, std::string const&) const (RalSchemaMgr.cpp:672)
==xxxxx==    by 0xEEA8EBD: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:271)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createSharedSequenceERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 176 bytes in 1 blocks are still reachable in loss record 24,698 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12ACB314: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
}
==xxxxx== 184 bytes in 1 blocks are still reachable in loss record 24,730 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AD07A2: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x11D8392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 184 bytes in 5 blocks are possibly lost in loss record 24,731 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 192 bytes in 1 blocks are still reachable in loss record 24,736 of 32,525
==xxxxx==    at 0x4A07C76: calloc (vg_replace_malloc.c:566)
==xxxxx==    by 0x12B994EE: my_thread_init (my_thr_init.c:334)
==xxxxx==    by 0x12B78B1C: mysql_server_init (libmysql.c:181)
==xxxxx==    by 0x12B7E63E: mysql_init (client.c:1699)
==xxxxx==    by 0x12ACB9BA: coral::MySQLAccess::Connection::initialize() (Connection.cpp:218)
==xxxxx==    by 0x12ACAEB0: coral::MySQLAccess::Connection::Connection(coral::MySQLAccess::DomainProperties const&, std::string const&) (Connection.cpp:39)
==xxxxx==    by 0x12AD07BC: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x11D8392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:calloc
   fun:my_thread_init
   fun:mysql_server_init
   fun:mysql_init
   fun:_ZN5coral11MySQLAccess10Connection10initializeEv
   fun:_ZN5coral11MySQLAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 224 bytes in 1 blocks are still reachable in loss record 24,848 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x11D928FF: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:48)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 225 bytes in 6 blocks are possibly lost in loss record 24,866 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 232 bytes in 1 blocks are still reachable in loss record 24,874 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x12AECDB9: coral::MySQLAccess::Schema::Schema(boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, std::string const&) (Schema.cpp:30)
==xxxxx==    by 0x12AF478B: coral::MySQLAccess::Session::Session(coral::IDevConnection&, coral::MySQLAccess::DomainProperties const&, std::string const&, std::string const&, st_mysql*&, bool&, boost::mutex&, coral::AccessMode) (Session.cpp:200)
==xxxxx==    by 0x12ACB371: coral::MySQLAccess::Connection::newSession(std::string const&, coral::AccessMode) const (Connection.cpp:136)
==xxxxx==    by 0x11D7D2A3: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:150)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral11MySQLAccess6SchemaC1EN5boost10shared_ptrIKNS0_17SessionPropertiesEEERKSs
   fun:_ZN5coral11MySQLAccess7SessionC1ERNS_14IDevConnectionERKNS0_16DomainPropertiesERKSsS8_RP8st_mysqlRbRN5boost5mutexENS_10AccessModeE
   fun:_ZNK5coral11MySQLAccess10Connection10newSessionERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 240 bytes in 10 blocks are still reachable in loss record 29,073 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF014690: cool::RecordSpecification::extend(std::string const&, cool::StorageType::TypeId) (RecordSpecification.cpp:72)
==xxxxx==    by 0xF014058: cool::Record::extend(cool::IRecord const&) (Record.cpp:220)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool19RecordSpecification6extendERKSsNS_11StorageType6TypeIdE
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
}
==xxxxx== 240 bytes in 10 blocks are still reachable in loss record 29,074 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF0140D7: cool::Record::extend(cool::IRecord const&) (Record.cpp:222)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 256 bytes in 1 blocks are still reachable in loss record 29,084 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF967341: __gnu_cxx::new_allocator<coral::Column*>::allocate(unsigned long, void const*) (new_allocator.h:92)
==xxxxx==    by 0xF96669A: std::_Vector_base<coral::Column*, std::allocator<coral::Column*> >::_M_allocate(unsigned long) (stl_vector.h:150)
==xxxxx==    by 0xF965042: std::vector<coral::Column*, std::allocator<coral::Column*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coral::Column**, std::vector<coral::Column*, std::allocator<coral::Column*> > >, coral::Column* const&) (vector.tcc:327)
==xxxxx==    by 0xF963A49: std::vector<coral::Column*, std::allocator<coral::Column*> >::push_back(coral::Column* const&) (stl_vector.h:834)
==xxxxx==    by 0xF95C7FE: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:193)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPN5coral6ColumnEE8allocateEmPKv
   fun:_ZNSt12_Vector_baseIPN5coral6ColumnESaIS2_EE11_M_allocateEm
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
   fun:_ZNSt6vectorIPN5coral6ColumnESaIS2_EE9push_backERKS2_
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 280 bytes in 5 blocks are still reachable in loss record 29,327 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC85CF: cool::RalSchemaMgr::createTag2TagTable(std::string const&, std::string const&, std::string const&) const (RalSchemaMgr.cpp:508)
==xxxxx==    by 0xEEA8DF7: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:259)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr18createTag2TagTableERKSsS2_S2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 320 bytes in 1 blocks are still reachable in loss record 29,381 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB1CF53C: TCollectionProxyFactory::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:110)
==xxxxx==    by 0xB246D74: TStreamerInfo::GenExplicitProxy(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4411)
==xxxxx==    by 0x4F0EDFD: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4732)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xAEB4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xAEBCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xAEBC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xAEBC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo16GenExplicitProxyERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==xxxxx== 336 bytes in 1 blocks are still reachable in loss record 31,287 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xB1CF592: TCollectionProxyFactory::GenExplicitStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:117)
==xxxxx==    by 0xB1CF60E: TCollectionProxyFactory::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TCollectionProxyFactory.cxx:126)
==xxxxx==    by 0xB246D9E: TStreamerInfo::GenExplicitClassStreamer(ROOT::TCollectionProxyInfo const&, TClass*) (TStreamerInfo.cxx:4420)
==xxxxx==    by 0x4F0EE33: TClass::SetCollectionProxy(ROOT::TCollectionProxyInfo const&) (TClass.cxx:4735)
==xxxxx==    by 0x4F1CF07: ROOT::TGenericClassInfo::GetClass() (TGenericClassInfo.cxx:235)
==xxxxx==    by 0x51FBAB0: ROOT::vectorlEstringgR_Dictionary() (G__Cont.cxx:4218)
==xxxxx==    by 0x4E8CAF1: TROOT::LoadClass(char const*, bool) const (TROOT.cxx:1476)
==xxxxx==    by 0x4F075B1: TClass::GetClass(char const*, bool, bool) (TClass.cxx:2575)
==xxxxx==    by 0xAEB4A14: PyROOT::CreateExecutor(std::string const&) (Executors.cxx:379)
==xxxxx==    by 0xAEBCF6F: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitExecutor_(PyROOT::TExecutor*&) (MethodHolder.cxx:217)
==xxxxx==    by 0xAEBC7BE: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Initialize() (MethodHolder.cxx:505)
==xxxxx==    by 0xAEBC4DD: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:666)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN23TCollectionProxyFactory19GenExplicitStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN23TCollectionProxyFactory24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN13TStreamerInfo24GenExplicitClassStreamerERKN4ROOT20TCollectionProxyInfoEP6TClass
   fun:_ZN6TClass18SetCollectionProxyERKN4ROOT20TCollectionProxyInfoE
   fun:_ZN4ROOT17TGenericClassInfo8GetClassEv
   fun:_ZN4ROOTL27vectorlEstringgR_DictionaryEv
   fun:_ZNK5TROOT9LoadClassEPKcb
   fun:_ZN6TClass8GetClassEPKcbb
   fun:_ZN6PyROOT14CreateExecutorERKSs
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitExecutor_ERPNS_9TExecutorE
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE10InitializeEv
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 336 bytes in 6 blocks are still reachable in loss record 31,289 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC79E8: cool::RalSchemaMgr::createGlobalTagTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:365)
==xxxxx==    by 0xEEA8D90: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:236)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr20createGlobalTagTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 376 bytes in 1 blocks are still reachable in loss record 31,330 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEBE891: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,334 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEEDC8A8: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:60)
==xxxxx==    by 0xEEA7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,335 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEED1194: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:49)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,336 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEF509AD: cool::RelationalQueryMgr::RelationalQueryMgr() (RelationalQueryMgr.cpp:15)
==xxxxx==    by 0xEEC022A: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:41)
==xxxxx==    by 0xEEA7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool18RelationalQueryMgrC1Ev
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,337 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEF513F1: cool::RelationalSequenceMgr::RelationalSequenceMgr(cool::RelationalQueryMgr const&) (RelationalSequenceMgr.cpp:16)
==xxxxx==    by 0xEEC4373: cool::RalSequenceMgr::RalSequenceMgr(cool::RelationalQueryMgr const&, cool::ISessionMgr const&) (RalSequenceMgr.h:36)
==xxxxx==    by 0xEEC031D: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:48)
==xxxxx==    by 0xEEA7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool21RelationalSequenceMgrC1ERKNS_18RelationalQueryMgrE
   fun:_ZN4cool14RalSequenceMgrC1ERKNS_18RelationalQueryMgrERKNS_11ISessionMgrE
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,338 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEF50F9D: cool::RelationalSchemaMgr::RelationalSchemaMgr(cool::RelationalDatabase const&) (RelationalSchemaMgr.cpp:15)
==xxxxx==    by 0xEEB6B75: cool::RalSchemaMgr::RalSchemaMgr(cool::RelationalDatabase const&, boost::shared_ptr<cool::ISessionMgr> const&) (RalSchemaMgr.h:38)
==xxxxx==    by 0xEEA7F61: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:99)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool19RelationalSchemaMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool12RalSchemaMgrC1ERKNS_18RelationalDatabaseERKN5boost10shared_ptrINS_11ISessionMgrEEE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,339 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEF04CAD: cool::RelationalNodeMgr::RelationalNodeMgr(cool::RelationalDatabase const&) (RelationalNodeMgr.cpp:24)
==xxxxx==    by 0xEEA7FFC: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:103)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool17RelationalNodeMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,340 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEF5361D: cool::RelationalTagMgr::RelationalTagMgr(cool::RelationalDatabase const&) (RelationalTagMgr.cpp:38)
==xxxxx==    by 0xEEA8088: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:107)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool16RelationalTagMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 384 bytes in 1 blocks are still reachable in loss record 31,341 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xEF0F4F1: cool::RelationalObjectMgr::RelationalObjectMgr(cool::RelationalDatabase const&) (RelationalObjectMgr.cpp:36)
==xxxxx==    by 0xEEA8114: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:111)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4cool19RelationalObjectMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==xxxxx== 480 bytes in 1 blocks are still reachable in loss record 31,514 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B9078E: vio_new (vio.c:189)
==xxxxx==    by 0x12B7FBE5: mysql_real_connect (client.c:3262)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:vio_new
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 31,573 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEB9B45: coral::MessageStream& coral::MessageStream::operator<< <char [39]>(char const (&) [39]) (MessageStream.h:97)
==xxxxx==    by 0xEEDC9D0: cool::RelationalDatabase::RelationalDatabase(std::string const&) (RelationalDatabase.cpp:62)
==xxxxx==    by 0xEEA7CC7: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA39_cEERS0_RKT_
   fun:_ZN4cool18RelationalDatabaseC1ERKSs
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 31,574 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEEB8EFF: coral::MessageStream& coral::MessageStream::operator<< <char [15]>(char const (&) [15]) (MessageStream.h:97)
==xxxxx==    by 0xEED12AB: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:67)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA15_cEERS0_RKT_
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 31,575 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEE9DF89: coral::MessageStream& coral::MessageStream::operator<< <char [33]>(char const (&) [33]) (MessageStream.h:97)
==xxxxx==    by 0xEF50A0E: cool::RelationalQueryMgr::RelationalQueryMgr() (RelationalQueryMgr.cpp:18)
==xxxxx==    by 0xEEC022A: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:41)
==xxxxx==    by 0xEEA7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA33_cEERS0_RKT_
   fun:_ZN4cool18RelationalQueryMgrC1Ev
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 31,576 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEE9E001: coral::MessageStream& coral::MessageStream::operator<< <char [36]>(char const (&) [36]) (MessageStream.h:97)
==xxxxx==    by 0xEF51452: cool::RelationalSequenceMgr::RelationalSequenceMgr(cool::RelationalQueryMgr const&) (RelationalSequenceMgr.cpp:18)
==xxxxx==    by 0xEEC4373: cool::RalSequenceMgr::RalSequenceMgr(cool::RelationalQueryMgr const&, cool::ISessionMgr const&) (RalSequenceMgr.h:36)
==xxxxx==    by 0xEEC031D: cool::RalQueryMgr::RalQueryMgr(cool::ISessionMgr const&) (RalQueryMgr.cpp:48)
==xxxxx==    by 0xEEA7EA3: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:95)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA36_cEERS0_RKT_
   fun:_ZN4cool21RelationalSequenceMgrC1ERKNS_18RelationalQueryMgrE
   fun:_ZN4cool14RalSequenceMgrC1ERKNS_18RelationalQueryMgrERKNS_11ISessionMgrE
   fun:_ZN4cool11RalQueryMgrC1ERKNS_11ISessionMgrE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 31,577 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEED015B: coral::MessageStream& coral::MessageStream::operator<< <char [32]>(char const (&) [32]) (MessageStream.h:97)
==xxxxx==    by 0xEF04D0E: cool::RelationalNodeMgr::RelationalNodeMgr(cool::RelationalDatabase const&) (RelationalNodeMgr.cpp:26)
==xxxxx==    by 0xEEA7FFC: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:103)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA32_cEERS0_RKT_
   fun:_ZN4cool17RelationalNodeMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 537 bytes in 1 blocks are possibly lost in loss record 31,578 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x65123EE: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEE9DED5: coral::MessageStream& coral::MessageStream::operator<< <char [31]>(char const (&) [31]) (MessageStream.h:97)
==xxxxx==    by 0xEF5367E: cool::RelationalTagMgr::RelationalTagMgr(cool::RelationalDatabase const&) (RelationalTagMgr.cpp:40)
==xxxxx==    by 0xEEA8088: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:107)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   fun:_ZN5coral13MessageStreamlsIA31_cEERS0_RKT_
   fun:_ZN4cool16RelationalTagMgrC1ERKNS_18RelationalDatabaseE
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
}
==xxxxx== 560 bytes in 10 blocks are possibly lost in loss record 31,619 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF8B7DEE: coral::AttributeDataFactory::create(std::type_info const&) const (AttributeDataFactory.cpp:33)
==xxxxx==    by 0xF8C82C9: coral::Attribute::Attribute(coral::AttributeSpecification const&) (Attribute.cpp:47)
==xxxxx==    by 0xF8C3615: coral::AttributeList::extend(std::string const&, std::type_info const&) (AttributeList.cpp:144)
==xxxxx==    by 0xF01407E: cool::Record::extend(cool::IRecord const&) (Record.cpp:221)
==xxxxx==    by 0xF013B90: cool::Record::operator=(cool::IRecord const&) (Record.cpp:134)
==xxxxx==    by 0xEEA89F8: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:170)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNK5coral20AttributeDataFactory6createERKSt9type_info
   fun:_ZN5coral9AttributeC1ERKNS_22AttributeSpecificationE
   fun:_ZN5coral13AttributeList6extendERKSsRKSt9type_info
   fun:_ZN4cool6Record6extendERKNS_7IRecordE
   fun:_ZN4cool6RecordaSERKNS_7IRecordE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEEclEPNS_11ObjectProxyEP7_objectS7_lb
   fun:_ZN6PyROOT12_GLOBAL__N_17mp_callEPNS_11MethodProxyEP7_objectS4_
   fun:PyObject_Call
}
==xxxxx== 848 bytes in 19 blocks are possibly lost in loss record 31,787 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CAE9: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651CC8B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x12B0BA46: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:81)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs9_M_mutateEmmm
   fun:_ZNSs15_M_replace_safeEmmPKcm
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
}
==xxxxx== 1,049 bytes in 1 blocks are possibly lost in loss record 31,917 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0x651C8F8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D66A: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651D74F: std::string::reserve(unsigned long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6516A8B: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x651B084: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0x6512154: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /cvmfs/sft.cern.ch/lcg/external/gcc/4.6.2/x86_64-slc5/lib64/libstdc++.so.6.0.16)
==xxxxx==    by 0xEE9E03D: coral::MessageStream& coral::MessageStream::operator<< <std::string>(std::string const&) (MessageStream.h:97)
==xxxxx==    by 0xEEC64C2: cool::RalSchemaMgr::fillMainTable(std::string const&, coral::AttributeList const&) const (RalSchemaMgr.cpp:146)
==xxxxx==    by 0xEEA8C8B: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:205)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi
   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   fun:_ZN5coral13MessageStreamlsISsEERS0_RKT_
   fun:_ZNK4cool12RalSchemaMgr13fillMainTableERKSsRKN5coral13AttributeListE
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 1,064 bytes in 19 blocks are still reachable in loss record 31,928 of 32,525
==xxxxx==    at 0x4A08DB9: operator new(unsigned long) (vg_replace_malloc.c:287)
==xxxxx==    by 0xF95C767: coral::TableDescription::insertColumn(std::string const&, std::string const&, int, bool, std::string) (TableDescription.cpp:191)
==xxxxx==    by 0x12B0BDE4: coral::MySQLAccess::TableSchemaLoader::loadTableColumnsDescriptions() (TableSchemaLoader.cpp:151)
==xxxxx==    by 0x12B0B64F: coral::MySQLAccess::TableSchemaLoader::refreshTableDescription() (TableSchemaLoader.cpp:41)
==xxxxx==    by 0x12B05BC3: coral::MySQLAccess::TableSchemaEditor::TableSchemaEditor(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&, bool) (TableSchemaEditor.cpp:39)
==xxxxx==    by 0x12B04029: coral::MySQLAccess::Table::Table(std::string const&, boost::shared_ptr<coral::MySQLAccess::SessionProperties const>, coral::MySQLAccess::ISchemaProperties&) (Table.cpp:38)
==xxxxx==    by 0x12AEEC11: coral::MySQLAccess::Schema::tableHandle(std::string const&) (Schema.cpp:189)
==xxxxx==    by 0x12AEE6A7: coral::MySQLAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:161)
==xxxxx==    by 0xEEC6ACF: cool::RalSchemaMgr::createNodeTable(std::string const&, std::string const&) const (RalSchemaMgr.cpp:234)
==xxxxx==    by 0xEEA8D2D: cool::RalDatabase::createDatabase(cool::IRecord const&) (RalDatabase.cpp:230)
==xxxxx==    by 0xEEDD68D: cool::RelationalDatabase::createDatabase() (RelationalDatabase.cpp:198)
==xxxxx==    by 0xEF61385: cool::RalDatabase::createDatabase() (RalDatabase.h:215)
==xxxxx==    by 0xEF60DDD: cool::TransRalDatabase::createDatabase() (TransRalDatabase.cpp:252)
==xxxxx==    by 0xEEBE934: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:87)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN5coral16TableDescription12insertColumnERKSsS2_ibSs
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader28loadTableColumnsDescriptionsEv
   fun:_ZN5coral11MySQLAccess17TableSchemaLoader23refreshTableDescriptionEv
   fun:_ZN5coral11MySQLAccess17TableSchemaEditorC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesEb
   fun:_ZN5coral11MySQLAccess5TableC1ERKSsN5boost10shared_ptrIKNS0_17SessionPropertiesEEERNS0_17ISchemaPropertiesE
   fun:_ZN5coral11MySQLAccess6Schema11tableHandleERKSs
   fun:_ZN5coral11MySQLAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:_ZNK4cool12RalSchemaMgr15createNodeTableERKSsS2_
   fun:_ZN4cool11RalDatabase14createDatabaseERKNS_7IRecordE
   fun:_ZN4cool18RelationalDatabase14createDatabaseEv
   fun:_ZN4cool11RalDatabase14createDatabaseEv
   fun:_ZN4cool16TransRalDatabase14createDatabaseEv
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallFastEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE8CallSafeEPvb
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE7ExecuteEPvb
}
==xxxxx== 1,272 bytes in 1 blocks are still reachable in loss record 31,978 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B7E726: mysql_init (client.c:1703)
==xxxxx==    by 0x12ACB9BA: coral::MySQLAccess::Connection::initialize() (Connection.cpp:218)
==xxxxx==    by 0x12ACAEB0: coral::MySQLAccess::Connection::Connection(coral::MySQLAccess::DomainProperties const&, std::string const&) (Connection.cpp:39)
==xxxxx==    by 0x12AD07BC: coral::MySQLAccess::Domain::newConnection(std::string const&) const (Domain.cpp:47)
==xxxxx==    by 0x11D8392E: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:78)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:mysql_init
   fun:_ZN5coral11MySQLAccess10Connection10initializeEv
   fun:_ZN5coral11MySQLAccess10ConnectionC1ERKNS0_16DomainPropertiesERKSs
   fun:_ZNK5coral11MySQLAccess6Domain13newConnectionERKSs
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
   fun:_ZN6PyROOT26TRootObjectByValueExecutor7ExecuteEPN4Cint11G__CallFuncEPvb
}
==xxxxx== 8,199 bytes in 1 blocks are still reachable in loss record 32,376 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B82B88: my_net_init (net_serv.cc:118)
==xxxxx==    by 0x12B7F29D: mysql_real_connect (client.c:3280)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:my_net_init
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
==xxxxx== 16,384 bytes in 1 blocks are still reachable in loss record 32,439 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B97D21: my_malloc (my_malloc.c:38)
==xxxxx==    by 0x12B905AE: vio_init (vio.c:71)
==xxxxx==    by 0x12B907A8: vio_new (vio.c:191)
==xxxxx==    by 0x12B7FBE5: mysql_real_connect (client.c:3262)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBE8AF: cool::RalDatabaseSvc::createDatabase(std::string const&) const (RalDatabaseSvc.cpp:82)
==xxxxx==    by 0xEC9D046: (anonymous namespace)::method_11334(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19033)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEC04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB44A3: PyROOT::TRootObjectByValueExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:285)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_malloc
   fun:vio_init
   fun:vio_new
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc14createDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11334EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
}
==xxxxx== 36,792 bytes in 9 blocks are still reachable in loss record 32,477 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B980BC: my_once_alloc (my_once.c:58)
==xxxxx==    by 0x12B917CE: init_state_maps (charset.c:62)
==xxxxx==    by 0x12B92313: init_available_charsets (charset.c:452)
==xxxxx==    by 0x301D80C1D2: pthread_once (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x12B926E0: get_charset_by_csname (charset.c:644)
==xxxxx==    by 0x12B7E857: mysql_init_character_set (client.c:2200)
==xxxxx==    by 0x12B7F76E: mysql_real_connect (client.c:3370)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBED4C: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:146)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_once_alloc
   fun:init_state_maps
   fun:init_available_charsets
   fun:pthread_once
   fun:get_charset_by_csname
   fun:mysql_init_character_set
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== 36,792 bytes in 9 blocks are still reachable in loss record 32,478 of 32,525
==xxxxx==    at 0x4A09223: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x12B980BC: my_once_alloc (my_once.c:58)
==xxxxx==    by 0x12B917EA: init_state_maps (charset.c:65)
==xxxxx==    by 0x12B92313: init_available_charsets (charset.c:452)
==xxxxx==    by 0x301D80C1D2: pthread_once (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x12B926E0: get_charset_by_csname (charset.c:644)
==xxxxx==    by 0x12B7E857: mysql_init_character_set (client.c:2200)
==xxxxx==    by 0x12B7F76E: mysql_real_connect (client.c:3370)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBED4C: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:146)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:malloc
   fun:my_once_alloc
   fun:init_state_maps
   fun:init_available_charsets
   fun:pthread_once
   fun:get_charset_by_csname
   fun:mysql_init_character_set
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
}
==xxxxx== LEAK SUMMARY:
==xxxxx==    definitely lost: 0 bytes in 0 blocks
==xxxxx==    indirectly lost: 0 bytes in 0 blocks
==xxxxx==      possibly lost: 8,297 bytes in 99 blocks
==xxxxx==    still reachable: 116,508 bytes in 270 blocks
==xxxxx==         suppressed: 13,439,401 bytes in 106,045 blocks
==xxxxx== 
==xxxxx== ERROR SUMMARY: 51 errors from 50 contexts (suppressed: 1730 from 639)
==xxxxx== 
==xxxxx== 2 errors in context 1 of 50:
==xxxxx== Source and destination overlap in memcpy(0x73bc95e, 0x73bc95e, 21)
==xxxxx==    at 0x4A0AD10: memcpy (mc_replace_strmem.c:838)
==xxxxx==    by 0x12B7C44F: old_password_auth_client (client.c:4298)
==xxxxx==    by 0x12B7EE3C: run_plugin_auth (client.c:2910)
==xxxxx==    by 0x12B7F917: mysql_real_connect (client.c:3429)
==xxxxx==    by 0x12AF4E1F: coral::MySQLAccess::Session::startUserSession(std::string const&, std::string const&) (Session.cpp:258)
==xxxxx==    by 0x11D7D2E0: coral::ConnectionService::ConnectionHandle::newSession(std::string const&, std::string const&, std::string const&, coral::AccessMode, std::string const&) (ConnectionHandle.cpp:156)
==xxxxx==    by 0x11D9B632: coral::ConnectionService::SessionHandle::open(std::string const&, std::string const&, std::string const&, coral::AccessMode) (SessionHandle.cpp:81)
==xxxxx==    by 0x11D839FC: coral::ConnectionService::ConnectionPool::getSessionFromNewConnection(coral::ConnectionService::ConnectionParams const&, coral::AccessMode) (ConnectionPool.cpp:90)
==xxxxx==    by 0x11D8583E: coral::ConnectionService::ConnectionPool::getValidSession(std::string const&, std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionPool.cpp:280)
==xxxxx==    by 0x11D9D38B: coral::ConnectionService::SessionProxy::open(coral::ICertificateData const*) (SessionProxy.cpp:98)
==xxxxx==    by 0x11D9292F: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode, coral::ICertificateData const*) (ConnectionService.cpp:49)
==xxxxx==    by 0x11D93036: coral::ConnectionService::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.h:41)
==xxxxx==    by 0xF9584D5: coral::ConnectionService::connect(std::string const&, coral::AccessMode) (ConnectionService.cpp:66)
==xxxxx==    by 0xEE9ED0C: cool::CoralConnectionServiceProxy::connect(std::string const&, coral::AccessMode) (CoralConnectionServiceProxy.h:55)
==xxxxx==    by 0xEED20A5: cool::RalSessionMgr::connect() (RalSessionMgr.cpp:247)
==xxxxx==    by 0xEED1301: cool::RalSessionMgr::RalSessionMgr(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalSessionMgr.cpp:71)
==xxxxx==    by 0xEEA7D5F: cool::RalDatabase::RalDatabase(boost::shared_ptr<cool::CoralConnectionServiceProxy>, std::string const&, bool) (RalDatabase.cpp:87)
==xxxxx==    by 0xEEBED4C: cool::RalDatabaseSvc::dropDatabase(std::string const&) const (RalDatabaseSvc.cpp:146)
==xxxxx==    by 0xEC9D308: (anonymous namespace)::method_11336(void*, void*, std::vector<void*, std::allocator<void*> > const&, void*) (PyCool_headers_dict.cpp:19053)
==xxxxx==    by 0xE91EC72: ROOT::Cintex::Method_stub_with_context(ROOT::Cintex::StubContext_t*, G__value*, char const*, G__param*, int) (CINTFunctional.cxx:329)
==xxxxx==    by 0x11CEE04C: ???
==xxxxx==    by 0x58882CF: Cint::G__CallFunc::Execute(void*) (CallFunc.cxx:440)
==xxxxx==    by 0x4EFB3CB: Cint::G__CallFunc::ExecInt(void*) (CallFunc.h:101)
==xxxxx==    by 0xAEB3121: PRCallFuncExecInt(Cint::G__CallFunc*, void*, bool) (Executors.cxx:50)
==xxxxx==    by 0xAEB31CD: PyROOT::TBoolExecutor::Execute(Cint::G__CallFunc*, void*, bool) (Executors.cxx:72)
==xxxxx==    by 0xAEBD170: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallFast(void*, bool) (MethodHolder.cxx:94)
==xxxxx==    by 0xAEBD310: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::CallSafe(void*, bool) (MethodHolder.cxx:118)
==xxxxx==    by 0xAEBCDA8: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::Execute(void*, bool) (MethodHolder.cxx:637)
==xxxxx==    by 0xAEBC6AC: PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::operator()(PyROOT::ObjectProxy*, _object*, _object*, long, bool) (MethodHolder.cxx:700)
==xxxxx==    by 0xAEC216A: PyROOT::(anonymous namespace)::mp_call(PyROOT::MethodProxy*, _object*, _object*) (MethodProxy.cxx:482)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48D952: PyEval_EvalFrameEx (ceval.c:3836)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6E36: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x420D4E: instancemethod_call (classobject.c:2579)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x4650BB: slot_tp_call (typeobject.c:5373)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48B6FE: PyEval_EvalFrameEx (ceval.c:3968)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx==    by 0x4E6F2A: function_call (funcobject.c:524)
==xxxxx==    by 0x41D0D2: PyObject_Call (abstract.c:2492)
==xxxxx==    by 0x48907E: PyEval_EvalFrameEx (ceval.c:4063)
==xxxxx==    by 0x48E8FD: PyEval_EvalCodeEx (ceval.c:3000)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Overlap
   fun:memcpy
   fun:old_password_auth_client
   fun:run_plugin_auth
   fun:mysql_real_connect
   fun:_ZN5coral11MySQLAccess7Session16startUserSessionERKSsS3_
   fun:_ZN5coral17ConnectionService16ConnectionHandle10newSessionERKSsS3_S3_NS_10AccessModeES3_
   fun:_ZN5coral17ConnectionService13SessionHandle4openERKSsS3_S3_NS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool27getSessionFromNewConnectionERKNS0_16ConnectionParamsENS_10AccessModeE
   fun:_ZN5coral17ConnectionService14ConnectionPool15getValidSessionERKSsS3_NS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService12SessionProxy4openEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeEPKNS_16ICertificateDataE
   fun:_ZN5coral17ConnectionService17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN5coral17ConnectionService7connectERKSsNS_10AccessModeE
   fun:_ZN4cool27CoralConnectionServiceProxy7connectERKSsN5coral10AccessModeE
   fun:_ZN4cool13RalSessionMgr7connectEv
   fun:_ZN4cool13RalSessionMgrC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZN4cool11RalDatabaseC1EN5boost10shared_ptrINS_27CoralConnectionServiceProxyEEERKSsb
   fun:_ZNK4cool14RalDatabaseSvc12dropDatabaseERKSs
   fun:_ZN12_GLOBAL__N_1L12method_11336EPvS0_RKSt6vectorIS0_SaIS0_EES0_
   fun:_ZN4ROOT6Cintex24Method_stub_with_contextEPNS0_13StubContext_tEP8G__valuePKcP8G__parami
   obj:*
   fun:_ZN4Cint11G__CallFunc7ExecuteEPv
   fun:_ZN4Cint11G__CallFunc7ExecIntEPv
   fun:_ZL17PRCallFuncExecIntPN4Cint11G__CallFuncEPvb
}
--xxxxx-- 
--xxxxx-- used_suppression:    957 <ROOT_PyImport_PyROOT_LEAK>
--xxxxx-- used_suppression:    175 <ROOT_libPyROOT_new_LEAK>
--xxxxx-- used_suppression:     44 <python26_Py_malloc_LEAK>
--xxxxx-- used_suppression:    119 <python26_Py_dictresize_malloc_LEAK>
--xxxxx-- used_suppression:   2890 <ROOT_libCore_new_LEAK>
--xxxxx-- used_suppression:   2081 <ROOT_libReflex_new_LEAK>
--xxxxx-- used_suppression:   6119 <ROOT_libCint_new_LEAK>
--xxxxx-- used_suppression:    420 <python26_PyImport_dlopen_LEAK>
--xxxxx-- used_suppression:    310 <python26_PyObject_GC_Malloc_malloc_LEAK>
--xxxxx-- used_suppression:  18900 <ROOT_libCint_alloc_LEAK>
--xxxxx-- used_suppression:      1 <python26_Py_PyInit_malloc_LEAK>
--xxxxx-- used_suppression:     28 <python26_PyImport_malloc_LEAK>
--xxxxx-- used_suppression:     26 <ROOT_libPyROOT_new_LEAK3>
--xxxxx-- used_suppression:      1 <python26_Py_calculatepath_malloc_LEAK>
--xxxxx-- used_suppression:     43 <coral_PluginManager_loadLibrary_dlopen_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:      1 <python26_Py_realloc_malloc_LEAK>
--xxxxx-- used_suppression:     51 <python26_add_subclass_LEAK>
--xxxxx-- used_suppression:      1 <python26__Py_realloc_LEAK>
--xxxxx-- used_suppression:      1 <python26_PyStringResize_LEAK>
--xxxxx-- used_suppression:     96 <ROOT_libCore_new_LEAK1>
--xxxxx-- used_suppression:     28 <ROOT_libCore_new_LEAK3>
--xxxxx-- used_suppression:      1 <ROOT_libPyROOT_new_LEAK4>
--xxxxx-- used_suppression:      1 <coral_PluginManager_loadLibrary_dlsym_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:      1 <python26_PyExit_dlclose_LEAK>
--xxxxx-- used_suppression:      1 <ROOT_libCintex_new_LEAK>
--xxxxx-- used_suppression:      1 <python26_Py_strdup_malloc_LEAK>
--xxxxx-- used_suppression:   1087 <python26_PyObject_Free_addr4>
--xxxxx-- used_suppression:     26 <python26_PyObject_Free_val8>
--xxxxx-- used_suppression:     26 <python26_PyObject_Free_cond>
--xxxxx-- used_suppression:     20 <python26_PyObject_Realloc_addr4>
--xxxxx-- used_suppression:      5 <python26_PyObject_Realloc_val8>
--xxxxx-- used_suppression:      5 <python26_PyObject_Realloc_cond>
--xxxxx-- used_suppression:     53 dl-hack3
==xxxxx== 
==xxxxx== ERROR SUMMARY: 51 errors from 50 contexts (suppressed: 1730 from 639)
