--- Pythonizations.py	2014-12-09 19:31:08.845059589 +0200
+++ Pythonizations1.py	2014-12-09 19:35:34.963370033 +0200
@@ -58,58 +58,58 @@
         yield sequential.__getitem__(count)
         count += 1
 
-def _draw_aida_ ( self , *args ) :
-    """
-    Draw AIDA histogram (through access to internal ROOT histogram
-
-    >>> aida = ...    # get the historgam
-    >>> aida.Draw()
-
-    """
-    _fun = gbl.Gaudi.Utils.Aida2ROOT.aida2root
-    _root = _fun ( self )
-    return _root.Draw( *args )
-
-gbl.AIDA.IHistogram1D.__repr__ = _printHisto1D
-gbl.AIDA.IHistogram1D.contents = _contentsHisto1D
-gbl.AIDA.IHistogram2D.__repr__ = _printHisto2D
-for h in (  gbl.AIDA.IHistogram   ,
-            gbl.AIDA.IHistogram1D ,
-            gbl.AIDA.IHistogram2D ,
-            gbl.AIDA.IHistogram3D ,
-            gbl.AIDA.IProfile1D   ,
-            gbl.AIDA.IProfile2D   ) :
-    h.Draw = _draw_aida_
-    h.plot = _draw_aida_
-
-gbl.StatusCode.__repr__ = _printStatusCode
-try: gbl._Bit_reference.__repr__ = _printBitReference
-except: pass
-gbl.ContainedObject.__repr__ = _printFillStream
-gbl.DataObject.__repr__ = _printFillStream
-gbl.ObjectContainerBase.__getitem__ = _container__getitem__
-gbl.ObjectContainerBase.__len__ = _container__len__
-gbl.ObjectContainerBase.__iter__ = _container__iter__
-
-gbl.IUpdateManagerSvc.update = lambda self,obj: gbl.IUpdateManagerSvc.PythonHelper.update(self,obj)
-gbl.IUpdateManagerSvc.invalidate = lambda self,obj: gbl.IUpdateManagerSvc.PythonHelper.invalidate(self,obj)
-
+#def _draw_aida_ ( self , *args ) :
+#    """
+#    Draw AIDA histogram (through access to internal ROOT histogram
+#
+#    >>> aida = ...    # get the historgam
+#    >>> aida.Draw()
+#
+#    """
+#    _fun = gbl.Gaudi.Utils.Aida2ROOT.aida2root
+#    _root = _fun ( self )
+#    return _root.Draw( *args )
+#
+#gbl.AIDA.IHistogram1D.__repr__ = _printHisto1D
+#gbl.AIDA.IHistogram1D.contents = _contentsHisto1D
+#gbl.AIDA.IHistogram2D.__repr__ = _printHisto2D
+#for h in (  gbl.AIDA.IHistogram   ,
+#            gbl.AIDA.IHistogram1D ,
+#            gbl.AIDA.IHistogram2D ,
+#            gbl.AIDA.IHistogram3D ,
+#            gbl.AIDA.IProfile1D   ,
+#            gbl.AIDA.IProfile2D   ) :
+#    h.Draw = _draw_aida_
+#    h.plot = _draw_aida_
+#
+#gbl.StatusCode.__repr__ = _printStatusCode
+#try: gbl._Bit_reference.__repr__ = _printBitReference
+#except: pass
+#gbl.ContainedObject.__repr__ = _printFillStream
+#gbl.DataObject.__repr__ = _printFillStream
+#gbl.ObjectContainerBase.__getitem__ = _container__getitem__
+#gbl.ObjectContainerBase.__len__ = _container__len__
+#gbl.ObjectContainerBase.__iter__ = _container__iter__
+#
+#gbl.IUpdateManagerSvc.update = lambda self,obj: gbl.IUpdateManagerSvc.PythonHelper.update(self,obj)
+#gbl.IUpdateManagerSvc.invalidate = lambda self,obj: gbl.IUpdateManagerSvc.PythonHelper.invalidate(self,obj)
+#
 #---Globals--------------------------------------------------------------------
-if not hasattr(gbl.StatusCode, 'SUCCESS'):
-    # emulate enums
-    gbl.StatusCode.SUCCESS = 1
-    gbl.StatusCode.FAILURE = 0
-
-# - string key, equality
-if hasattr ( gbl.Gaudi.StringKey ,'__cpp_eq__' ) :
-    _eq = gbl.Gaudi.StringKey.__cpp_eq__
-    setattr ( gbl.Gaudi.StringKey ,'__eq__' , _eq )
-
-# - string key, non-equality
-if hasattr ( gbl.Gaudi.StringKey ,'__cpp_ne__' ) :
-    _ne = gbl.Gaudi.StringKey.__cpp_ne__
-    setattr ( gbl.Gaudi.StringKey ,'__ne__' , _ne )
-
+#if not hasattr(gbl.StatusCode, 'SUCCESS'):
+#    # emulate enums
+#    gbl.StatusCode.SUCCESS = 1
+#    gbl.StatusCode.FAILURE = 0
+#
+## - string key, equality
+#if hasattr ( gbl.Gaudi.StringKey ,'__cpp_eq__' ) :
+#    _eq = gbl.Gaudi.StringKey.__cpp_eq__
+#    setattr ( gbl.Gaudi.StringKey ,'__eq__' , _eq )
+#
+## - string key, non-equality
+#if hasattr ( gbl.Gaudi.StringKey ,'__cpp_ne__' ) :
+#    _ne = gbl.Gaudi.StringKey.__cpp_ne__
+#    setattr ( gbl.Gaudi.StringKey ,'__ne__' , _ne )
+#
 
 #---Enabling Pickle support----------------------------------------------------
 if  gbl.gROOT.GetVersionInt() <= 51800 :
@@ -437,18 +437,18 @@
     self.erase ( key )
     return _erased
 
-gbl.Gaudi.Utils.MapBase . __len__       = lambda s   : s.size()
-gbl.Gaudi.Utils.MapBase . __iter__      = __mapbase_iter__
-gbl.Gaudi.Utils.MapBase .   keys        = __mapbase_keys__
-gbl.Gaudi.Utils.MapBase . __iteritems__ = __mapbase_iteritems__
-gbl.Gaudi.Utils.MapBase .   iteritems   = __mapbase_iteritems__
-gbl.Gaudi.Utils.MapBase .   items       = __mapbase_items__
-gbl.Gaudi.Utils.MapBase .   values      = __mapbase_values__
-gbl.Gaudi.Utils.MapBase . __contains__  = __mapbase_contains__
-gbl.Gaudi.Utils.MapBase .   has_key     = __mapbase_contains__
-gbl.Gaudi.Utils.MapBase .   get         = __mapbase_get__
-gbl.Gaudi.Utils.MapBase . __str__       = __mapbase_str__
-gbl.Gaudi.Utils.MapBase . __repr__      = __mapbase_str__
-gbl.Gaudi.Utils.MapBase . __setitem__   = __mapbase_setitem__
-gbl.Gaudi.Utils.MapBase . __delitem__   = __mapbase_delitem__
-gbl.Gaudi.Utils.MapBase . __getitem__   = lambda s,key : s.at ( key )
+#gbl.Gaudi.Utils.MapBase . __len__       = lambda s   : s.size()
+#gbl.Gaudi.Utils.MapBase . __iter__      = __mapbase_iter__
+#gbl.Gaudi.Utils.MapBase .   keys        = __mapbase_keys__
+#gbl.Gaudi.Utils.MapBase . __iteritems__ = __mapbase_iteritems__
+#gbl.Gaudi.Utils.MapBase .   iteritems   = __mapbase_iteritems__
+#gbl.Gaudi.Utils.MapBase .   items       = __mapbase_items__
+#gbl.Gaudi.Utils.MapBase .   values      = __mapbase_values__
+#gbl.Gaudi.Utils.MapBase . __contains__  = __mapbase_contains__
+#gbl.Gaudi.Utils.MapBase .   has_key     = __mapbase_contains__
+#gbl.Gaudi.Utils.MapBase .   get         = __mapbase_get__
+#gbl.Gaudi.Utils.MapBase . __str__       = __mapbase_str__
+#gbl.Gaudi.Utils.MapBase . __repr__      = __mapbase_str__
+#gbl.Gaudi.Utils.MapBase . __setitem__   = __mapbase_setitem__
+#gbl.Gaudi.Utils.MapBase . __delitem__   = __mapbase_delitem__
+#gbl.Gaudi.Utils.MapBase . __getitem__   = lambda s,key : s.at ( key )
