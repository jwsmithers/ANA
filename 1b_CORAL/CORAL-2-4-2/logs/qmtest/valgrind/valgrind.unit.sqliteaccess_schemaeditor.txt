==xxxxx== Memcheck, a memory error detector
==xxxxx== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==xxxxx== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==xxxxx== Command: test_unit_SQLiteAccess_SchemaEditor
==xxxxx== Parent PID: xxxxx
==xxxxx== 
--xxxxx-- 
--xxxxx-- Valgrind options:
--xxxxx--    -v
--xxxxx--    --leak-check=full
--xxxxx--    --show-reachable=yes
--xxxxx--    --error-limit=no
--xxxxx--    --log-file=/home/avalassi/CORAL/CORAL_2_3_26/src/logs/qmtest/valgrind/x86_64-slc5-gcc43-dbg/valgrind.unit.sqliteaccess_schemaeditor.txt
--xxxxx--    --suppressions=/home/avalassi/CORAL/CORAL_2_3_26/src/config/qmtest/valgrind.supp
--xxxxx--    --gen-suppressions=all
--xxxxx--    --num-callers=50
--xxxxx--    --track-origins=yes
--xxxxx-- Contents of /proc/version:
--xxxxx--   Linux version 2.6.18-308.20.1.el5 (mockbuild@lxdist03) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-52)) #1 SMP Wed Nov 14 10:31:58 CET 2012
--xxxxx-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--xxxxx-- Page sizes: currently 4096, max supported 4096
--xxxxx-- Valgrind library directory: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc43-dbg/tests/bin/test_unit_SQLiteAccess_SchemaEditor (0x400000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind/memcheck-amd64-linux (0x38000000)
--xxxxx--    object doesn't have a dynamic symbol table
--xxxxx-- Reading syms from /lib64/ld-2.5.so (0x3026000000)
--xxxxx-- Reading suppressions file: /home/avalassi/CORAL/CORAL_2_3_26/src/config/qmtest/valgrind.supp
--xxxxx-- Reading suppressions file: /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind/default.supp
==xxxxx== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-xxxxx-by-avalassi-on-lxmrra5001.cern.ch
==xxxxx== 
==xxxxx== TO CONTROL THIS PROCESS USING vgdb (which you probably
==xxxxx== don't want to do, unless you know exactly what you're doing,
==xxxxx== or are doing some strange experiment):
==xxxxx==   /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx ...command...
==xxxxx== 
==xxxxx== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==xxxxx==   /path/to/gdb test_unit_SQLiteAccess_SchemaEditor
==xxxxx== and then give GDB the following command
==xxxxx==   target remote | /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind/../../bin/vgdb --pid=xxxxx
==xxxxx== --pid is optional if only one valgrind process is running
==xxxxx== 
--xxxxx-- REDIR: 0x3026014730 (strlen) redirected to 0x38045f87 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind/vgpreload_core-amd64-linux.so (0x4803000)
--xxxxx-- Reading syms from /afs/cern.ch/sw/lcg/external/valgrind/3.7.0p1/x86_64-slc5-gcc43-opt/lib/valgrind/vgpreload_memcheck-amd64-linux.so (0x4a05000)
--xxxxx-- REDIR: 0x3026014550 (index) redirected to 0x4a09690 (index)
--xxxxx-- REDIR: 0x3026014700 (strcmp) redirected to 0x4a09ff0 (strcmp)
--xxxxx-- Reading syms from /lib64/libdl-2.5.so (0x3027000000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc43-dbg/lib/liblcg_CoralCommon.so (0x4c22000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc43-dbg/lib/liblcg_CoralKernel.so (0x4c99000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc43-dbg/lib/liblcg_RelationalAccess.so (0x4cd7000)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc43-dbg/lib/liblcg_CoralBase.so (0x4d18000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc43-opt/lib/libboost_filesystem-gcc43-mt-1_48.so.1.48.0 (0x4d8e000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc43-opt/lib/libboost_date_time-gcc43-mt-1_48.so.1.48.0 (0x4fac000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc43-opt/lib/libboost_system-gcc43-mt-1_48.so.1.48.0 (0x51bd000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/Boost/1.48.0_python2.6/x86_64-slc5-gcc43-opt/lib/libboost_thread-gcc43-mt-1_48.so.1.48.0 (0x53c0000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/sqlite/3070900/x86_64-slc5-gcc43-opt/lib/libsqlite3.so.0.8.6 (0x55da000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/CppUnit/1.12.1_p1/x86_64-slc5-gcc43-opt/lib/libcppunit-1.12.so.1 (0x587f000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.3.6/x86_64-slc5/lib64/libstdc++.so.6.0.10 (0x5ac7000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libm-2.5.so (0x3026800000)
--xxxxx-- Reading syms from /cvmfs/sft.cern.ch/lcg/external/gcc/4.3.6/x86_64-slc5/lib64/libgcc_s.so.1 (0x5dce000)
--xxxxx--    object doesn't have a symbol table
--xxxxx-- Reading syms from /lib64/libpthread-2.5.so (0x3027400000)
--xxxxx-- Reading syms from /lib64/libc-2.5.so (0x3026400000)
--xxxxx-- Reading syms from /lib64/librt-2.5.so (0x3027800000)
--xxxxx-- REDIR: 0x3026479b80 (memset) redirected to 0x4a0b550 (memset)
--xxxxx-- REDIR: 0x302647afc0 (memcpy) redirected to 0x4a0a610 (memcpy)
--xxxxx-- REDIR: 0x3026478cc0 (rindex) redirected to 0x4a09480 (rindex)
--xxxxx-- REDIR: 0x30264788d0 (strlen) redirected to 0x4a09a10 (strlen)
--xxxxx-- REDIR: 0x5b87950 (operator new(unsigned long)) redirected to 0x4a08fa2 (operator new(unsigned long))
--xxxxx-- REDIR: 0x3026478b50 (strncmp) redirected to 0x4a09e50 (strncmp)
--xxxxx-- REDIR: 0x3026478350 (strcmp) redirected to 0x4a09f30 (strcmp)
--xxxxx-- REDIR: 0x3026473760 (calloc) redirected to 0x4a0794e (calloc)
--xxxxx-- REDIR: 0x5b861a0 (operator delete(void*)) redirected to 0x4a07fab (operator delete(void*))
--xxxxx-- REDIR: 0x3026473b40 (malloc) redirected to 0x4a08689 (malloc)
--xxxxx-- Reading syms from /home/avalassi/CORAL/CORAL_2_3_26/x86_64-slc5-gcc43-dbg/lib/liblcg_SQLiteAccess.so (0x63e8000)
--xxxxx-- REDIR: 0x3026015880 (stpcpy) redirected to 0x4a0b480 (stpcpy)
--xxxxx-- REDIR: 0x30264781a0 (index) redirected to 0x4a09550 (index)
--xxxxx-- REDIR: 0x302647bd70 (strchrnul) redirected to 0x4a0b840 (strchrnul)
--xxxxx-- REDIR: 0x302647a6b0 (mempcpy) redirected to 0x4a0b8b0 (mempcpy)
--xxxxx-- REDIR: 0x30264715f0 (free) redirected to 0x4a08299 (free)
--xxxxx-- REDIR: 0x302647acc0 (stpcpy) redirected to 0x4a0b210 (stpcpy)
--xxxxx-- REDIR: 0x5b87a80 (operator new[](unsigned long)) redirected to 0x4a08c1a (operator new[](unsigned long))
--xxxxx-- REDIR: 0x30264793c0 (memchr) redirected to 0x4a0a0b0 (memchr)
--xxxxx-- REDIR: 0x30264789c0 (strnlen) redirected to 0x4a09990 (strnlen)
--xxxxx-- REDIR: 0x5b861e0 (operator delete[](void*)) redirected to 0x4a07c27 (operator delete[](void*))
--xxxxx-- REDIR: 0xffffffffff600000 (???) redirected to 0x38045f73 (vgPlain_amd64_linux_REDIR_FOR_vgettimeofday)
--xxxxx-- REDIR: 0x3026479090 (strstr) redirected to 0x4a0ba70 (strstr)
--xxxxx-- REDIR: 0x3026478390 (strcpy) redirected to 0x4a09a50 (strcpy)
--xxxxx-- REDIR: 0x3026474060 (realloc) redirected to 0x4a0873a (realloc)
--xxxxx-- REDIR: 0x30264799e0 (memmove) redirected to 0x4a0b5f0 (memmove)
--xxxxx-- REDIR: 0x3026479540 (bcmp) redirected to 0x4a0b190 (bcmp)
==xxxxx== Syscall param write(buf) points to uninitialised byte(s)
==xxxxx==    at 0x302740D930: __write_nocancel (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x56640C0: unixWrite (sqlite3.c:27649)
==xxxxx==    by 0x55F1CEF: subjournalPage (sqlite3.c:14480)
==xxxxx==    by 0x560071C: pager_write (sqlite3.c:42729)
==xxxxx==    by 0x56122E9: sqlite3PagerWrite (sqlite3.c:42841)
==xxxxx==    by 0x56159DD: insertCell (sqlite3.c:53622)
==xxxxx==    by 0x562D42A: sqlite3BtreeInsert (sqlite3.c:54893)
==xxxxx==    by 0x5654016: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x5637E54: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x64A004E: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x64A1061: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x64B16AF: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x6491EBD: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0x40907E: main (schemaEditor.cpp:89)
==xxxxx==  Address 0x6022313 is 131 bytes inside a block of size 1,280 alloc'd
==xxxxx==    at 0x4A0870B: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x56612EE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x55E4338: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x55E440F: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x55E65D2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x55FC7ED: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x55F0EFC: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x5611E43: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x5611FD7: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x561408C: getAndInitPage (sqlite3.c:49689)
==xxxxx==    by 0x5614108: moveToChild (sqlite3.c:52241)
==xxxxx==    by 0x562CC65: sqlite3BtreeNext (sqlite3.c:52763)
==xxxxx==    by 0x56557A3: sqlite3VdbeExec (sqlite3.c:67925)
==xxxxx==    by 0x5637E54: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x563BC4E: sqlite3_exec (sqlite3.c:89119)
==xxxxx==    by 0x563C72F: sqlite3InitOne (sqlite3.c:92161)
==xxxxx==    by 0x563C921: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x563C9E0: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x563D32F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x563D48F: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x55E8BCB: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x55EAC8E: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x561DFD5: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x5632A62: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x5635179: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x56372D8: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x56376EA: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x5637BA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x64A1A62: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x6487085: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x648ED5E: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x648AD14: coral::SQLiteAccess::Schema::dropIfExistsTable(std::string const&) (Schema.cpp:201)
==xxxxx==    by 0x406EF8: main (schemaEditor.cpp:55)
==xxxxx==  Uninitialised value was created by a heap allocation
==xxxxx==    at 0x4A0870B: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x56612EE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x55E4338: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x55E440F: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x55E65D2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x562D633: sqlite3BtreeInsert (sqlite3.c:36136)
==xxxxx==    by 0x5654016: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x5637E54: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x64A004E: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x64A1061: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x64917DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0x40796D: main (schemaEditor.cpp:63)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Param
   write(buf)
   fun:__write_nocancel
   fun:unixWrite
   fun:subjournalPage
   fun:pager_write
   fun:sqlite3PagerWrite
   fun:insertCell
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:main
}
==xxxxx== 
==xxxxx== HEAP SUMMARY:
==xxxxx==     in use at exit: 2,232 bytes in 8 blocks
==xxxxx==   total heap usage: 6,722 allocs, 6,714 frees, 3,015,008 bytes allocated
==xxxxx== 
==xxxxx== Searching for pointers to 8 not-freed blocks
==xxxxx== Checked 396,000 bytes
==xxxxx== 
==xxxxx== LEAK SUMMARY:
==xxxxx==    definitely lost: 0 bytes in 0 blocks
==xxxxx==    indirectly lost: 0 bytes in 0 blocks
==xxxxx==      possibly lost: 0 bytes in 0 blocks
==xxxxx==    still reachable: 0 bytes in 0 blocks
==xxxxx==         suppressed: 2,232 bytes in 8 blocks
==xxxxx== 
==xxxxx== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
==xxxxx== 
==xxxxx== 1 errors in context 1 of 1:
==xxxxx== Syscall param write(buf) points to uninitialised byte(s)
==xxxxx==    at 0x302740D930: __write_nocancel (in /lib64/libpthread-2.5.so)
==xxxxx==    by 0x56640C0: unixWrite (sqlite3.c:27649)
==xxxxx==    by 0x55F1CEF: subjournalPage (sqlite3.c:14480)
==xxxxx==    by 0x560071C: pager_write (sqlite3.c:42729)
==xxxxx==    by 0x56122E9: sqlite3PagerWrite (sqlite3.c:42841)
==xxxxx==    by 0x56159DD: insertCell (sqlite3.c:53622)
==xxxxx==    by 0x562D42A: sqlite3BtreeInsert (sqlite3.c:54893)
==xxxxx==    by 0x5654016: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x5637E54: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x64A004E: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x64A1061: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x64B16AF: coral::SQLiteAccess::TableDescriptionProxy::createIndex(std::string const&, std::vector<std::string, std::allocator<std::string> > const&, bool, std::string) (TableDescriptionProxy.cpp:971)
==xxxxx==    by 0x6491EBD: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:139)
==xxxxx==    by 0x40907E: main (schemaEditor.cpp:89)
==xxxxx==  Address 0x6022313 is 131 bytes inside a block of size 1,280 alloc'd
==xxxxx==    at 0x4A0870B: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x56612EE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x55E4338: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x55E440F: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x55E65D2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x55FC7ED: pcache1Fetch (sqlite3.c:36100)
==xxxxx==    by 0x55F0EFC: sqlite3PcacheFetch (sqlite3.c:35438)
==xxxxx==    by 0x5611E43: sqlite3PagerAcquire (sqlite3.c:42314)
==xxxxx==    by 0x5611FD7: btreeGetPage (sqlite3.c:49636)
==xxxxx==    by 0x561408C: getAndInitPage (sqlite3.c:49689)
==xxxxx==    by 0x5614108: moveToChild (sqlite3.c:52241)
==xxxxx==    by 0x562CC65: sqlite3BtreeNext (sqlite3.c:52763)
==xxxxx==    by 0x56557A3: sqlite3VdbeExec (sqlite3.c:67925)
==xxxxx==    by 0x5637E54: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x563BC4E: sqlite3_exec (sqlite3.c:89119)
==xxxxx==    by 0x563C72F: sqlite3InitOne (sqlite3.c:92161)
==xxxxx==    by 0x563C921: sqlite3Init (sqlite3.c:92227)
==xxxxx==    by 0x563C9E0: sqlite3ReadSchema (sqlite3.c:92264)
==xxxxx==    by 0x563D32F: sqlite3LocateTable (sqlite3.c:79746)
==xxxxx==    by 0x563D48F: selectExpander (sqlite3.c:95937)
==xxxxx==    by 0x55E8BCB: sqlite3WalkSelect (sqlite3.c:71681)
==xxxxx==    by 0x55EAC8E: sqlite3SelectPrep (sqlite3.c:96133)
==xxxxx==    by 0x561DFD5: sqlite3Select (sqlite3.c:96473)
==xxxxx==    by 0x5632A62: sqlite3Parser (sqlite3.c:108286)
==xxxxx==    by 0x5635179: sqlite3RunParser (sqlite3.c:110094)
==xxxxx==    by 0x56372D8: sqlite3Prepare (sqlite3.c:92434)
==xxxxx==    by 0x56376EA: sqlite3LockAndPrepare (sqlite3.c:92533)
==xxxxx==    by 0x5637BA4: sqlite3_prepare (sqlite3.c:92596)
==xxxxx==    by 0x64A1A62: coral::SQLiteAccess::SQLiteStatement::prepare(std::string const&) (SQLiteStatement.cpp:62)
==xxxxx==    by 0x6487085: coral::SQLiteAccess::Schema::readTablesFromDataDictionary() const (Schema.cpp:490)
==xxxxx==    by 0x648ED5E: coral::SQLiteAccess::Schema::existsTable(std::string const&) const (Schema.cpp:85)
==xxxxx==    by 0x648AD14: coral::SQLiteAccess::Schema::dropIfExistsTable(std::string const&) (Schema.cpp:201)
==xxxxx==    by 0x406EF8: main (schemaEditor.cpp:55)
==xxxxx==  Uninitialised value was created by a heap allocation
==xxxxx==    at 0x4A0870B: malloc (vg_replace_malloc.c:263)
==xxxxx==    by 0x56612EE: sqlite3MemMalloc (sqlite3.c:14935)
==xxxxx==    by 0x55E4338: mallocWithAlarm (sqlite3.c:18450)
==xxxxx==    by 0x55E440F: sqlite3Malloc (sqlite3.c:18483)
==xxxxx==    by 0x55E65D2: pcache1Alloc (sqlite3.c:36029)
==xxxxx==    by 0x562D633: sqlite3BtreeInsert (sqlite3.c:36136)
==xxxxx==    by 0x5654016: sqlite3VdbeExec (sqlite3.c:67469)
==xxxxx==    by 0x5637E54: sqlite3_step (sqlite3.c:61844)
==xxxxx==    by 0x64A004E: coral::SQLiteAccess::SQLiteStatement::step() (SQLiteStatement.cpp:84)
==xxxxx==    by 0x64A1061: coral::SQLiteAccess::SQLiteStatement::execute() (SQLiteStatement.cpp:241)
==xxxxx==    by 0x64917DF: coral::SQLiteAccess::Schema::createTable(coral::ITableDescription const&) (Schema.cpp:126)
==xxxxx==    by 0x40796D: main (schemaEditor.cpp:63)
==xxxxx== 
{
   <insert_a_suppression_name_here>
   Memcheck:Param
   write(buf)
   fun:__write_nocancel
   fun:unixWrite
   fun:subjournalPage
   fun:pager_write
   fun:sqlite3PagerWrite
   fun:insertCell
   fun:sqlite3BtreeInsert
   fun:sqlite3VdbeExec
   fun:sqlite3_step
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement4stepEv
   fun:_ZN5coral12SQLiteAccess15SQLiteStatement7executeEv
   fun:_ZN5coral12SQLiteAccess21TableDescriptionProxy11createIndexERKSsRKSt6vectorISsSaISsEEbSs
   fun:_ZN5coral12SQLiteAccess6Schema11createTableERKNS_17ITableDescriptionE
   fun:main
}
--xxxxx-- 
--xxxxx-- used_suppression:      7 <coral_PluginManager_loadLibrary_dlopen_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:      1 <coral_PluginManager_loadLibrary_dlsym_alloc_FAKE_LEAK>
--xxxxx-- used_suppression:      7 dl-hack3
==xxxxx== 
==xxxxx== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
