package CORAL

#============================================================================
# Project components
#============================================================================

#----------------------------------------------------------------------------
# The packages providing public API
#----------------------------------------------------------------------------

use CoralBase *
use RelationalAccess *

#----------------------------------------------------------------------------
# The packages providing the developer-level interfaces
#----------------------------------------------------------------------------

use CoralKernel *
use CoralCommon *
use PyCoral     *

#----------------------------------------------------------------------------
# The packages providing the plugin libraries
#----------------------------------------------------------------------------

use ConnectionService *
use RelationalService *
use MonitoringService *
use XMLAuthenticationService *
use EnvironmentAuthenticationService *
use XMLLookupService *

# LFCReplicaSvc only on Linux (except SLC6, see bug #86877)
# [This has been dropped as of LCCMT_63]
###macro select_lfcreplicaservice  "LFCReplicaService *" \
###      target-slc6 "" \
###      target-darwin "" \
###      target-winxp ""
###use $(select_lfcreplicaservice)

use OracleAccess *
use MySQLAccess *
use SQLiteAccess *

# Frontier on all platforms but windows
macro select_frontieraccess "FrontierAccess *" \
    target-winxp ""
use $(select_frontieraccess) 

#----------------------------------------------------------------------------
# The CORAL_SERVER components (only on Linux SLC5/SLC6 and OSX)
#----------------------------------------------------------------------------
# [NB Could also use CORAL_SERVER directly: it no longer sets CORAL_AUTH_PATH]

macro select_coralmonitor \
  "CoralMonitor * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralserverbase \
  "CoralServerBase * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralaccess \
  "CoralAccess * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralserver \
  "CoralServer * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralsockets \
  "CoralSockets * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralstubs \
  "CoralStubs * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralserverproxy \
  "CoralServerProxy * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""
macro select_coralauthenticationservice \
  "CoralAuthenticationService * CORAL_SERVER" \
  target-armv7l "" \
  target-winxp ""

use $(select_coralmonitor)
use $(select_coralserverbase)
use $(select_coralaccess)
use $(select_coralserver)
use $(select_coralsockets)
use $(select_coralstubs)
use $(select_coralserverproxy)
use $(select_coralauthenticationservice)

#----------------------------------------------------------------------------
# The integration tests
#----------------------------------------------------------------------------

use Tests *

#============================================================================
# Private dependencies, build rules and runtime
#============================================================================

private

#----------------------------------------------------------------------------
# CORAL plugin runtime
#----------------------------------------------------------------------------

use uuid v* LCG_Interfaces
use XercesC v* LCG_Interfaces 

use oracle v* LCG_Interfaces
use mysql  v* LCG_Interfaces
use sqlite v* LCG_Interfaces
use Frontier_Client v* LCG_Interfaces

# Workaround to set correctly oracle charset (to be put in LCG_Interfaces)
set NLS_LANG american_america.WE8ISO8859P1

# Workaround for obsolete tnsnames.ora in the LHCb cvmfs (bug #92294)
set TNS_ADMIN $(oracle_home)/admin LOCAL /afs/cern.ch/sw/lcg/external/oracle/$(oracle_native_version)/$(LCG_system)/admin

#----------------------------------------------------------------------------
# CORAL Grid runtime
#----------------------------------------------------------------------------

# Add dependency on LFC for the LFCReplicaSvc component
# [This has been dropped as of LCCMT_63]
###use lfc v* LCG_Interfaces

# Add path to voms-proxy-init for LFCReplicaSvc tests
###use vomsclients v* LCG_Interfaces

#----------------------------------------------------------------------------
# CORAL test runtime
#----------------------------------------------------------------------------

use CppUnit v* LCG_Interfaces

use QMtest * LCG_Interfaces
set QMTEST_CLASS_PATH "$(config_cmtpath)/config/qmtest" target-winxp "$(config_cmtpath)\config\qmtest"

use valgrind * LCG_Interfaces

use igprof * LCG_Interfaces

use tcmalloc * LCG_Interfaces

# Workaround for "failed to start tool 'memcheck'" issue on 32bit platforms?
# See http://daveti.blog.com/2012/08/01/valgrind-dynamic-code-analysis-tool-part-v-valgrind-failed-to-start-tool-memcheck-for-platform/
###set VALGRIND_LIB "$(valgrind_home)/lib/valgrind"

# CMTCONFIG three-digit id to use unique tables/ports in tests (bug #102696)
# NB: every new development or supported platform must be added here!
set CORAL_CMTCONFIG_HASH      999 \
    i686-slc5-gcc43-opt       501 \
    i686-slc5-gcc43-dbg       502 \
    x86_64-slc5-gcc43-opt     503 \
    x86_64-slc5-gcc43-dbg     504 \
    i686-slc5-gcc46-opt       511 \
    i686-slc5-gcc46-dbg       512 \
    x86_64-slc5-gcc46-opt     513 \
    x86_64-slc5-gcc46-dbg     514 \
    i686-slc5-icc13-opt       521 \
    i686-slc5-icc13-dbg       522 \
    x86_64-slc5-icc13-opt     523 \
    x86_64-slc5-icc13-dbg     524 \
    i686-slc6-gcc46-opt       601 \
    i686-slc6-gcc46-dbg       602 \
    x86_64-slc6-gcc46-opt     603 \
    x86_64-slc6-gcc46-dbg     604 \
    i686-slc6-gcc46-cov       605 \
    i686-slc6-gcc46-pro       606 \
    x86_64-slc6-gcc46-cov     607 \
    x86_64-slc6-gcc46-pro     608 \
    i686-slc6-gcc47-opt       611 \
    i686-slc6-gcc47-dbg       612 \
    x86_64-slc6-gcc47-opt     613 \
    x86_64-slc6-gcc47-dbg     614 \
    i686-slc6-gcc48-opt       621 \
    i686-slc6-gcc48-dbg       622 \
    x86_64-slc6-gcc48-opt     623 \
    x86_64-slc6-gcc48-dbg     624 \
    i686-slc6-clang32-opt     631 \
    i686-slc6-clang32-dbg     632 \
    x86_64-slc6-clang32-opt   633 \
    x86_64-slc6-clang32-dbg   634 \
    i686-slc6-clang33-opt     641 \
    i686-slc6-clang33-dbg     642 \
    x86_64-slc6-clang33-opt   643 \
    x86_64-slc6-clang33-dbg   644 \
    i686-slc6-icc13-opt       651 \
    i686-slc6-icc13-dbg       652 \
    x86_64-slc6-icc13-opt     653 \
    x86_64-slc6-icc13-dbg     654 \
    i686-slc6-gccmax-opt      691 \
    i686-slc6-gccmax-dbg      692 \
    x86_64-slc6-gccmax-opt    693 \
    x86_64-slc6-gccmax-dbg    694 \
    i386-mac106-gcc42-opt     701 \
    i386-mac106-gcc42-dbg     702 \
    x86_64-mac106-gcc42-opt   703 \
    x86_64-mac106-gcc42-dbg   704 \
    x86_64-mac108-gcc42-opt   803 \
    x86_64-mac108-gcc42-dbg   804 \
    x86_64-mac108-llvm42-opt  813 \
    x86_64-mac108-llvm42-dbg  814 \
    x86_64-mac108-clang42-opt 823 \
    x86_64-mac108-clang42-dbg 824 \
    armv7l-fc21-gcc49-opt     826 \
    armv7l-fc21-gcc49-dbg     827

#----------------------------------------------------------------------------
# Actions and build rules - install scripts
#----------------------------------------------------------------------------

macro  scrdir "$(CMTINSTALLAREA)/$(tag)/bin" \
       target-winxp "$(CMTINSTALLAREA)\$(tag)\bin"
action install_scripts "mkdir -p $(scrdir); cp -r ../scripts/*.* $(scrdir)/." \
       target-winxp "xcopy /I/S/Y/Q ..\scripts\*.* $(scrdir)\."

# Use the valgrind suppression file installed with the scripts
set CORAL_TESTSUITE_VALGRIND_SUPP "$(scrdir)/valgrind.supp"

# Append to 'constituents' to execute an action in 'cmt make'
# (append to 'all_constituents' to execute it only in 'cmt make all').
# Remove the action from cmt_actions_constituents so that the action 
# is not executed twice in 'cmt make all_groups' (it executes all actions).
macro_append constituents "install_scripts"
macro_remove cmt_actions_constituents "install_scripts"

#----------------------------------------------------------------------------
# Actions and build rules - tests, utilities and examples
#----------------------------------------------------------------------------

# Fake target for tests
action tests "echo No tests in this package"
macro_remove cmt_actions_constituents "tests"

# Fake target for utilities
action utilities "echo No utilities in this package"
macro_remove cmt_actions_constituents "utilities"

# Fake target for examples
action examples "echo No examples in this package"
macro_remove cmt_actions_constituents "examples"
 
#============================================================================
