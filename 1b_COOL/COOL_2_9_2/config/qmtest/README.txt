How-To use COOL QMTest test-suite
---------------------------------

0. Quick & Dirty Way
   -----------------

Prepare the environment to use CMT, then go to the directory src/config/cmt and
type the command:

cmt run 'cd ../qmtest ; qmtest run -f full -o $CMTCONFIG.qmr cool | tee $CMTCONFIG.qmr.summary'


1. Initialization
   --------------

To run the tests, you need to have the environment correctly configured with all
the needed directories in PATH and LD_LIBRARY_PATH.  To do it, it is enough to
"source" the script setup.(c)sh that you find in the directory src/config/cmt.

  Note: it is possible to run a command in the correct environment in a
        separate shell by going into the directory src/config/cmt and
        executing:
        
           cmt run <command>

The QMTest utility needs to be executed into the appropriate directory, so, once
you have the environment ready, you must move to the directory
src/config/qmtest.

Summary:

cd src/config/cmt
source setup.csh
cd ../qmtest


2. Using QMTest
   ------------

All the operations you can do with QMTest are accessible via the appliation 
'qmtest'.  Here is the output of 'qmtest --help'.

/==============================================================================\
Usage: qmtest [ OPTION... ] COMMAND [ COMMAND-OPTION... ] [ ARGUMENT... ]

Options:
  -h, --help                    : Display usage summary.
      --version                 : Display version information.
  -D, --tdb PATH                : Path to the test database.

Commands:
  create                        : Create (or update) an extension.
  create-target                 : Create (or update) a target specification.
  create-tdb                    : Create a new test database.
  gui                           : Start the QMTest GUI.
  extensions                    : List extension classes.
  help                          : Display usage summary.
  register                      : Register an extension class.
  remote                        : Run QMTest as a remote server.
  report                        : Generate report from one or more test results.
  run                           : Run one or more tests.
  summarize                     : Summarize results from a test run.

Invoke
  qmtest COMMAND --help
for information about COMMAND-OPTIONS and ARGUMENTS.
\==============================================================================/

The most useful commands are 'run' and 'summarize'. The first one is used to run
a test or a suite of tests and the second is to convert the result output file
generated by 'run' into a human readable format.

These are the currently available test:

/==============================================================================\
coolkernel.recordadapter
coolkernel.folderspec
coolkernel.record
relationalcool.payloadspecification
relationalcool.channelselection
relationalcool.hvspathhandler
relationalcool.objectid
relationalcool.relationaldatabaseid
relationalcool.utility_methods
relationalcool.versionnumber
relationalcool.mysql.raldatabase
relationalcool.mysql.hvstags
relationalcool.mysql.raldatabase_extendedspec
relationalcool.mysql.raldatabasesvc
relationalcool.mysql.ralobjectiterator
relationalcool.mysql.ralobjectmgr
relationalcool.mysql.ralobjecttable
relationalcool.mysql.ralsequence
relationalcool.mysql.relationalfolder
relationalcool.mysql.relationalfolderset
relationalcool.oracle.raldatabase
relationalcool.oracle.hvstags
relationalcool.oracle.raldatabase_extendedspec
relationalcool.oracle.raldatabasesvc
relationalcool.oracle.ralobjectiterator
relationalcool.oracle.ralobjectmgr
relationalcool.oracle.ralobjecttable
relationalcool.oracle.ralsequence
relationalcool.oracle.relationalfolder
relationalcool.oracle.relationalfolderset
relationalcool.sqlite.raldatabase
relationalcool.sqlite.hvstags
relationalcool.sqlite.raldatabase_extendedspec
relationalcool.sqlite.raldatabasesvc
relationalcool.sqlite.ralobjectiterator
relationalcool.sqlite.ralobjectmgr
relationalcool.sqlite.ralobjecttable
relationalcool.sqlite.ralsequence
relationalcool.sqlite.relationalfolder
relationalcool.sqlite.relationalfolderset
pycool.coralblob
pycool.coralattributelist
pycool.channelselection
pycool.recordspecification
pycool.import_pycool
pycool.mysql.idatabase
pycool.mysql.channels
pycool.mysql.coolfunctionality
pycool.mysql.idatabasesvc
pycool.mysql.ifolder
pycool.mysql.ifolderset
pycool.mysql.iobject
pycool.mysql.iobjectiterator
pycool.oracle.idatabase
pycool.oracle.channels
pycool.oracle.coolfunctionality
pycool.oracle.idatabasesvc
pycool.oracle.ifolder
pycool.oracle.ifolderset
pycool.oracle.iobject
pycool.oracle.iobjectiterator
pycool.sqlite.idatabase
pycool.sqlite.channels
pycool.sqlite.coolfunctionality
pycool.sqlite.idatabasesvc
pycool.sqlite.ifolder
pycool.sqlite.ifolderset
pycool.sqlite.iobject
pycool.sqlite.iobjectiterator
pycoolutilities.frontier.regression
pycoolutilities.mysql.evolution_130
pycoolutilities.mysql.evolution_200
pycoolutilities.mysql.pycoolconsole
pycoolutilities.mysql.pycoolcopy
pycoolutilities.mysql.pycoolpayloader
pycoolutilities.mysql.pycooltool
pycoolutilities.mysql.regression
pycoolutilities.mysql.replication
pycoolutilities.oracle.evolution_130
pycoolutilities.oracle.evolution_200
pycoolutilities.oracle.pycoolconsole
pycoolutilities.oracle.pycoolcopy
pycoolutilities.oracle.pycoolpayloader
pycoolutilities.oracle.pycooltool
pycoolutilities.oracle.regression
pycoolutilities.oracle.replication
pycoolutilities.sqlite.evolution_130
pycoolutilities.sqlite.evolution_200
pycoolutilities.sqlite.pycoolconsole
pycoolutilities.sqlite.pycoolcopy
pycoolutilities.sqlite.pycoolpayloader
pycoolutilities.sqlite.pycooltool
pycoolutilities.sqlite.regression
pycoolutilities.sqlite.replication
\==============================================================================/


There are also a set suites defined for user commodity:


/==============================================================================\
cool
nightly
no_db
frontier
mysql
oracle
sqlite
coolkernel
relationalcool.no_db
relationalcool.mysql
relationalcool.oracle
relationalcool.sqlite
relationalcool.all
pycool.no_db
pycool.mysql
pycool.oracle
pycool.sqlite
pycool.all
pycoolutilities.frontier
pycoolutilities.mysql
pycoolutilities.oracle
pycoolutilities.sqlite
pycoolutilities.all
\==============================================================================/

The suites 'cool' and 'nightly' are meant, respectively, for the release (all
tests) and for the nightlies (currently all tests, but in principle it could be
different).

To run a test just call:

  qmtest run <test_id>

or, for a suite:

  qmtest run <suite_id>

For example:
/==============================================================================\
# qmtest run no_db
--- TEST RESULTS -------------------------------------------------------------

  coolkernel.folderspec                         : PASS

  coolkernel.record                             : PASS

  coolkernel.recordadapter                      : PASS

  pycool.import_pycool                          : PASS

  pycool.channelselection                       : PASS

  pycool.coralattributelist                     : PASS

  pycool.coralblob                              : PASS

  pycool.recordspecification                    : PASS

  relationalcool.channelselection               : PASS

  relationalcool.hvspathhandler                 : PASS

  relationalcool.objectid                       : PASS

  relationalcool.payloadspecification           : PASS

  relationalcool.relationaldatabaseid           : PASS

  relationalcool.utility_methods                : PASS

  relationalcool.versionnumber                  : PASS

--- TESTS THAT DID NOT PASS --------------------------------------------------

  None.


--- STATISTICS ---------------------------------------------------------------

      15        tests total
      15 (100%) tests PASS
\==============================================================================/
